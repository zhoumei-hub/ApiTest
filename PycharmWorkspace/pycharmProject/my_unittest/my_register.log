2020-06-25 23:47:12,548 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,549 register INFO test_register.py-64 line：测试数据为：{'user': 'python27', 'passwd1': '123456', 'passwd2': '123456', 'check': {'code': 1, 'msg': '注册成功'}}
2020-06-25 23:47:12,549 register INFO test_register.py-67 line：实际运行结果为：{'code': 1, 'msg': '注册成功'}
2020-06-25 23:47:12,549 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,549 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,549 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,550 register INFO test_register.py-64 line：测试数据为：{'user': 'python28', 'passwd1': '123456', 'passwd2': None, 'check': {'code': 0, 'msg': '所有参数不能为空'}}
2020-06-25 23:47:12,550 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '所有参数不能为空'}
2020-06-25 23:47:12,550 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,550 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,550 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,551 register INFO test_register.py-64 line：测试数据为：{'user': 'python28', 'passwd1': None, 'passwd2': '123456', 'check': {'code': 0, 'msg': '所有参数不能为空'}}
2020-06-25 23:47:12,551 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '所有参数不能为空'}
2020-06-25 23:47:12,551 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,551 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,552 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,552 register INFO test_register.py-64 line：测试数据为：{'user': None, 'passwd1': '123456', 'passwd2': '123456', 'check': {'code': 0, 'msg': '所有参数不能为空'}}
2020-06-25 23:47:12,552 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '所有参数不能为空'}
2020-06-25 23:47:12,552 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,553 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,553 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,553 register INFO test_register.py-64 line：测试数据为：{'user': 'python28', 'passwd1': '123456', 'passwd2': '654321', 'check': {'code': 0, 'msg': '两次密码不一致'}}
2020-06-25 23:47:12,553 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '两次密码不一致'}
2020-06-25 23:47:12,553 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,553 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,554 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,554 register INFO test_register.py-64 line：测试数据为：{'user': 'python26', 'passwd1': '111111', 'passwd2': '111111', 'check': {'code': 0, 'msg': '该账户已存在'}}
2020-06-25 23:47:12,554 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '该账户已存在'}
2020-06-25 23:47:12,554 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,554 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
2020-06-25 23:47:12,554 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,555 register INFO test_register.py-64 line：测试数据为：{'user': 'python1234567890123', 'passwd1': '123456', 'passwd2': '123456', 'check': {'code': 0, 'msg': '账号和密码必须在6-18位之间'}}
2020-06-25 23:47:12,555 register INFO test_register.py-67 line：实际运行结果为：{'code': 1, 'msg': '注册成功'}
2020-06-25 23:47:12,555 register ERROR test_register.py-72 line：断言失败，用例不通过！
Traceback (most recent call last):
  File "D:\pycharmProject\my_unittest\test_register.py", line 70, in test_reg
    self.assertEqual(res, case["check"])
  File "D:\python\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1, 'msg': '注册成功'} != {'code': 0, 'msg': '账号和密码必须在6-18位之间'}
- {'code': 1, 'msg': '注册成功'}
+ {'code': 0, 'msg': '账号和密码必须在6-18位之间'}
2020-06-25 23:47:12,559 register INFO test_register.py-63 line：***********  开始执行测试用例 **************
2020-06-25 23:47:12,559 register INFO test_register.py-64 line：测试数据为：{'user': 'python28', 'passwd1': 'python1234567890123', 'passwd2': 'python1234567890123', 'check': {'code': 0, 'msg': '账号和密码必须在6-18位之间'}}
2020-06-25 23:47:12,559 register INFO test_register.py-67 line：实际运行结果为：{'code': 0, 'msg': '账号和密码必须在6-18位之间'}
2020-06-25 23:47:12,560 register INFO test_register.py-75 line：断言成功，用例通过！
2020-06-25 23:47:12,560 register INFO test_register.py-76 line：***********  测试用例执行结束 **************
