2019-10-12 09:36:21,394 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 09:36:21,395 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 09:36:21,395 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 09:36:21,396 - INFO: ('the mock_id flag is:', '0')
2019-10-12 09:39:25,256 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 09:39:25,257 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 09:39:25,258 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 09:39:25,258 - INFO: ('the mock_id flag is:', '0')
2019-10-12 09:39:25,265 - INFO: ('receive the dubbo request ...',)
2019-10-12 09:39:25,293 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 09:39:25,293 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 09:39:25,293 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 09:39:25,293 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 09:39:25,294 - INFO: ('No need to use mock data,return ...',)
2019-10-12 09:39:25,294 - INFO: ('------------------ python return result ------------------',)
2019-10-12 09:41:50,331 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 09:41:50,332 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 09:41:50,332 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 09:41:50,332 - INFO: ('the mock_id flag is:', '0')
2019-10-12 09:41:50,339 - INFO: ('receive the dubbo request ...',)
2019-10-12 09:41:50,353 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 09:41:50,354 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 09:41:50,354 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 09:41:50,354 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 09:41:50,354 - INFO: ('No need to use mock data,return ...',)
2019-10-12 09:41:50,354 - INFO: ('------------------ python return result ------------------',)
2019-10-12 09:42:54,239 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 09:42:54,240 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 09:42:54,240 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 09:42:54,240 - INFO: ('the mock_id flag is:', '0')
2019-10-12 09:42:54,251 - INFO: ('receive the dubbo request ...',)
2019-10-12 09:42:54,267 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 09:42:54,268 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 09:42:54,268 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 09:42:54,268 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 09:42:54,268 - INFO: ('No need to use mock data,return ...',)
2019-10-12 09:42:54,269 - INFO: ('------------------ python return result ------------------',)
2019-10-12 09:49:20,233 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 09:49:20,233 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 09:49:20,234 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 09:49:20,234 - INFO: ('the mock_id flag is:', '0')
2019-10-12 09:49:20,246 - INFO: ('receive the dubbo request ...',)
2019-10-12 09:49:20,263 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 09:49:20,263 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 09:49:20,264 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 09:49:20,264 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 09:49:20,264 - INFO: ('No need to use mock data,return ...',)
2019-10-12 09:49:20,264 - INFO: ('------------------ python return result ------------------',)
2019-10-12 10:13:18,047 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 10:13:18,048 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 10:13:18,048 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 10:13:18,049 - INFO: ('the mock_id flag is:', '0')
2019-10-12 10:13:18,063 - INFO: ('receive the dubbo request ...',)
2019-10-12 10:13:18,083 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 10:13:18,083 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 10:13:18,083 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 10:13:18,083 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 10:13:18,084 - INFO: ('No need to use mock data,return ...',)
2019-10-12 10:13:18,084 - INFO: ('------------------ python return result ------------------',)
2019-10-12 10:13:18,098 - INFO: ('id":21,"areaCode":"34","areaName":"河北","status":0 is not in actual result ',)
2019-10-12 10:17:02,130 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 10:17:02,130 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 10:17:02,131 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 10:17:02,131 - INFO: ('the mock_id flag is:', '0')
2019-10-12 10:17:02,137 - INFO: ('receive the dubbo request ...',)
2019-10-12 10:17:02,159 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 10:17:02,159 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 10:17:02,159 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 10:17:02,159 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 10:17:02,159 - INFO: ('No need to use mock data,return ...',)
2019-10-12 10:17:02,159 - INFO: ('------------------ python return result ------------------',)
2019-10-12 10:21:25,232 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 10:21:25,232 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"888"})'))
2019-10-12 10:21:25,232 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 10:21:25,232 - INFO: ('the mock_id flag is:', '0')
2019-10-12 10:21:25,244 - INFO: ('receive the dubbo request ...',)
2019-10-12 10:21:25,267 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-10-12 10:21:25,267 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 10:21:25,267 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 10:21:25,267 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 10:21:25,267 - INFO: ('No need to use mock data,return ...',)
2019-10-12 10:21:25,267 - INFO: ('------------------ python return result ------------------',)
2019-10-12 10:21:25,278 - INFO: ('211 is not in actual result ',)
2019-10-12 10:21:25,278 - INFO: ('53 is not in actual result ',)
2019-10-12 10:21:25,278 - INFO: ('重庆 is not in actual result ',)
2019-10-12 10:21:25,278 - INFO: ('1 is not in actual result ',)
2019-10-12 10:23:50,581 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 10:23:50,582 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"888"})'))
2019-10-12 10:23:50,582 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 10:23:50,582 - INFO: ('the mock_id flag is:', '0')
2019-10-12 10:23:50,592 - INFO: ('receive the dubbo request ...',)
2019-10-12 10:23:50,610 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-10-12 10:23:50,610 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 10:23:50,610 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 10:23:50,610 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 10:23:50,610 - INFO: ('No need to use mock data,return ...',)
2019-10-12 10:23:50,611 - INFO: ('------------------ python return result ------------------',)
2019-10-12 10:31:46,582 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 10:31:46,583 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 10:31:46,584 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 10:31:46,584 - INFO: ('the mock_id flag is:', '0')
2019-10-12 10:31:46,592 - INFO: ('receive the dubbo request ...',)
2019-10-12 10:31:46,608 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 10:31:46,608 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 10:31:46,608 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 10:31:46,608 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 10:31:46,609 - INFO: ('No need to use mock data,return ...',)
2019-10-12 10:31:46,609 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:18:19,832 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:18:19,832 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 14:18:19,832 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:18:19,832 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:18:19,839 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:18:19,854 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 14:18:19,854 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:18:19,854 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:18:19,854 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:18:19,854 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:18:19,854 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:22:33,336 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:22:33,336 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 14:22:33,336 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:22:33,337 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:22:33,343 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:22:33,359 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 14:22:33,359 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:22:33,359 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:22:33,360 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:22:33,360 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:22:33,360 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:23:10,567 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:23:10,568 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 14:23:10,568 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:23:10,568 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:23:10,575 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:23:10,599 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 14:23:10,600 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:23:10,600 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:23:10,600 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:23:10,600 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:23:10,600 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:33:45,819 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:33:45,820 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 14:33:45,820 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:33:45,820 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:33:45,828 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:33:45,850 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 14:33:45,851 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:33:45,851 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:33:45,851 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:33:45,851 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:33:45,851 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:33:45,870 - INFO: ('{"id":91,"areaCode":"41","areaName":"江苏","status":1} is not in actual result ',)
2019-10-12 14:34:12,552 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:34:12,552 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 14:34:12,553 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:34:12,553 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:34:12,558 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:34:12,573 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 14:34:12,573 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:34:12,573 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:34:12,574 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:34:12,574 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:34:12,574 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:34:39,170 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:34:39,170 - INFO: ('python receive message :', ('pms180030001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 14:34:39,170 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:34:39,170 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:34:39,177 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:34:39,193 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 14:34:39,193 - INFO: ('response_return test_case_id is : ', 'pms180030001')
2019-10-12 14:34:39,193 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:34:39,193 - INFO: ('the test case is : ', 'pms180030001')
2019-10-12 14:34:39,193 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:34:39,194 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:34:39,237 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:34:39,237 - INFO: ('python receive message :', ('pms180020001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"888"})'))
2019-10-12 14:34:39,237 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:34:39,237 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:34:39,243 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:34:39,257 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-10-12 14:34:39,258 - INFO: ('response_return test_case_id is : ', 'pms180020001')
2019-10-12 14:34:39,258 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:34:39,258 - INFO: ('the test case is : ', 'pms180020001')
2019-10-12 14:34:39,258 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:34:39,258 - INFO: ('------------------ python return result ------------------',)
2019-10-12 14:34:39,572 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 14:34:39,573 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 14:34:39,573 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 14:34:39,573 - INFO: ('the mock_id flag is:', '0')
2019-10-12 14:34:39,580 - INFO: ('receive the dubbo request ...',)
2019-10-12 14:34:39,599 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 14:34:39,600 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 14:34:39,600 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 14:34:39,600 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 14:34:39,600 - INFO: ('No need to use mock data,return ...',)
2019-10-12 14:34:39,600 - INFO: ('------------------ python return result ------------------',)
2019-10-12 15:37:47,968 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 15:37:47,968 - INFO: ('python receive message :', ('pms180030001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 15:37:47,969 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 15:37:47,969 - INFO: ('the mock_id flag is:', '0')
2019-10-12 15:37:47,975 - INFO: ('receive the dubbo request ...',)
2019-10-12 15:37:48,014 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 15:37:48,014 - INFO: ('response_return test_case_id is : ', 'pms180030001')
2019-10-12 15:37:48,015 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 15:37:48,015 - INFO: ('the test case is : ', 'pms180030001')
2019-10-12 15:37:48,015 - INFO: ('No need to use mock data,return ...',)
2019-10-12 15:37:48,015 - INFO: ('------------------ python return result ------------------',)
2019-10-12 15:38:26,989 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 15:38:26,989 - INFO: ('python receive message :', ('pms180030001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 15:38:26,990 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 15:38:26,990 - INFO: ('the mock_id flag is:', '0')
2019-10-12 15:38:26,998 - INFO: ('receive the dubbo request ...',)
2019-10-12 15:38:27,026 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 15:38:27,026 - INFO: ('response_return test_case_id is : ', 'pms180030001')
2019-10-12 15:38:27,026 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 15:38:27,026 - INFO: ('the test case is : ', 'pms180030001')
2019-10-12 15:38:27,026 - INFO: ('No need to use mock data,return ...',)
2019-10-12 15:38:27,027 - INFO: ('------------------ python return result ------------------',)
2019-10-12 15:50:18,215 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 15:50:18,215 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 15:50:18,215 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 15:50:18,215 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 15:50:18,215 - INFO: ('Need the mook data ...',)
2019-10-12 15:50:18,215 - INFO: ('begin to record the test case into database',)
2019-10-12 15:50:18,215 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 15:50:18,245 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 15:50:18,245 - INFO: ('the query result is:', ((0,),))
2019-10-12 15:50:18,281 - INFO: (True,)
2019-10-12 15:50:18,281 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 15:50:18,379 - INFO: (True,)
2019-10-12 15:50:18,379 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 15:50:18,482 - INFO: (True,)
2019-10-12 15:50:18,482 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 15:50:18,570 - INFO: (True,)
2019-10-12 15:50:18,570 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 15:50:18,570 - INFO: (3,)
2019-10-12 15:50:18,576 - INFO: ('receive the dubbo request ...',)
2019-10-12 15:50:18,981 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"请求参数不合法"}')
2019-10-12 15:50:18,981 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 15:50:18,982 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 15:50:18,982 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 15:50:18,982 - INFO: ('Need to use mock data ....',)
2019-10-12 15:50:18,983 - INFO: ('Begin to user query the mock data',)
2019-10-12 15:50:19,009 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 15:50:19,009 - INFO: ('the query result is:', ((3,),))
2019-10-12 15:50:19,039 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 15:50:19,040 - INFO: ('the query result is:', ((1,),))
2019-10-12 15:50:19,040 - INFO: ('Query the mock_data successfully...',)
2019-10-12 15:50:19,040 - INFO: ('mock_total_num is :', 3)
2019-10-12 15:50:19,041 - INFO: ('mock_succuss_num is :', 1)
2019-10-12 15:50:19,041 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 15:50:19,041 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 15:50:19,041 - INFO: ('------------------ python return result ------------------',)
2019-10-12 15:50:19,063 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:02:46,389 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:02:46,389 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:02:46,389 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:02:46,389 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:02:46,389 - INFO: ('Need the mook data ...',)
2019-10-12 16:02:46,390 - INFO: ('begin to record the test case into database',)
2019-10-12 16:02:46,390 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:02:46,423 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:02:46,424 - INFO: ('the query result is:', ((0,),))
2019-10-12 16:02:46,514 - INFO: (True,)
2019-10-12 16:02:46,515 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 16:02:46,577 - INFO: (True,)
2019-10-12 16:02:46,577 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 16:02:46,630 - INFO: (True,)
2019-10-12 16:02:46,630 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 16:02:46,690 - INFO: (True,)
2019-10-12 16:02:46,691 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 16:02:46,691 - INFO: (3,)
2019-10-12 16:02:46,699 - INFO: ('receive the dubbo request ...',)
2019-10-12 16:02:47,155 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"请求参数不合法"}')
2019-10-12 16:02:47,155 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 16:02:47,156 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 16:02:47,156 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 16:02:47,156 - INFO: ('Need to use mock data ....',)
2019-10-12 16:02:47,156 - INFO: ('Begin to user query the mock data',)
2019-10-12 16:02:47,186 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 16:02:47,187 - INFO: ('the query result is:', ((3,),))
2019-10-12 16:02:47,214 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 16:02:47,214 - INFO: ('the query result is:', ((1,),))
2019-10-12 16:02:47,214 - INFO: ('Query the mock_data successfully...',)
2019-10-12 16:02:47,215 - INFO: ('mock_total_num is :', 3)
2019-10-12 16:02:47,215 - INFO: ('mock_succuss_num is :', 1)
2019-10-12 16:02:47,215 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 16:02:47,215 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 16:02:47,215 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:02:47,231 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:04:15,588 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:04:15,588 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:04:15,588 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:04:15,588 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:04:15,588 - INFO: ('Need the mook data ...',)
2019-10-12 16:04:15,588 - INFO: ('begin to record the test case into database',)
2019-10-12 16:04:15,588 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:04:15,620 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:04:15,620 - INFO: ('the query result is:', ((2,),))
2019-10-12 16:04:15,620 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:04:15,620 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:04:15,620 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:04:15,632 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:06:09,555 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:06:09,555 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:06:09,556 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:06:09,556 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:06:09,556 - INFO: ('Need the mook data ...',)
2019-10-12 16:06:09,556 - INFO: ('begin to record the test case into database',)
2019-10-12 16:06:09,556 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:06:09,616 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:06:09,616 - INFO: ('the query result is:', ((2,),))
2019-10-12 16:06:09,617 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:06:09,617 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:06:09,617 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:06:09,637 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:06:46,012 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:06:46,012 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:06:46,012 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:06:46,013 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:06:46,013 - INFO: ('Need the mook data ...',)
2019-10-12 16:06:46,013 - INFO: ('begin to record the test case into database',)
2019-10-12 16:06:46,013 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:06:46,047 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:06:46,047 - INFO: ('the query result is:', ((0,),))
2019-10-12 16:06:46,134 - INFO: (True,)
2019-10-12 16:06:46,134 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 16:06:46,193 - INFO: (True,)
2019-10-12 16:06:46,193 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 16:06:46,253 - INFO: (True,)
2019-10-12 16:06:46,254 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 16:06:46,318 - INFO: (True,)
2019-10-12 16:06:46,318 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 16:06:46,319 - INFO: (3,)
2019-10-12 16:06:46,325 - INFO: ('receive the dubbo request ...',)
2019-10-12 16:06:46,678 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-12 16:06:46,678 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 16:06:46,678 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 16:06:46,679 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 16:06:46,679 - INFO: ('Need to use mock data ....',)
2019-10-12 16:06:46,679 - INFO: ('Begin to user query the mock data',)
2019-10-12 16:06:46,706 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 16:06:46,706 - INFO: ('the query result is:', ((3,),))
2019-10-12 16:06:46,734 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 16:06:46,734 - INFO: ('the query result is:', ((1,),))
2019-10-12 16:06:46,735 - INFO: ('Query the mock_data successfully...',)
2019-10-12 16:06:46,735 - INFO: ('mock_total_num is :', 3)
2019-10-12 16:06:46,735 - INFO: ('mock_succuss_num is :', 1)
2019-10-12 16:06:46,735 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 16:06:46,735 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 16:06:46,736 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:06:46,762 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:07:12,808 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:07:12,808 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:12,808 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:07:12,809 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:07:12,809 - INFO: ('Need the mook data ...',)
2019-10-12 16:07:12,809 - INFO: ('begin to record the test case into database',)
2019-10-12 16:07:12,809 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:12,845 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:07:12,845 - INFO: ('the query result is:', ((2,),))
2019-10-12 16:07:12,846 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:12,846 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:12,846 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:07:12,856 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:07:23,249 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:07:23,249 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:23,249 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:07:23,249 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:07:23,249 - INFO: ('Need the mook data ...',)
2019-10-12 16:07:23,249 - INFO: ('begin to record the test case into database',)
2019-10-12 16:07:23,250 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:23,288 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:07:23,288 - INFO: ('the query result is:', ((2,),))
2019-10-12 16:07:23,288 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:23,288 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:23,288 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:07:23,300 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:07:44,516 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:07:44,516 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:44,516 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:07:44,516 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:07:44,516 - INFO: ('Need the mook data ...',)
2019-10-12 16:07:44,517 - INFO: ('begin to record the test case into database',)
2019-10-12 16:07:44,517 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:07:44,557 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:07:44,557 - INFO: ('the query result is:', ((1,),))
2019-10-12 16:07:44,558 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:44,558 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:07:44,558 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:07:44,570 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:09:51,410 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:09:51,410 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:09:51,410 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:09:51,411 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:09:51,411 - INFO: ('Need the mook data ...',)
2019-10-12 16:09:51,411 - INFO: ('begin to record the test case into database',)
2019-10-12 16:09:51,411 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:09:51,437 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:09:51,437 - INFO: ('the query result is:', ((0,),))
2019-10-12 16:09:51,510 - INFO: (True,)
2019-10-12 16:09:51,511 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 16:09:51,585 - INFO: (True,)
2019-10-12 16:09:51,585 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 16:09:51,638 - INFO: (True,)
2019-10-12 16:09:51,639 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 16:09:51,702 - INFO: (True,)
2019-10-12 16:09:51,703 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 16:09:51,703 - INFO: (3,)
2019-10-12 16:09:51,708 - INFO: ('receive the dubbo request ...',)
2019-10-12 16:09:51,902 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"请求参数不合法"}')
2019-10-12 16:09:51,902 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 16:09:51,903 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 16:09:51,903 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 16:09:51,904 - INFO: ('Need to use mock data ....',)
2019-10-12 16:09:51,904 - INFO: ('Begin to user query the mock data',)
2019-10-12 16:09:51,929 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 16:09:51,929 - INFO: ('the query result is:', ((3,),))
2019-10-12 16:09:51,957 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 16:09:51,957 - INFO: ('the query result is:', ((0,),))
2019-10-12 16:09:51,958 - INFO: ('Query the mock_data successfully...',)
2019-10-12 16:09:51,958 - INFO: ('mock_total_num is :', 3)
2019-10-12 16:09:51,958 - INFO: ('mock_succuss_num is :', 0)
2019-10-12 16:09:51,958 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 16:09:51,958 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 16:09:51,958 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:09:51,971 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:10:21,385 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:10:21,386 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:10:21,386 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:10:21,386 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:10:21,386 - INFO: ('Need the mook data ...',)
2019-10-12 16:10:21,386 - INFO: ('begin to record the test case into database',)
2019-10-12 16:10:21,386 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:10:21,422 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:10:21,423 - INFO: ('the query result is:', ((5,),))
2019-10-12 16:10:21,423 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:10:21,423 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:10:21,423 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:10:21,433 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:12:02,311 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:12:02,312 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:12:02,312 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:12:02,312 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:12:02,312 - INFO: ('Need the mook data ...',)
2019-10-12 16:12:02,312 - INFO: ('begin to record the test case into database',)
2019-10-12 16:12:02,312 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:12:02,351 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:12:02,352 - INFO: ('the query result is:', ((3,),))
2019-10-12 16:12:02,352 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:12:02,352 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:12:02,352 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:12:02,364 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 16:12:16,056 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 16:12:16,056 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:12:16,056 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 16:12:16,056 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 16:12:16,056 - INFO: ('Need the mook data ...',)
2019-10-12 16:12:16,056 - INFO: ('begin to record the test case into database',)
2019-10-12 16:12:16,057 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 16:12:16,091 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 16:12:16,091 - INFO: ('the query result is:', ((2,),))
2019-10-12 16:12:16,092 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:12:16,092 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 16:12:16,092 - INFO: ('------------------ python return result ------------------',)
2019-10-12 16:12:16,103 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:14:34,717 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:14:34,717 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:14:34,718 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:14:34,718 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:14:34,718 - INFO: ('Need the mook data ...',)
2019-10-12 17:14:34,718 - INFO: ('begin to record the test case into database',)
2019-10-12 17:14:34,718 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:14:34,753 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:14:34,753 - INFO: ('the query result is:', ((0,),))
2019-10-12 17:14:34,841 - INFO: (True,)
2019-10-12 17:14:34,842 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 17:14:34,898 - INFO: (True,)
2019-10-12 17:14:34,898 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 17:14:34,963 - INFO: (True,)
2019-10-12 17:14:34,963 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 17:14:35,052 - INFO: (True,)
2019-10-12 17:14:35,053 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 17:14:35,053 - INFO: (3,)
2019-10-12 17:14:35,058 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:14:35,400 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-12 17:14:35,401 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 17:14:35,401 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:14:35,401 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 17:14:35,401 - INFO: ('Need to use mock data ....',)
2019-10-12 17:14:35,401 - INFO: ('Begin to user query the mock data',)
2019-10-12 17:14:35,428 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 17:14:35,428 - INFO: ('the query result is:', ((3,),))
2019-10-12 17:14:35,457 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 17:14:35,457 - INFO: ('the query result is:', ((1,),))
2019-10-12 17:14:35,457 - INFO: ('Query the mock_data successfully...',)
2019-10-12 17:14:35,457 - INFO: ('mock_total_num is :', 3)
2019-10-12 17:14:35,457 - INFO: ('mock_succuss_num is :', 1)
2019-10-12 17:14:35,457 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 17:14:35,457 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 17:14:35,458 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:14:35,470 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:15:35,069 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:15:35,069 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:15:35,069 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:15:35,069 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:15:35,069 - INFO: ('Need the mook data ...',)
2019-10-12 17:15:35,069 - INFO: ('begin to record the test case into database',)
2019-10-12 17:15:35,069 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:15:35,103 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:15:35,103 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:15:35,104 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:15:35,104 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:15:35,104 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:15:35,116 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:16:03,015 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:16:03,015 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:03,015 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:16:03,015 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:16:03,015 - INFO: ('Need the mook data ...',)
2019-10-12 17:16:03,015 - INFO: ('begin to record the test case into database',)
2019-10-12 17:16:03,015 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:03,047 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:16:03,047 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:16:03,047 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:03,047 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:03,047 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:16:03,060 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:16:34,940 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:16:34,940 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:34,941 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:16:34,941 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:16:34,941 - INFO: ('Need the mook data ...',)
2019-10-12 17:16:34,941 - INFO: ('begin to record the test case into database',)
2019-10-12 17:16:34,941 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:34,976 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:16:34,976 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:16:34,977 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:34,977 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:34,977 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:16:34,987 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:16:48,686 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:16:48,686 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:48,686 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:16:48,686 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:16:48,687 - INFO: ('Need the mook data ...',)
2019-10-12 17:16:48,687 - INFO: ('begin to record the test case into database',)
2019-10-12 17:16:48,687 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:16:48,718 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:16:48,718 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:16:48,718 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:48,718 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:16:48,718 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:16:48,730 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:17:00,255 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:17:00,256 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:17:00,256 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:17:00,256 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:17:00,256 - INFO: ('Need the mook data ...',)
2019-10-12 17:17:00,256 - INFO: ('begin to record the test case into database',)
2019-10-12 17:17:00,256 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:17:00,289 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:17:00,289 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:17:00,289 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:17:00,289 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:17:00,289 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:17:00,301 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:21:25,323 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:21:25,323 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:21:25,323 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:21:25,323 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:21:25,324 - INFO: ('Need the mook data ...',)
2019-10-12 17:21:25,324 - INFO: ('begin to record the test case into database',)
2019-10-12 17:21:25,324 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:21:25,355 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:21:25,355 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:21:25,355 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:21:25,355 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:21:25,355 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:21:25,365 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:22:18,459 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:22:18,459 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:22:18,459 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:22:18,459 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:22:18,459 - INFO: ('Need the mook data ...',)
2019-10-12 17:22:18,459 - INFO: ('begin to record the test case into database',)
2019-10-12 17:22:18,460 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:22:18,489 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:22:18,490 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:22:18,490 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:22:18,490 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:22:18,490 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:22:18,501 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:27:55,112 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:27:55,112 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:27:55,112 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:27:55,113 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:27:55,113 - INFO: ('Need the mook data ...',)
2019-10-12 17:27:55,113 - INFO: ('begin to record the test case into database',)
2019-10-12 17:27:55,113 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:27:55,153 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:27:55,154 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:27:55,154 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:27:55,154 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:27:55,154 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:27:55,166 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:28:30,851 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:28:30,851 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:28:30,851 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:28:30,851 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:28:30,851 - INFO: ('Need the mook data ...',)
2019-10-12 17:28:30,851 - INFO: ('begin to record the test case into database',)
2019-10-12 17:28:30,852 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:28:30,884 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:28:30,885 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:28:30,885 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:28:30,885 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:28:30,885 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:28:30,895 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:28:31,060 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:28:31,061 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 17:28:31,061 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 17:28:31,061 - INFO: ('the mock_id flag is:', '0')
2019-10-12 17:28:31,069 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:28:31,096 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 17:28:31,096 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 17:28:31,096 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:28:31,096 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 17:28:31,096 - INFO: ('No need to use mock data,return ...',)
2019-10-12 17:28:31,096 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:29:23,948 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:29:23,948 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:29:23,948 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:29:23,948 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:29:23,948 - INFO: ('Need the mook data ...',)
2019-10-12 17:29:23,948 - INFO: ('begin to record the test case into database',)
2019-10-12 17:29:23,948 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:29:23,982 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:29:23,982 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:29:23,982 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:29:23,982 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:29:23,982 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:29:23,994 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:29:24,313 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:29:24,314 - INFO: ('python receive message :', ('pms180030001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":""})'))
2019-10-12 17:29:24,314 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 17:29:24,314 - INFO: ('the mock_id flag is:', '0')
2019-10-12 17:29:24,322 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:29:24,345 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":1,"areaCode":"32","areaName":"北京","status":1},{"id":11,"areaCode":"33","areaName":"天津","status":1},{"id":21,"areaCode":"34","areaName":"河北","status":0},{"id":31,"areaCode":"35","areaName":"山西","status":1},{"id":41,"areaCode":"36","areaName":"内蒙古","status":1},{"id":51,"areaCode":"37","areaName":"辽宁","status":1},{"id":61,"areaCode":"38","areaName":"吉林","status":1},{"id":71,"areaCode":"39","areaName":"黑龙江","status":1},{"id":81,"areaCode":"40","areaName":"上海","status":1},{"id":91,"areaCode":"41","areaName":"江苏","status":0},{"id":101,"areaCode":"42","areaName":"浙江","status":1},{"id":111,"areaCode":"43","areaName":"安徽","status":0},{"id":121,"areaCode":"44","areaName":"福建","status":0},{"id":131,"areaCode":"45","areaName":"江西","status":0},{"id":141,"areaCode":"46","areaName":"山东","status":0},{"id":151,"areaCode":"47","areaName":"河南","status":1},{"id":161,"areaCode":"48","areaName":"湖北","status":0},{"id":171,"areaCode":"49","areaName":"湖南","status":0},{"id":181,"areaCode":"50","areaName":"广东","status":1},{"id":191,"areaCode":"51","areaName":"海南","status":1},{"id":201,"areaCode":"52","areaName":"广西","status":1},{"id":211,"areaCode":"53","areaName":"重庆","status":1},{"id":221,"areaCode":"54","areaName":"四川","status":1},{"id":231,"areaCode":"55","areaName":"贵州","status":0},{"id":241,"areaCode":"56","areaName":"云南","status":0},{"id":251,"areaCode":"57","areaName":"陕西","status":0},{"id":261,"areaCode":"58","areaName":"甘肃","status":0},{"id":271,"areaCode":"59","areaName":"青海","status":1},{"id":281,"areaCode":"60","areaName":"宁夏","status":1},{"id":291,"areaCode":"61","areaName":"新疆","status":0},{"id":301,"areaCode":"62","areaName":"西藏","status":1},{"id":311,"areaCode":"63","areaName":"香港","status":0},{"id":321,"areaCode":"92","areaName":"电商","status":0}]}')
2019-10-12 17:29:24,345 - INFO: ('response_return test_case_id is : ', 'pms180030001')
2019-10-12 17:29:24,345 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:29:24,346 - INFO: ('the test case is : ', 'pms180030001')
2019-10-12 17:29:24,346 - INFO: ('No need to use mock data,return ...',)
2019-10-12 17:29:24,346 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:30:35,028 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:30:35,028 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:30:35,028 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:30:35,028 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:30:35,028 - INFO: ('Need the mook data ...',)
2019-10-12 17:30:35,028 - INFO: ('begin to record the test case into database',)
2019-10-12 17:30:35,028 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:30:35,068 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:30:35,068 - INFO: ('the query result is:', ((1,),))
2019-10-12 17:30:35,068 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:30:35,068 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:30:35,068 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:30:35,078 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:30:35,123 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:30:35,123 - INFO: ('python receive message :', ('pms180020001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"888"})'))
2019-10-12 17:30:35,123 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 17:30:35,123 - INFO: ('the mock_id flag is:', '0')
2019-10-12 17:30:35,129 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:30:35,146 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-10-12 17:30:35,146 - INFO: ('response_return test_case_id is : ', 'pms180020001')
2019-10-12 17:30:35,147 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:30:35,147 - INFO: ('the test case is : ', 'pms180020001')
2019-10-12 17:30:35,147 - INFO: ('No need to use mock data,return ...',)
2019-10-12 17:30:35,147 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:30:50,399 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:30:50,400 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:30:50,400 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:30:50,400 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:30:50,400 - INFO: ('Need the mook data ...',)
2019-10-12 17:30:50,400 - INFO: ('begin to record the test case into database',)
2019-10-12 17:30:50,400 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:30:50,435 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:30:50,435 - INFO: ('the query result is:', ((1,),))
2019-10-12 17:30:50,436 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:30:50,436 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:30:50,436 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:30:50,448 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:30:50,618 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:30:50,619 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 17:30:50,619 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 17:30:50,619 - INFO: ('the mock_id flag is:', '0')
2019-10-12 17:30:50,625 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:30:50,646 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 17:30:50,646 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 17:30:50,646 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:30:50,646 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 17:30:50,646 - INFO: ('No need to use mock data,return ...',)
2019-10-12 17:30:50,646 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:31:25,470 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:31:25,470 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:31:25,470 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:31:25,470 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:31:25,470 - INFO: ('Need the mook data ...',)
2019-10-12 17:31:25,471 - INFO: ('begin to record the test case into database',)
2019-10-12 17:31:25,471 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:31:25,507 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:31:25,507 - INFO: ('the query result is:', ((0,),))
2019-10-12 17:31:25,595 - INFO: (True,)
2019-10-12 17:31:25,595 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 17:31:25,655 - INFO: (True,)
2019-10-12 17:31:25,656 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 17:31:25,715 - INFO: (True,)
2019-10-12 17:31:25,715 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 17:31:25,776 - INFO: (True,)
2019-10-12 17:31:25,776 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 17:31:25,776 - INFO: (3,)
2019-10-12 17:31:25,784 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:31:26,149 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-12 17:31:26,149 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 17:31:26,150 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:31:26,150 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 17:31:26,150 - INFO: ('Need to use mock data ....',)
2019-10-12 17:31:26,151 - INFO: ('Begin to user query the mock data',)
2019-10-12 17:31:26,186 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 17:31:26,187 - INFO: ('the query result is:', ((3,),))
2019-10-12 17:31:26,210 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 17:31:26,211 - INFO: ('the query result is:', ((1,),))
2019-10-12 17:31:26,211 - INFO: ('Query the mock_data successfully...',)
2019-10-12 17:31:26,211 - INFO: ('mock_total_num is :', 3)
2019-10-12 17:31:26,212 - INFO: ('mock_succuss_num is :', 1)
2019-10-12 17:31:26,212 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-12 17:31:26,212 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-12 17:31:26,212 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:31:26,234 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:31:26,423 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:31:26,423 - INFO: ('python receive message :', ('pms180010001', 'invoke com.cmiot.pms.api.iotmm.QueryIotmmAreaInfo.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"areaCode":"53"})'))
2019-10-12 17:31:26,423 - INFO: ('judge whether need the mock data:', '0')
2019-10-12 17:31:26,423 - INFO: ('the mock_id flag is:', '0')
2019-10-12 17:31:26,430 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:31:26,446 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":211,"areaCode":"53","areaName":"重庆","status":1}]}')
2019-10-12 17:31:26,447 - INFO: ('response_return test_case_id is : ', 'pms180010001')
2019-10-12 17:31:26,447 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:31:26,447 - INFO: ('the test case is : ', 'pms180010001')
2019-10-12 17:31:26,447 - INFO: ('No need to use mock data,return ...',)
2019-10-12 17:31:26,447 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:32:34,157 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:32:34,158 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:32:34,158 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:32:34,158 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:32:34,158 - INFO: ('Need the mook data ...',)
2019-10-12 17:32:34,158 - INFO: ('begin to record the test case into database',)
2019-10-12 17:32:34,158 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:32:34,191 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:32:34,191 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:32:34,191 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:32:34,191 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:32:34,191 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:32:34,201 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:35:02,971 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:35:02,971 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:35:02,971 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:35:02,971 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:35:02,971 - INFO: ('Need the mook data ...',)
2019-10-12 17:35:02,971 - INFO: ('begin to record the test case into database',)
2019-10-12 17:35:02,971 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:35:03,000 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:35:03,000 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:35:03,000 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:35:03,001 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:35:03,001 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:35:03,013 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:36:10,005 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:36:10,006 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:36:10,006 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:36:10,006 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:36:10,006 - INFO: ('Need the mook data ...',)
2019-10-12 17:36:10,006 - INFO: ('begin to record the test case into database',)
2019-10-12 17:36:10,006 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:36:10,038 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:36:10,038 - INFO: ('the query result is:', ((2,),))
2019-10-12 17:36:10,038 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:36:10,038 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-10-12 17:36:10,038 - INFO: ('------------------ python return result ------------------',)
2019-10-12 17:36:10,049 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-12 17:38:15,301 - INFO: ('------------------ python received testcase ------------------',)
2019-10-12 17:38:15,302 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:38:15,302 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-12 17:38:15,302 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-12 17:38:15,302 - INFO: ('Need the mook data ...',)
2019-10-12 17:38:15,302 - INFO: ('begin to record the test case into database',)
2019-10-12 17:38:15,302 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-12 17:38:15,340 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-12 17:38:15,341 - INFO: ('the query result is:', ((0,),))
2019-10-12 17:38:15,434 - INFO: (True,)
2019-10-12 17:38:15,434 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-12 17:38:15,492 - INFO: (True,)
2019-10-12 17:38:15,493 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-12 17:38:15,538 - INFO: (True,)
2019-10-12 17:38:15,539 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-12 17:38:15,603 - INFO: (True,)
2019-10-12 17:38:15,603 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-12 17:38:15,604 - INFO: (3,)
2019-10-12 17:38:15,610 - INFO: ('receive the dubbo request ...',)
2019-10-12 17:38:16,678 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-12 17:38:16,678 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-12 17:38:16,679 - INFO: ('begin to return the mock data from db ... ',)
2019-10-12 17:38:16,679 - INFO: ('the test case is : ', 'pms140010001')
2019-10-12 17:38:16,679 - INFO: ('Need to use mock data ....',)
2019-10-12 17:38:16,679 - INFO: ('Begin to user query the mock data',)
2019-10-12 17:38:16,705 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-12 17:38:16,706 - INFO: ('the query result is:', ((3,),))
2019-10-12 17:38:16,736 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-12 17:38:16,736 - INFO: ('the query result is:', ((3,),))
2019-10-12 17:38:16,736 - INFO: ('Query the mock_data successfully...',)
2019-10-12 17:38:16,737 - INFO: ('mock_total_num is :', 3)
2019-10-12 17:38:16,737 - INFO: ('mock_succuss_num is :', 3)
2019-10-12 17:38:16,737 - INFO: ('all the mock template is used successfully .',)
2019-10-12 17:38:16,737 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-12 17:38:16,737 - INFO: ('update step case_id', 'pms140010001')
2019-10-12 17:38:16,796 - INFO: ('update the test_status successfully',)
2019-10-12 17:38:16,796 - INFO: ('------------------ python return result ------------------',)
