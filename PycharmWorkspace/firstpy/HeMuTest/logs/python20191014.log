2019-10-14 14:57:44,239 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 14:57:44,239 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 14:57:44,239 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 14:57:44,240 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 14:57:44,240 - INFO: ('Need the mook data ...',)
2019-10-14 14:57:44,240 - INFO: ('begin to record the test case into database',)
2019-10-14 14:57:44,240 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 14:57:44,311 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 14:57:44,311 - INFO: ('the query result is:', ((0,),))
2019-10-14 14:57:44,348 - INFO: (True,)
2019-10-14 14:57:44,348 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 14:57:44,435 - INFO: (True,)
2019-10-14 14:57:44,436 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 14:57:44,516 - INFO: (True,)
2019-10-14 14:57:44,517 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-14 14:57:44,586 - INFO: (True,)
2019-10-14 14:57:44,586 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 14:57:44,587 - INFO: (3,)
2019-10-14 14:57:44,595 - INFO: ('receive the dubbo request ...',)
2019-10-14 14:57:45,561 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-14 14:57:45,562 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-14 14:57:45,562 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 14:57:45,562 - INFO: ('the test case is : ', 'pms140010001')
2019-10-14 14:57:45,562 - INFO: ('Need to use mock data ....',)
2019-10-14 14:57:45,562 - INFO: ('Begin to user query the mock data',)
2019-10-14 14:57:45,589 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 14:57:45,589 - INFO: ('the query result is:', ((3,),))
2019-10-14 14:57:45,626 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 14:57:45,626 - INFO: ('the query result is:', ((3,),))
2019-10-14 14:57:45,627 - INFO: ('Query the mock_data successfully...',)
2019-10-14 14:57:45,627 - INFO: ('mock_total_num is :', 3)
2019-10-14 14:57:45,627 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 14:57:45,627 - INFO: ('all the mock template is used successfully .',)
2019-10-14 14:57:45,627 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 14:57:45,627 - INFO: ('update step case_id', 'pms140010001')
2019-10-14 14:57:45,694 - INFO: ('update the test_status successfully',)
2019-10-14 14:57:45,695 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:00:06,706 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:00:06,706 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:00:06,707 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:00:06,707 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:00:06,707 - INFO: ('Need the mook data ...',)
2019-10-14 15:00:06,707 - INFO: ('begin to record the test case into database',)
2019-10-14 15:00:06,707 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:00:06,750 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:00:06,751 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:00:06,835 - INFO: (True,)
2019-10-14 15:00:06,837 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:00:06,924 - INFO: (True,)
2019-10-14 15:00:06,924 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:00:07,010 - INFO: (True,)
2019-10-14 15:00:07,011 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-14 15:00:07,070 - INFO: (True,)
2019-10-14 15:00:07,071 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:00:07,071 - INFO: (3,)
2019-10-14 15:00:07,077 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:00:08,135 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-14 15:00:08,136 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-14 15:00:08,136 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:00:08,137 - INFO: ('the test case is : ', 'pms140010001')
2019-10-14 15:00:08,137 - INFO: ('Need to use mock data ....',)
2019-10-14 15:00:08,137 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:00:08,173 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:00:08,173 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:00:08,208 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:00:08,209 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:00:08,209 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:00:08,210 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:00:08,210 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:00:08,210 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:00:08,211 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:00:08,211 - INFO: ('update step case_id', 'pms140010001')
2019-10-14 15:00:08,282 - INFO: ('update the test_status successfully',)
2019-10-14 15:00:08,282 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:00:30,891 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:00:30,891 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:00:30,891 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:00:30,891 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:00:30,891 - INFO: ('Need the mook data ...',)
2019-10-14 15:00:30,891 - INFO: ('begin to record the test case into database',)
2019-10-14 15:00:30,891 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:00:30,921 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:00:30,921 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:00:31,235 - INFO: (True,)
2019-10-14 15:00:31,236 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:00:31,298 - INFO: (True,)
2019-10-14 15:00:31,299 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:00:31,378 - INFO: (True,)
2019-10-14 15:00:31,378 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-14 15:00:31,464 - INFO: (True,)
2019-10-14 15:00:31,464 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:00:31,464 - INFO: (3,)
2019-10-14 15:00:31,474 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:00:32,423 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-14 15:00:32,424 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-14 15:00:32,424 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:00:32,424 - INFO: ('the test case is : ', 'pms140010001')
2019-10-14 15:00:32,424 - INFO: ('Need to use mock data ....',)
2019-10-14 15:00:32,424 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:00:32,456 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:00:32,457 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:00:33,390 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:00:33,390 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:00:33,391 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:00:33,391 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:00:33,392 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:00:33,392 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:00:33,392 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:00:33,393 - INFO: ('update step case_id', 'pms140010001')
2019-10-14 15:00:33,474 - INFO: ('update the test_status successfully',)
2019-10-14 15:00:33,475 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:06:38,520 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:06:38,521 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:06:38,521 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:06:38,521 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:06:38,521 - INFO: ('Need the mook data ...',)
2019-10-14 15:06:38,521 - INFO: ('begin to record the test case into database',)
2019-10-14 15:06:38,521 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:06:38,570 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:06:38,570 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:06:38,660 - INFO: (True,)
2019-10-14 15:06:38,660 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:06:38,718 - INFO: (True,)
2019-10-14 15:06:38,718 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:06:38,783 - INFO: (True,)
2019-10-14 15:06:38,783 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-14 15:06:38,842 - INFO: (True,)
2019-10-14 15:06:38,843 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:06:38,843 - INFO: (3,)
2019-10-14 15:06:38,850 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:06:39,842 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-14 15:06:39,842 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-14 15:06:39,843 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:06:39,843 - INFO: ('the test case is : ', 'pms140010001')
2019-10-14 15:06:39,843 - INFO: ('Need to use mock data ....',)
2019-10-14 15:06:39,843 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:06:39,872 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:06:39,873 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:06:39,907 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:06:39,907 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:06:39,908 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:06:39,908 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:06:39,908 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:06:39,908 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:06:39,909 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:06:39,909 - INFO: ('update step case_id', 'pms140010001')
2019-10-14 15:06:39,990 - INFO: ('update the test_status successfully',)
2019-10-14 15:06:39,990 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:06:40,053 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:06:40,053 - INFO: ('python receive message :', ('pms140020001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_04'))
2019-10-14 15:06:40,053 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:06:40,053 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:06:40,053 - INFO: ('Need the mook data ...',)
2019-10-14 15:06:40,053 - INFO: ('begin to record the test case into database',)
2019-10-14 15:06:40,054 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_04'))
2019-10-14 15:06:40,083 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:06:40,083 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:06:40,117 - INFO: (True,)
2019-10-14 15:06:40,118 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:06:40,181 - INFO: (True,)
2019-10-14 15:06:40,181 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:06:40,242 - INFO: (True,)
2019-10-14 15:06:40,242 - INFO: ('the mock template id is :', 'mock_pms140020001_04')
2019-10-14 15:06:40,340 - INFO: (True,)
2019-10-14 15:06:40,341 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:06:40,341 - INFO: (3,)
2019-10-14 15:06:40,349 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:06:41,410 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-14 15:06:41,411 - INFO: ('response_return test_case_id is : ', 'pms140020001')
2019-10-14 15:06:41,411 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:06:41,411 - INFO: ('the test case is : ', 'pms140020001')
2019-10-14 15:06:41,412 - INFO: ('Need to use mock data ....',)
2019-10-14 15:06:41,412 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:06:41,439 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:06:41,439 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:06:41,465 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:06:41,465 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:06:41,466 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:06:41,466 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:06:41,467 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:06:41,467 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:06:41,467 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:06:41,467 - INFO: ('update step case_id', 'pms140020001')
2019-10-14 15:06:41,549 - INFO: ('update the test_status successfully',)
2019-10-14 15:06:41,549 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:06:41,585 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2019-10-14 15:11:30,304 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:11:30,304 - INFO: ('python receive message :', ('pms140030001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":""})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_04'))
2019-10-14 15:11:30,304 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:11:30,304 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:11:30,305 - INFO: ('Need the mook data ...',)
2019-10-14 15:11:30,305 - INFO: ('begin to record the test case into database',)
2019-10-14 15:11:30,305 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_04'))
2019-10-14 15:11:30,334 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:11:30,335 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:11:30,364 - INFO: (True,)
2019-10-14 15:11:30,365 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:11:30,465 - INFO: (True,)
2019-10-14 15:11:30,466 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:11:30,562 - INFO: (True,)
2019-10-14 15:11:30,562 - INFO: ('the mock template id is :', 'mock_pms140020001_04')
2019-10-14 15:11:30,644 - INFO: (True,)
2019-10-14 15:11:30,644 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:11:30,645 - INFO: (3,)
2019-10-14 15:11:30,652 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:11:30,668 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户TOKEN不能为空"}')
2019-10-14 15:11:30,668 - INFO: ('response_return test_case_id is : ', 'pms140030001')
2019-10-14 15:11:30,668 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:11:30,668 - INFO: ('the test case is : ', 'pms140030001')
2019-10-14 15:11:30,669 - INFO: ('Need to use mock data ....',)
2019-10-14 15:11:30,669 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:11:30,695 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:11:30,695 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:11:30,717 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:11:30,717 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:11:30,717 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:11:30,718 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:11:30,718 - INFO: ('mock_succuss_num is :', 0)
2019-10-14 15:11:30,718 - INFO: ('something wrong ,the mock template is not used all .',)
2019-10-14 15:11:30,718 - INFO: ('need the mock template,but one or more template is not used ',)
2019-10-14 15:11:30,718 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:11:30,737 - INFO: ('"allowCMMMPay":0 is not in actual result ',)
2019-10-14 15:12:13,575 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:12:13,575 - INFO: ('python receive message :', ('pms140030001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":""})'))
2019-10-14 15:12:13,575 - INFO: ('judge whether need the mock data:', '0')
2019-10-14 15:12:13,576 - INFO: ('the mock_id flag is:', '0')
2019-10-14 15:12:13,585 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:12:13,595 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户TOKEN不能为空"}')
2019-10-14 15:12:13,595 - INFO: ('response_return test_case_id is : ', 'pms140030001')
2019-10-14 15:12:13,595 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:12:13,595 - INFO: ('the test case is : ', 'pms140030001')
2019-10-14 15:12:13,595 - INFO: ('No need to use mock data,return ...',)
2019-10-14 15:12:13,595 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:12:13,609 - INFO: ('"allowCMMMPay":0 is not in actual result ',)
2019-10-14 15:24:09,040 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:24:09,040 - INFO: ('python receive message :', ('pms140010001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:24:09,040 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:24:09,041 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:24:09,041 - INFO: ('Need the mook data ...',)
2019-10-14 15:24:09,041 - INFO: ('begin to record the test case into database',)
2019-10-14 15:24:09,041 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140010001_03'))
2019-10-14 15:24:09,072 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:24:09,072 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:24:09,135 - INFO: (True,)
2019-10-14 15:24:09,135 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:24:09,195 - INFO: (True,)
2019-10-14 15:24:09,195 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:24:09,261 - INFO: (True,)
2019-10-14 15:24:09,261 - INFO: ('the mock template id is :', 'mock_pms140010001_03')
2019-10-14 15:24:09,326 - INFO: (True,)
2019-10-14 15:24:09,326 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:24:09,327 - INFO: (3,)
2019-10-14 15:24:09,335 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:24:10,308 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":1}}')
2019-10-14 15:24:10,309 - INFO: ('response_return test_case_id is : ', 'pms140010001')
2019-10-14 15:24:10,309 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:24:10,309 - INFO: ('the test case is : ', 'pms140010001')
2019-10-14 15:24:10,309 - INFO: ('Need to use mock data ....',)
2019-10-14 15:24:10,309 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:24:10,340 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:24:10,340 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:24:10,366 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:24:10,366 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:24:10,367 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:24:10,367 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:24:10,367 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:24:10,367 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:24:10,367 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:24:10,367 - INFO: ('update step case_id', 'pms140010001')
2019-10-14 15:24:10,430 - INFO: ('update the test_status successfully',)
2019-10-14 15:24:10,431 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:24:17,280 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:24:17,280 - INFO: ('python receive message :', ('pms140020001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_03'))
2019-10-14 15:24:17,280 - INFO: ('judge whether need the mock data:', 'mock_pms140010001_01')
2019-10-14 15:24:17,280 - INFO: ('the mock_id flag is:', 'mock_pms140010001_01')
2019-10-14 15:24:17,280 - INFO: ('Need the mook data ...',)
2019-10-14 15:24:17,280 - INFO: ('begin to record the test case into database',)
2019-10-14 15:24:17,280 - INFO: ('the mock template id is :', ('mock_pms140010001_01', 'mock_pms140010001_02', 'mock_pms140020001_03'))
2019-10-14 15:24:17,320 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:24:17,321 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:24:17,383 - INFO: (True,)
2019-10-14 15:24:17,383 - INFO: ('the mock template id is :', 'mock_pms140010001_01')
2019-10-14 15:24:17,658 - INFO: (True,)
2019-10-14 15:24:17,658 - INFO: ('the mock template id is :', 'mock_pms140010001_02')
2019-10-14 15:24:17,709 - INFO: (True,)
2019-10-14 15:24:17,709 - INFO: ('the mock template id is :', 'mock_pms140020001_03')
2019-10-14 15:24:17,876 - INFO: (True,)
2019-10-14 15:24:17,876 - INFO: (['successfully', 'successfully', 'successfully'],)
2019-10-14 15:24:17,876 - INFO: (3,)
2019-10-14 15:24:17,882 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:24:18,820 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-14 15:24:18,821 - INFO: ('response_return test_case_id is : ', 'pms140020001')
2019-10-14 15:24:18,821 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:24:18,821 - INFO: ('the test case is : ', 'pms140020001')
2019-10-14 15:24:18,821 - INFO: ('Need to use mock data ....',)
2019-10-14 15:24:18,821 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:24:18,853 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:24:18,853 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:24:18,887 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:24:18,887 - INFO: ('the query result is:', ((3,),))
2019-10-14 15:24:18,888 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:24:18,888 - INFO: ('mock_total_num is :', 3)
2019-10-14 15:24:18,888 - INFO: ('mock_succuss_num is :', 3)
2019-10-14 15:24:18,888 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:24:18,888 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:24:18,888 - INFO: ('update step case_id', 'pms140020001')
2019-10-14 15:24:19,002 - INFO: ('update the test_status successfully',)
2019-10-14 15:24:19,002 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:24:30,038 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:24:30,038 - INFO: ('python receive message :', ('pms140030001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":""})'))
2019-10-14 15:24:30,038 - INFO: ('judge whether need the mock data:', '0')
2019-10-14 15:24:30,039 - INFO: ('the mock_id flag is:', '0')
2019-10-14 15:24:30,049 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:24:30,062 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户TOKEN不能为空"}')
2019-10-14 15:24:30,062 - INFO: ('response_return test_case_id is : ', 'pms140030001')
2019-10-14 15:24:30,062 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:24:30,063 - INFO: ('the test case is : ', 'pms140030001')
2019-10-14 15:24:30,063 - INFO: ('No need to use mock data,return ...',)
2019-10-14 15:24:30,063 - INFO: ('------------------ python return result ------------------',)
2019-10-14 15:24:43,710 - INFO: ('------------------ python received testcase ------------------',)
2019-10-14 15:24:43,710 - INFO: ('python receive message :', ('pms140040001', 'invoke com.cmiot.pms.api.iotmm.QueryAllowCMMMPayByToken.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_pms140040001_01'))
2019-10-14 15:24:43,711 - INFO: ('judge whether need the mock data:', 'mock_pms140040001_01')
2019-10-14 15:24:43,711 - INFO: ('the mock_id flag is:', 'mock_pms140040001_01')
2019-10-14 15:24:43,711 - INFO: ('Need the mook data ...',)
2019-10-14 15:24:43,711 - INFO: ('begin to record the test case into database',)
2019-10-14 15:24:43,711 - INFO: ('the mock template id is :', ('mock_pms140040001_01',))
2019-10-14 15:24:43,739 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-10-14 15:24:43,739 - INFO: ('the query result is:', ((0,),))
2019-10-14 15:24:43,769 - INFO: (True,)
2019-10-14 15:24:43,769 - INFO: ('the mock template id is :', 'mock_pms140040001_01')
2019-10-14 15:24:43,846 - INFO: (True,)
2019-10-14 15:24:43,846 - INFO: (['successfully'],)
2019-10-14 15:24:43,846 - INFO: (1,)
2019-10-14 15:24:43,852 - INFO: ('receive the dubbo request ...',)
2019-10-14 15:24:44,179 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"allowCMMMPay":0}}')
2019-10-14 15:24:44,180 - INFO: ('response_return test_case_id is : ', 'pms140040001')
2019-10-14 15:24:44,180 - INFO: ('begin to return the mock data from db ... ',)
2019-10-14 15:24:44,180 - INFO: ('the test case is : ', 'pms140040001')
2019-10-14 15:24:44,180 - INFO: ('Need to use mock data ....',)
2019-10-14 15:24:44,180 - INFO: ('Begin to user query the mock data',)
2019-10-14 15:24:44,214 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-10-14 15:24:44,215 - INFO: ('the query result is:', ((1,),))
2019-10-14 15:24:44,249 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-10-14 15:24:44,249 - INFO: ('the query result is:', ((1,),))
2019-10-14 15:24:44,249 - INFO: ('Query the mock_data successfully...',)
2019-10-14 15:24:44,249 - INFO: ('mock_total_num is :', 1)
2019-10-14 15:24:44,250 - INFO: ('mock_succuss_num is :', 1)
2019-10-14 15:24:44,250 - INFO: ('all the mock template is used successfully .',)
2019-10-14 15:24:44,250 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-10-14 15:24:44,250 - INFO: ('update step case_id', 'pms140040001')
2019-10-14 15:24:44,309 - INFO: ('update the test_status successfully',)
2019-10-14 15:24:44,310 - INFO: ('------------------ python return result ------------------',)
