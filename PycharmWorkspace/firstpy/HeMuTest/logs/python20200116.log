2020-01-16 08:54:49,803 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 08:54:49,803 - INFO: ('python receive message :', ('ums600010001', 'invoke com.cmiot.ums.api.user.HeTokenValidateForApp.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_ums600010001_01'))
2020-01-16 08:54:49,803 - INFO: ('judge whether need the mock data:', 'mock_ums600010001_01')
2020-01-16 08:54:49,803 - INFO: ('the mock_id flag is:', 'mock_ums600010001_01')
2020-01-16 08:54:49,803 - INFO: ('Need the mook data ...',)
2020-01-16 08:54:49,803 - INFO: ('begin to record the test case into database',)
2020-01-16 08:54:49,803 - INFO: ('the mock template id is :', ('mock_ums600010001_01',))
2020-01-16 08:54:50,063 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 08:54:50,063 - INFO: ('the query result is:', ((0,),))
2020-01-16 08:54:50,193 - INFO: (True,)
2020-01-16 08:54:50,193 - INFO: ('the mock template id is :', 'mock_ums600010001_01')
2020-01-16 08:54:50,353 - INFO: (True,)
2020-01-16 08:54:50,353 - INFO: (['successfully'],)
2020-01-16 08:54:50,353 - INFO: (1,)
2020-01-16 08:54:50,353 - INFO: ('receive the dubbo request ...',)
2020-01-16 08:54:50,363 - INFO: ('wait dubbo return ', '{"resultCode":"110005","resultMsg":"和通行证验证失败"}')
2020-01-16 08:54:50,363 - INFO: ('response_return test_case_id is : ', 'ums600010001')
2020-01-16 08:54:50,373 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 08:54:50,373 - INFO: ('the test case is : ', 'ums600010001')
2020-01-16 08:54:50,373 - INFO: ('Need to use mock data ....',)
2020-01-16 08:54:50,373 - INFO: ('Begin to user query the mock data',)
2020-01-16 08:54:50,493 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 08:54:50,493 - INFO: ('the query result is:', ((1,),))
2020-01-16 08:54:50,633 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 08:54:50,633 - INFO: ('the query result is:', ((0,),))
2020-01-16 08:54:50,633 - INFO: ('Query the mock_data successfully...',)
2020-01-16 08:54:50,633 - INFO: ('mock_total_num is :', 1)
2020-01-16 08:54:50,633 - INFO: ('mock_succuss_num is :', 0)
2020-01-16 08:54:50,633 - INFO: ('something wrong ,the mock template is not used all .',)
2020-01-16 08:54:50,633 - INFO: ('need the mock template,but one or more template is not used ',)
2020-01-16 08:54:50,633 - INFO: ('------------------ python return result ------------------',)
2020-01-16 08:54:50,673 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 08:57:38,413 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 08:57:38,414 - INFO: ('python receive message :', ('ums600010001', 'invoke com.cmiot.ums.api.user.HeTokenValidateForApp.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_ums600010001_01'))
2020-01-16 08:57:38,414 - INFO: ('judge whether need the mock data:', 'mock_ums600010001_01')
2020-01-16 08:57:38,414 - INFO: ('the mock_id flag is:', 'mock_ums600010001_01')
2020-01-16 08:57:38,414 - INFO: ('Need the mook data ...',)
2020-01-16 08:57:38,414 - INFO: ('begin to record the test case into database',)
2020-01-16 08:57:38,414 - INFO: ('the mock template id is :', ('mock_ums600010001_01',))
2020-01-16 08:57:39,754 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 08:57:39,754 - INFO: ('the query result is:', ((1,),))
2020-01-16 08:57:39,755 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 08:57:39,755 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 08:57:39,755 - INFO: ('------------------ python return result ------------------',)
2020-01-16 08:57:39,788 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 08:59:32,799 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 08:59:32,800 - INFO: ('python receive message :', ('ums600010001', 'invoke com.cmiot.ums.api.user.HeTokenValidateForApp.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_ums600010001_01'))
2020-01-16 08:59:32,800 - INFO: ('judge whether need the mock data:', 'mock_ums600010001_01')
2020-01-16 08:59:32,800 - INFO: ('the mock_id flag is:', 'mock_ums600010001_01')
2020-01-16 08:59:32,800 - INFO: ('Need the mook data ...',)
2020-01-16 08:59:32,800 - INFO: ('begin to record the test case into database',)
2020-01-16 08:59:32,800 - INFO: ('the mock template id is :', ('mock_ums600010001_01',))
2020-01-16 08:59:32,934 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 08:59:32,935 - INFO: ('the query result is:', ((1,),))
2020-01-16 08:59:32,935 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 08:59:32,936 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 08:59:32,936 - INFO: ('------------------ python return result ------------------',)
2020-01-16 08:59:32,965 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 09:04:47,397 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 09:04:47,397 - INFO: ('python receive message :', ('ums600010001', 'invoke com.cmiot.ums.api.user.HeTokenValidateForApp.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"token":"d331dca072fa4686bbf7dc762881e584"})', 'mock_ums600010001_01'))
2020-01-16 09:04:47,397 - INFO: ('judge whether need the mock data:', 'mock_ums600010001_01')
2020-01-16 09:04:47,397 - INFO: ('the mock_id flag is:', 'mock_ums600010001_01')
2020-01-16 09:04:47,397 - INFO: ('Need the mook data ...',)
2020-01-16 09:04:47,397 - INFO: ('begin to record the test case into database',)
2020-01-16 09:04:47,397 - INFO: ('the mock template id is :', ('mock_ums600010001_01',))
2020-01-16 09:04:47,472 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 09:04:47,473 - INFO: ('the query result is:', ((0,),))
2020-01-16 09:04:47,607 - INFO: (True,)
2020-01-16 09:04:47,608 - INFO: ('the mock template id is :', 'mock_ums600010001_01')
2020-01-16 09:04:47,732 - INFO: (True,)
2020-01-16 09:04:47,732 - INFO: (['successfully'],)
2020-01-16 09:04:47,733 - INFO: (1,)
2020-01-16 09:04:47,742 - INFO: ('receive the dubbo request ...',)
2020-01-16 09:04:47,761 - INFO: ('wait dubbo return ', '{"resultCode":"110005","resultMsg":"和通行证验证失败"}')
2020-01-16 09:04:47,761 - INFO: ('response_return test_case_id is : ', 'ums600010001')
2020-01-16 09:04:47,762 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 09:04:47,762 - INFO: ('the test case is : ', 'ums600010001')
2020-01-16 09:04:47,762 - INFO: ('Need to use mock data ....',)
2020-01-16 09:04:47,762 - INFO: ('Begin to user query the mock data',)
2020-01-16 09:04:47,868 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 09:04:47,869 - INFO: ('the query result is:', ((1,),))
2020-01-16 09:04:47,959 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 09:04:47,959 - INFO: ('the query result is:', ((0,),))
2020-01-16 09:04:47,959 - INFO: ('Query the mock_data successfully...',)
2020-01-16 09:04:47,959 - INFO: ('mock_total_num is :', 1)
2020-01-16 09:04:47,959 - INFO: ('mock_succuss_num is :', 0)
2020-01-16 09:04:47,959 - INFO: ('something wrong ,the mock template is not used all .',)
2020-01-16 09:04:47,959 - INFO: ('need the mock template,but one or more template is not used ',)
2020-01-16 09:04:47,959 - INFO: ('------------------ python return result ------------------',)
2020-01-16 09:04:47,972 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 11:21:32,496 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 11:21:32,496 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_ums600010001_01'))
2020-01-16 11:21:32,496 - INFO: ('judge whether need the mock data:', 'mock_ums600010001_01')
2020-01-16 11:21:32,496 - INFO: ('the mock_id flag is:', 'mock_ums600010001_01')
2020-01-16 11:21:32,496 - INFO: ('Need the mook data ...',)
2020-01-16 11:21:32,496 - INFO: ('begin to record the test case into database',)
2020-01-16 11:21:32,496 - INFO: ('the mock template id is :', ('mock_ums600010001_01',))
2020-01-16 11:21:32,593 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 11:21:32,593 - INFO: ('the query result is:', ((0,),))
2020-01-16 11:21:32,733 - INFO: (True,)
2020-01-16 11:21:32,734 - INFO: ('the mock template id is :', 'mock_ums600010001_01')
2020-01-16 11:21:32,917 - INFO: (True,)
2020-01-16 11:21:32,917 - INFO: (['successfully'],)
2020-01-16 11:21:32,918 - INFO: (1,)
2020-01-16 11:21:32,924 - INFO: ('receive the dubbo request ...',)
2020-01-16 11:21:33,890 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2020-01-16 11:21:33,891 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 11:21:33,891 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 11:21:33,892 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 11:21:33,892 - INFO: ('Need to use mock data ....',)
2020-01-16 11:21:33,892 - INFO: ('Begin to user query the mock data',)
2020-01-16 11:21:33,991 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 11:21:33,992 - INFO: ('the query result is:', ((1,),))
2020-01-16 11:21:34,075 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 11:21:34,076 - INFO: ('the query result is:', ((1,),))
2020-01-16 11:21:34,076 - INFO: ('Query the mock_data successfully...',)
2020-01-16 11:21:34,076 - INFO: ('mock_total_num is :', 1)
2020-01-16 11:21:34,077 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 11:21:34,077 - INFO: ('all the mock template is used successfully .',)
2020-01-16 11:21:34,077 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 11:21:34,077 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 11:21:34,187 - INFO: ('update the test_status successfully',)
2020-01-16 11:21:34,188 - INFO: ('------------------ python return result ------------------',)
2020-01-16 11:21:34,223 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 11:24:27,621 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 11:24:27,621 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2020-01-16 11:24:27,621 - INFO: ('judge whether need the mock data:', '0')
2020-01-16 11:24:27,621 - INFO: ('the mock_id flag is:', '0')
2020-01-16 11:24:27,629 - INFO: ('receive the dubbo request ...',)
2020-01-16 11:24:27,842 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"Something wrong .No Mock data return."}')
2020-01-16 11:24:27,842 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 11:24:27,842 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 11:24:27,843 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 11:24:27,843 - INFO: ('No need to use mock data,return ...',)
2020-01-16 11:24:27,843 - INFO: ('------------------ python return result ------------------',)
2020-01-16 11:24:27,857 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 14:28:34,025 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:28:34,025 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:28:34,025 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:28:34,025 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:28:34,025 - INFO: ('Need the mook data ...',)
2020-01-16 14:28:34,025 - INFO: ('begin to record the test case into database',)
2020-01-16 14:28:34,025 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:28:34,052 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:28:34,052 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:28:34,110 - INFO: (True,)
2020-01-16 14:28:34,110 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:28:34,203 - INFO: (True,)
2020-01-16 14:28:34,203 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:28:34,307 - INFO: (True,)
2020-01-16 14:28:34,307 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:28:34,391 - INFO: (True,)
2020-01-16 14:28:34,392 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:28:34,462 - INFO: (True,)
2020-01-16 14:28:34,462 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:28:34,540 - INFO: (True,)
2020-01-16 14:28:34,540 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:28:34,637 - INFO: (True,)
2020-01-16 14:28:34,638 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:28:34,638 - INFO: (6,)
2020-01-16 14:28:34,645 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:28:37,130 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579155658,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:28:37,131 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:28:37,131 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:28:37,131 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:28:37,131 - INFO: ('Need to use mock data ....',)
2020-01-16 14:28:37,132 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:28:37,158 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:28:37,158 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:28:37,183 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:28:37,184 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:28:37,184 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:28:37,185 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:28:37,185 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:28:37,185 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:28:37,185 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:28:37,185 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:28:37,258 - INFO: ('update the test_status successfully',)
2020-01-16 14:28:37,258 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:28:37,292 - INFO: ('"allowCMMMPay":1 is not in actual result ',)
2020-01-16 14:30:54,192 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:30:54,192 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:30:54,192 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:30:54,192 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:30:54,193 - INFO: ('Need the mook data ...',)
2020-01-16 14:30:54,193 - INFO: ('begin to record the test case into database',)
2020-01-16 14:30:54,193 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:30:54,247 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:30:54,247 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:30:54,429 - INFO: (True,)
2020-01-16 14:30:54,429 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:30:54,603 - INFO: (True,)
2020-01-16 14:30:54,604 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:30:54,739 - INFO: (True,)
2020-01-16 14:30:54,739 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:30:54,890 - INFO: (True,)
2020-01-16 14:30:54,891 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:30:54,990 - INFO: (True,)
2020-01-16 14:30:54,991 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:30:55,145 - INFO: (True,)
2020-01-16 14:30:55,146 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:30:55,260 - INFO: (True,)
2020-01-16 14:30:55,261 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:30:55,261 - INFO: (6,)
2020-01-16 14:30:55,268 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:30:57,539 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579155799,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:30:57,539 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:30:57,540 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:30:57,540 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:30:57,540 - INFO: ('Need to use mock data ....',)
2020-01-16 14:30:57,540 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:30:57,579 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:30:57,579 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:30:57,621 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:30:57,621 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:30:57,622 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:30:57,622 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:30:57,622 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:30:57,623 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:30:57,623 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:30:57,623 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:30:57,703 - INFO: ('update the test_status successfully',)
2020-01-16 14:30:57,703 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:30:57,740 - INFO: ('"resultCode":”000000“ is not in actual result ',)
2020-01-16 14:31:48,480 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:31:48,480 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:31:48,480 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:31:48,480 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:31:48,480 - INFO: ('Need the mook data ...',)
2020-01-16 14:31:48,480 - INFO: ('begin to record the test case into database',)
2020-01-16 14:31:48,480 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:31:48,598 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:31:48,598 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:31:49,045 - INFO: (True,)
2020-01-16 14:31:49,046 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:31:49,223 - INFO: (True,)
2020-01-16 14:31:49,223 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:31:49,388 - INFO: (True,)
2020-01-16 14:31:49,388 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:31:49,589 - INFO: (True,)
2020-01-16 14:31:49,590 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:31:49,756 - INFO: (True,)
2020-01-16 14:31:49,756 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:31:51,127 - INFO: (True,)
2020-01-16 14:31:51,128 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:31:51,263 - INFO: (True,)
2020-01-16 14:31:51,264 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:31:51,264 - INFO: (6,)
2020-01-16 14:31:51,270 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:31:53,331 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579155855,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:31:53,332 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:31:53,332 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:31:53,332 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:31:53,332 - INFO: ('Need to use mock data ....',)
2020-01-16 14:31:53,333 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:31:54,452 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:31:54,453 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:31:54,587 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:31:54,587 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:31:54,588 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:31:54,588 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:31:54,589 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:31:54,589 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:31:54,590 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:31:54,590 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:31:54,826 - INFO: ('update the test_status successfully',)
2020-01-16 14:31:54,827 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:33:02,750 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:33:02,750 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:33:02,750 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:33:02,750 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:33:02,750 - INFO: ('Need the mook data ...',)
2020-01-16 14:33:02,750 - INFO: ('begin to record the test case into database',)
2020-01-16 14:33:02,750 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:33:02,807 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:33:02,808 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:33:02,887 - INFO: (True,)
2020-01-16 14:33:02,887 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:33:03,018 - INFO: (True,)
2020-01-16 14:33:03,018 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:33:03,113 - INFO: (True,)
2020-01-16 14:33:03,114 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:33:03,203 - INFO: (True,)
2020-01-16 14:33:03,204 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:33:03,280 - INFO: (True,)
2020-01-16 14:33:03,280 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:33:03,353 - INFO: (True,)
2020-01-16 14:33:03,354 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:33:03,471 - INFO: (True,)
2020-01-16 14:33:03,471 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:33:03,471 - INFO: (6,)
2020-01-16 14:33:03,479 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:33:05,642 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579155927,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:33:05,643 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:33:05,643 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:33:05,644 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:33:05,644 - INFO: ('Need to use mock data ....',)
2020-01-16 14:33:05,644 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:33:05,691 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:33:05,692 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:33:05,727 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:33:05,727 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:33:05,728 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:33:05,728 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:33:05,728 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:33:05,729 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:33:05,729 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:33:05,729 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:33:05,819 - INFO: ('update the test_status successfully',)
2020-01-16 14:33:05,820 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:33:05,849 - INFO: ('"resultCode":"100000" is not in actual result ',)
2020-01-16 14:33:29,135 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:33:29,135 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:33:29,136 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:33:29,136 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:33:29,136 - INFO: ('Need the mook data ...',)
2020-01-16 14:33:29,136 - INFO: ('begin to record the test case into database',)
2020-01-16 14:33:29,136 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:33:29,160 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:33:29,160 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:33:29,229 - INFO: (True,)
2020-01-16 14:33:29,229 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:33:29,291 - INFO: (True,)
2020-01-16 14:33:29,292 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:33:29,359 - INFO: (True,)
2020-01-16 14:33:29,360 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:33:29,438 - INFO: (True,)
2020-01-16 14:33:29,439 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:33:29,550 - INFO: (True,)
2020-01-16 14:33:29,550 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:33:29,627 - INFO: (True,)
2020-01-16 14:33:29,627 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:33:29,794 - INFO: (True,)
2020-01-16 14:33:29,794 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:33:29,794 - INFO: (6,)
2020-01-16 14:33:29,801 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:33:31,862 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579155953,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:33:31,862 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:33:31,863 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:33:31,863 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:33:31,863 - INFO: ('Need to use mock data ....',)
2020-01-16 14:33:31,863 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:33:31,944 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:33:31,945 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:33:31,990 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:33:31,991 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:33:31,991 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:33:31,992 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:33:31,992 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:33:31,992 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:33:31,992 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:33:31,993 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:33:32,057 - INFO: ('update the test_status successfully',)
2020-01-16 14:33:32,058 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:55:35,431 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:55:35,431 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:55:35,431 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:55:35,432 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:55:35,432 - INFO: ('Need the mook data ...',)
2020-01-16 14:55:35,432 - INFO: ('begin to record the test case into database',)
2020-01-16 14:55:35,432 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:55:35,474 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:55:35,474 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:55:35,474 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:35,474 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:35,474 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:55:35,486 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:55:35,486 - INFO: ('"orderId":"10664729" is not in actual result ',)
2020-01-16 14:55:35,487 - INFO: ('"itemCode":"sjkj_hka2" is not in actual result ',)
2020-01-16 14:55:35,515 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:55:35,515 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170020003'))
2020-01-16 14:55:35,515 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:55:35,515 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:55:35,515 - INFO: ('Need the mook data ...',)
2020-01-16 14:55:35,515 - INFO: ('begin to record the test case into database',)
2020-01-16 14:55:35,515 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170020003'))
2020-01-16 14:55:35,561 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:55:35,562 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:55:35,562 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:35,562 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:35,562 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:55:35,573 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:55:42,669 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:55:42,670 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:55:42,670 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:55:42,670 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:55:42,670 - INFO: ('Need the mook data ...',)
2020-01-16 14:55:42,670 - INFO: ('begin to record the test case into database',)
2020-01-16 14:55:42,670 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:55:43,776 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:55:43,777 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:55:43,777 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:43,777 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:55:43,778 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:55:43,805 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:55:43,805 - INFO: ('"orderId":"10664729" is not in actual result ',)
2020-01-16 14:55:43,805 - INFO: ('"itemCode":"sjkj_hka2" is not in actual result ',)
2020-01-16 14:56:30,303 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:56:30,303 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:56:30,304 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:56:30,304 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:56:30,304 - INFO: ('Need the mook data ...',)
2020-01-16 14:56:30,304 - INFO: ('begin to record the test case into database',)
2020-01-16 14:56:30,304 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:56:30,378 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:56:30,379 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:56:30,379 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:56:30,380 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:56:30,380 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:56:30,412 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:56:30,412 - INFO: ('"orderId":"10664729" is not in actual result ',)
2020-01-16 14:56:30,412 - INFO: ('"itemCode":"sjkj_hka2" is not in actual result ',)
2020-01-16 14:57:00,408 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:57:00,408 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:57:00,408 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:57:00,408 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:57:00,408 - INFO: ('Need the mook data ...',)
2020-01-16 14:57:00,408 - INFO: ('begin to record the test case into database',)
2020-01-16 14:57:00,408 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:57:00,544 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:57:00,545 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:57:00,545 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:57:00,545 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:57:00,546 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:57:00,566 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:57:00,567 - INFO: ('"orderId":"10664729" is not in actual result ',)
2020-01-16 14:57:00,567 - INFO: ('"itemCode":"sjkj_hka2" is not in actual result ',)
2020-01-16 14:57:18,154 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:57:18,154 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:57:18,154 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:57:18,154 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:57:18,154 - INFO: ('Need the mook data ...',)
2020-01-16 14:57:18,154 - INFO: ('begin to record the test case into database',)
2020-01-16 14:57:18,155 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:57:18,249 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:57:18,249 - INFO: ('the query result is:', ((1,),))
2020-01-16 14:57:18,249 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:57:18,249 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2020-01-16 14:57:18,249 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:57:18,261 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 14:57:18,261 - INFO: ('"orderId":"10664729" is not in actual result ',)
2020-01-16 14:57:18,261 - INFO: ('"itemCode":"sjkj_hka2" is not in actual result ',)
2020-01-16 14:58:56,331 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:58:56,331 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:58:56,331 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:58:56,331 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:58:56,331 - INFO: ('Need the mook data ...',)
2020-01-16 14:58:56,331 - INFO: ('begin to record the test case into database',)
2020-01-16 14:58:56,331 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170010003', 'mock_uom170010004', 'mock_uom170010005', 'mock_uom170010006'))
2020-01-16 14:58:56,684 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:58:56,684 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:58:56,811 - INFO: (True,)
2020-01-16 14:58:56,812 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:58:56,946 - INFO: (True,)
2020-01-16 14:58:56,947 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:58:57,128 - INFO: (True,)
2020-01-16 14:58:57,129 - INFO: ('the mock template id is :', 'mock_uom170010003')
2020-01-16 14:58:57,265 - INFO: (True,)
2020-01-16 14:58:57,265 - INFO: ('the mock template id is :', 'mock_uom170010004')
2020-01-16 14:58:57,496 - INFO: (True,)
2020-01-16 14:58:57,496 - INFO: ('the mock template id is :', 'mock_uom170010005')
2020-01-16 14:58:57,669 - INFO: (True,)
2020-01-16 14:58:57,669 - INFO: ('the mock template id is :', 'mock_uom170010006')
2020-01-16 14:58:57,804 - INFO: (True,)
2020-01-16 14:58:57,804 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 14:58:57,805 - INFO: (6,)
2020-01-16 14:58:57,814 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:58:59,837 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"10664729","startTime":1578412800,"orderTime":1578448595,"currentTimestamp":1579157481,"createPhone":"13996170811","orderNo":"2020010809500705926172","outOrderNo":"201706191234560006997507","bossCode":"230","packageCode":"sjkj_hka2","unsubState":0,"boundFlag":0,"state":2,"changeFlag":0,"orderList":[{"itemId":"4061","itemCode":"sjkj_hka2","itemName":"手机看家7天标准包_编号2","channel":"53","saveDay":"7","pkgStorageType":"0","orderExtendsInfoRsp":{"bindButtonSate":"2","cancelButtonSate":"2","hasUnffect":0}}]}]}')
2020-01-16 14:58:59,837 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:58:59,838 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:58:59,838 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:58:59,838 - INFO: ('Need to use mock data ....',)
2020-01-16 14:58:59,838 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:58:59,928 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:58:59,928 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:59:00,038 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:59:00,038 - INFO: ('the query result is:', ((6,),))
2020-01-16 14:59:00,039 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:59:00,039 - INFO: ('mock_total_num is :', 6)
2020-01-16 14:59:00,039 - INFO: ('mock_succuss_num is :', 6)
2020-01-16 14:59:00,039 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:59:00,040 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:59:00,040 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:59:00,424 - INFO: ('update the test_status successfully',)
2020-01-16 14:59:00,425 - INFO: ('------------------ python return result ------------------',)
2020-01-16 14:59:09,402 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 14:59:09,402 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom170010001', 'mock_uom170010002', 'mock_uom170020003'))
2020-01-16 14:59:09,402 - INFO: ('judge whether need the mock data:', 'mock_uom170010001')
2020-01-16 14:59:09,402 - INFO: ('the mock_id flag is:', 'mock_uom170010001')
2020-01-16 14:59:09,402 - INFO: ('Need the mook data ...',)
2020-01-16 14:59:09,402 - INFO: ('begin to record the test case into database',)
2020-01-16 14:59:09,402 - INFO: ('the mock template id is :', ('mock_uom170010001', 'mock_uom170010002', 'mock_uom170020003'))
2020-01-16 14:59:09,760 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 14:59:09,761 - INFO: ('the query result is:', ((0,),))
2020-01-16 14:59:09,974 - INFO: (True,)
2020-01-16 14:59:09,975 - INFO: ('the mock template id is :', 'mock_uom170010001')
2020-01-16 14:59:10,181 - INFO: (True,)
2020-01-16 14:59:10,182 - INFO: ('the mock template id is :', 'mock_uom170010002')
2020-01-16 14:59:10,379 - INFO: (True,)
2020-01-16 14:59:10,379 - INFO: ('the mock template id is :', 'mock_uom170020003')
2020-01-16 14:59:10,795 - INFO: (True,)
2020-01-16 14:59:10,795 - INFO: (['successfully', 'successfully', 'successfully'],)
2020-01-16 14:59:10,795 - INFO: (3,)
2020-01-16 14:59:10,801 - INFO: ('receive the dubbo request ...',)
2020-01-16 14:59:11,800 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2020-01-16 14:59:11,801 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 14:59:11,801 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 14:59:11,801 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 14:59:11,801 - INFO: ('Need to use mock data ....',)
2020-01-16 14:59:11,802 - INFO: ('Begin to user query the mock data',)
2020-01-16 14:59:13,370 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 14:59:13,371 - INFO: ('the query result is:', ((3,),))
2020-01-16 14:59:13,519 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 14:59:13,519 - INFO: ('the query result is:', ((3,),))
2020-01-16 14:59:13,520 - INFO: ('Query the mock_data successfully...',)
2020-01-16 14:59:13,520 - INFO: ('mock_total_num is :', 3)
2020-01-16 14:59:13,520 - INFO: ('mock_succuss_num is :', 3)
2020-01-16 14:59:13,520 - INFO: ('all the mock template is used successfully .',)
2020-01-16 14:59:13,521 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 14:59:13,521 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 14:59:13,939 - INFO: ('update the test_status successfully',)
2020-01-16 14:59:13,940 - INFO: ('------------------ python return result ------------------',)
2020-01-16 15:19:53,595 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 15:19:53,595 - INFO: ('python receive message :', ('uom170010001', 'invoke com.cmiot.uom.service.order.hoa.GetOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"c99990000101","item":"1111"})', 'mock_uom200010001'))
2020-01-16 15:19:53,595 - INFO: ('judge whether need the mock data:', 'mock_uom200010001')
2020-01-16 15:19:53,595 - INFO: ('the mock_id flag is:', 'mock_uom200010001')
2020-01-16 15:19:53,595 - INFO: ('Need the mook data ...',)
2020-01-16 15:19:53,595 - INFO: ('begin to record the test case into database',)
2020-01-16 15:19:53,595 - INFO: ('the mock template id is :', ('mock_uom200010001',))
2020-01-16 15:19:54,019 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 15:19:54,019 - INFO: ('the query result is:', ((0,),))
2020-01-16 15:19:54,237 - INFO: (True,)
2020-01-16 15:19:54,238 - INFO: ('the mock template id is :', 'mock_uom200010001')
2020-01-16 15:19:54,397 - INFO: (True,)
2020-01-16 15:19:54,398 - INFO: (['successfully'],)
2020-01-16 15:19:54,398 - INFO: (1,)
2020-01-16 15:19:54,404 - INFO: ('receive the dubbo request ...',)
2020-01-16 15:19:54,774 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"operationCode":"19758485:c99990000101:item:00264013cc04484c8b0c06f8ad88c165","timestamp":1579158037892}}')
2020-01-16 15:19:54,775 - INFO: ('response_return test_case_id is : ', 'uom170010001')
2020-01-16 15:19:54,775 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 15:19:54,775 - INFO: ('the test case is : ', 'uom170010001')
2020-01-16 15:19:54,776 - INFO: ('Need to use mock data ....',)
2020-01-16 15:19:54,776 - INFO: ('Begin to user query the mock data',)
2020-01-16 15:19:54,907 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 15:19:54,908 - INFO: ('the query result is:', ((1,),))
2020-01-16 15:19:55,276 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 15:19:55,276 - INFO: ('the query result is:', ((1,),))
2020-01-16 15:19:55,277 - INFO: ('Query the mock_data successfully...',)
2020-01-16 15:19:55,277 - INFO: ('mock_total_num is :', 1)
2020-01-16 15:19:55,277 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 15:19:55,277 - INFO: ('all the mock template is used successfully .',)
2020-01-16 15:19:55,278 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 15:19:55,278 - INFO: ('update step case_id', 'uom170010001')
2020-01-16 15:19:55,477 - INFO: ('update the test_status successfully',)
2020-01-16 15:19:55,478 - INFO: ('------------------ python return result ------------------',)
2020-01-16 15:25:17,613 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 15:25:17,613 - INFO: ('python receive message :', ('uom200010001', 'invoke com.cmiot.uom.service.order.hoa.GetOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"c99990000101","item":"1111"})', 'mock_uom200010001'))
2020-01-16 15:25:17,613 - INFO: ('judge whether need the mock data:', 'mock_uom200010001')
2020-01-16 15:25:17,613 - INFO: ('the mock_id flag is:', 'mock_uom200010001')
2020-01-16 15:25:17,613 - INFO: ('Need the mook data ...',)
2020-01-16 15:25:17,613 - INFO: ('begin to record the test case into database',)
2020-01-16 15:25:17,613 - INFO: ('the mock template id is :', ('mock_uom200010001',))
2020-01-16 15:25:17,695 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 15:25:17,696 - INFO: ('the query result is:', ((0,),))
2020-01-16 15:25:17,788 - INFO: (True,)
2020-01-16 15:25:17,788 - INFO: ('the mock template id is :', 'mock_uom200010001')
2020-01-16 15:25:17,992 - INFO: (True,)
2020-01-16 15:25:17,992 - INFO: (['successfully'],)
2020-01-16 15:25:17,993 - INFO: (1,)
2020-01-16 15:25:17,999 - INFO: ('receive the dubbo request ...',)
2020-01-16 15:25:18,336 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"operationCode":"19758485:c99990000101:item:00264013cc04484c8b0c06f8ad88c165","timestamp":1579158037892}}')
2020-01-16 15:25:18,336 - INFO: ('response_return test_case_id is : ', 'uom200010001')
2020-01-16 15:25:18,337 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 15:25:18,337 - INFO: ('the test case is : ', 'uom200010001')
2020-01-16 15:25:18,337 - INFO: ('Need to use mock data ....',)
2020-01-16 15:25:18,337 - INFO: ('Begin to user query the mock data',)
2020-01-16 15:25:18,465 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 15:25:18,465 - INFO: ('the query result is:', ((1,),))
2020-01-16 15:25:18,580 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 15:25:18,580 - INFO: ('the query result is:', ((1,),))
2020-01-16 15:25:18,581 - INFO: ('Query the mock_data successfully...',)
2020-01-16 15:25:18,581 - INFO: ('mock_total_num is :', 1)
2020-01-16 15:25:18,581 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 15:25:18,581 - INFO: ('all the mock template is used successfully .',)
2020-01-16 15:25:18,581 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 15:25:18,581 - INFO: ('update step case_id', 'uom200010001')
2020-01-16 15:25:18,808 - INFO: ('update the test_status successfully',)
2020-01-16 15:25:18,808 - INFO: ('------------------ python return result ------------------',)
2020-01-16 15:25:18,886 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 15:25:18,886 - INFO: ('python receive message :', ('uom200020001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"","item":"1111"})'))
2020-01-16 15:25:18,886 - INFO: ('judge whether need the mock data:', '0')
2020-01-16 15:25:18,886 - INFO: ('the mock_id flag is:', '0')
2020-01-16 15:25:18,892 - INFO: ('receive the dubbo request ...',)
2020-01-16 15:25:19,054 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"Something wrong .No Mock data return."}')
2020-01-16 15:25:19,054 - INFO: ('response_return test_case_id is : ', 'uom200020001')
2020-01-16 15:25:19,054 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 15:25:19,055 - INFO: ('the test case is : ', 'uom200020001')
2020-01-16 15:25:19,055 - INFO: ('No need to use mock data,return ...',)
2020-01-16 15:25:19,055 - INFO: ('------------------ python return result ------------------',)
2020-01-16 15:25:19,082 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 16:09:24,798 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:09:24,798 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:09:24,799 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:09:24,799 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:09:24,799 - INFO: ('Need the mook data ...',)
2020-01-16 16:09:24,799 - INFO: ('begin to record the test case into database',)
2020-01-16 16:09:24,799 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:09:24,910 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:09:24,910 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:09:25,074 - INFO: (True,)
2020-01-16 16:09:25,075 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:09:25,263 - INFO: (True,)
2020-01-16 16:09:25,263 - INFO: (['successfully'],)
2020-01-16 16:09:25,264 - INFO: (1,)
2020-01-16 16:09:25,275 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:09:25,724 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:09:25,724 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:09:25,725 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:09:25,725 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:09:25,725 - INFO: ('Need to use mock data ....',)
2020-01-16 16:09:25,725 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:09:25,802 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:09:25,802 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:09:25,847 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:09:25,847 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:09:25,848 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:09:25,848 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:09:25,848 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:09:25,849 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:09:25,849 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:09:25,849 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:09:25,947 - INFO: ('update the test_status successfully',)
2020-01-16 16:09:25,947 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:19:08,683 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:19:08,684 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:19:08,684 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:19:08,684 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:19:08,684 - INFO: ('Need the mook data ...',)
2020-01-16 16:19:08,684 - INFO: ('begin to record the test case into database',)
2020-01-16 16:19:08,684 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:19:08,833 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:19:08,833 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:19:08,995 - INFO: (True,)
2020-01-16 16:19:08,995 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:19:09,191 - INFO: (True,)
2020-01-16 16:19:09,191 - INFO: (['successfully'],)
2020-01-16 16:19:09,192 - INFO: (1,)
2020-01-16 16:19:09,200 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:19:09,552 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:19:09,552 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:19:09,552 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:19:09,553 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:19:09,553 - INFO: ('Need to use mock data ....',)
2020-01-16 16:19:09,553 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:19:09,670 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:19:09,671 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:09,777 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:19:09,777 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:09,777 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:19:09,777 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:19:09,778 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:19:09,778 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:19:09,778 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:19:09,778 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:19:09,945 - INFO: ('update the test_status successfully',)
2020-01-16 16:19:09,945 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:19:09,999 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:19:09,999 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom070020001'))
2020-01-16 16:19:09,999 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:19:09,999 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:19:09,999 - INFO: ('Need the mook data ...',)
2020-01-16 16:19:09,999 - INFO: ('begin to record the test case into database',)
2020-01-16 16:19:09,999 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:19:10,153 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:19:10,154 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:19:10,272 - INFO: (True,)
2020-01-16 16:19:10,272 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:19:10,405 - INFO: (True,)
2020-01-16 16:19:10,406 - INFO: (['successfully'],)
2020-01-16 16:19:10,406 - INFO: (1,)
2020-01-16 16:19:10,412 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:19:10,838 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2020-01-16 16:19:10,839 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:19:10,839 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:19:10,839 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:19:10,840 - INFO: ('Need to use mock data ....',)
2020-01-16 16:19:10,840 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:19:10,913 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:19:10,914 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:10,993 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:19:10,993 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:10,994 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:19:10,994 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:19:10,994 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:19:10,994 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:19:10,994 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:19:10,995 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:19:11,112 - INFO: ('update the test_status successfully',)
2020-01-16 16:19:11,113 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:19:11,140 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 16:19:47,889 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:19:47,889 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:19:47,889 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:19:47,889 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:19:47,889 - INFO: ('Need the mook data ...',)
2020-01-16 16:19:47,889 - INFO: ('begin to record the test case into database',)
2020-01-16 16:19:47,889 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:19:48,051 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:19:48,051 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:19:48,283 - INFO: (True,)
2020-01-16 16:19:48,283 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:19:48,436 - INFO: (True,)
2020-01-16 16:19:48,437 - INFO: (['successfully'],)
2020-01-16 16:19:48,437 - INFO: (1,)
2020-01-16 16:19:48,445 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:19:48,805 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:19:48,805 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:19:48,806 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:19:48,806 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:19:48,806 - INFO: ('Need to use mock data ....',)
2020-01-16 16:19:48,806 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:19:48,906 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:19:48,906 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:48,997 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:19:48,998 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:48,998 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:19:48,998 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:19:48,999 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:19:48,999 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:19:48,999 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:19:48,999 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:19:49,121 - INFO: ('update the test_status successfully',)
2020-01-16 16:19:49,122 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:19:49,192 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:19:49,192 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom070020001'))
2020-01-16 16:19:49,192 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:19:49,192 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:19:49,193 - INFO: ('Need the mook data ...',)
2020-01-16 16:19:49,193 - INFO: ('begin to record the test case into database',)
2020-01-16 16:19:49,193 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:19:49,276 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:19:49,276 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:19:49,407 - INFO: (True,)
2020-01-16 16:19:49,407 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:19:49,522 - INFO: (True,)
2020-01-16 16:19:49,522 - INFO: (['successfully'],)
2020-01-16 16:19:49,523 - INFO: (1,)
2020-01-16 16:19:49,529 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:19:49,978 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2020-01-16 16:19:49,978 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:19:49,979 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:19:49,979 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:19:49,979 - INFO: ('Need to use mock data ....',)
2020-01-16 16:19:49,979 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:19:50,334 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:19:50,334 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:50,412 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:19:50,412 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:19:50,413 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:19:50,413 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:19:50,413 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:19:50,413 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:19:50,413 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:19:50,413 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:19:50,527 - INFO: ('update the test_status successfully',)
2020-01-16 16:19:50,527 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:19:50,552 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 16:20:11,845 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:20:11,845 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:20:11,845 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:20:11,845 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:20:11,845 - INFO: ('Need the mook data ...',)
2020-01-16 16:20:11,846 - INFO: ('begin to record the test case into database',)
2020-01-16 16:20:11,846 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:20:11,948 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:20:11,949 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:20:12,105 - INFO: (True,)
2020-01-16 16:20:12,105 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:20:12,314 - INFO: (True,)
2020-01-16 16:20:12,314 - INFO: (['successfully'],)
2020-01-16 16:20:12,314 - INFO: (1,)
2020-01-16 16:20:12,320 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:20:12,657 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:20:12,657 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:20:12,657 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:20:12,657 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:20:12,657 - INFO: ('Need to use mock data ....',)
2020-01-16 16:20:12,657 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:20:12,714 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:20:12,714 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:12,780 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:20:12,780 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:12,781 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:20:12,781 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:20:12,781 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:20:12,781 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:20:12,781 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:20:12,781 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:20:12,849 - INFO: ('update the test_status successfully',)
2020-01-16 16:20:12,849 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:20:12,902 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:20:12,902 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070020001'))
2020-01-16 16:20:12,902 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:20:12,903 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:20:12,903 - INFO: ('Need the mook data ...',)
2020-01-16 16:20:12,903 - INFO: ('begin to record the test case into database',)
2020-01-16 16:20:12,903 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:20:12,964 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:20:12,964 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:20:13,106 - INFO: (True,)
2020-01-16 16:20:13,107 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:20:13,289 - INFO: (True,)
2020-01-16 16:20:13,290 - INFO: (['successfully'],)
2020-01-16 16:20:13,290 - INFO: (1,)
2020-01-16 16:20:13,296 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:20:13,625 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2020-01-16 16:20:13,625 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:20:13,625 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:20:13,625 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:20:13,625 - INFO: ('Need to use mock data ....',)
2020-01-16 16:20:13,626 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:20:13,656 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:20:13,656 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:13,688 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:20:13,688 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:13,689 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:20:13,689 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:20:13,689 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:20:13,689 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:20:13,690 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:20:13,690 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:20:13,780 - INFO: ('update the test_status successfully',)
2020-01-16 16:20:13,781 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:20:13,797 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 16:20:42,033 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:20:42,033 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:20:42,034 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:20:42,034 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:20:42,034 - INFO: ('Need the mook data ...',)
2020-01-16 16:20:42,034 - INFO: ('begin to record the test case into database',)
2020-01-16 16:20:42,034 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:20:42,180 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:20:42,180 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:20:42,393 - INFO: (True,)
2020-01-16 16:20:42,394 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:20:42,523 - INFO: (True,)
2020-01-16 16:20:42,523 - INFO: (['successfully'],)
2020-01-16 16:20:42,524 - INFO: (1,)
2020-01-16 16:20:42,530 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:20:42,870 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:20:42,871 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:20:42,871 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:20:42,872 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:20:42,872 - INFO: ('Need to use mock data ....',)
2020-01-16 16:20:42,872 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:20:42,910 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:20:42,911 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:42,975 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:20:42,975 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:42,975 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:20:42,976 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:20:42,976 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:20:42,976 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:20:42,976 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:20:42,976 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:20:43,076 - INFO: ('update the test_status successfully',)
2020-01-16 16:20:43,076 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:20:43,145 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:20:43,146 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.hoa.GetRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070020001'))
2020-01-16 16:20:43,146 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:20:43,146 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:20:43,146 - INFO: ('Need the mook data ...',)
2020-01-16 16:20:43,146 - INFO: ('begin to record the test case into database',)
2020-01-16 16:20:43,146 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:20:43,201 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:20:43,201 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:20:43,264 - INFO: (True,)
2020-01-16 16:20:43,265 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:20:43,346 - INFO: (True,)
2020-01-16 16:20:43,346 - INFO: (['successfully'],)
2020-01-16 16:20:43,346 - INFO: (1,)
2020-01-16 16:20:43,353 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:20:43,740 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2020-01-16 16:20:43,741 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:20:43,741 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:20:43,741 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:20:43,741 - INFO: ('Need to use mock data ....',)
2020-01-16 16:20:43,741 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:20:43,805 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:20:43,805 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:43,848 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:20:43,848 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:20:43,849 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:20:43,849 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:20:43,849 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:20:43,850 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:20:43,850 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:20:43,850 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:20:44,003 - INFO: ('update the test_status successfully',)
2020-01-16 16:20:44,004 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:20:44,026 - INFO: ('"resultCode":"000000" is not in actual result ',)
2020-01-16 16:21:07,288 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:21:07,288 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:21:07,288 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:21:07,288 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:21:07,288 - INFO: ('Need the mook data ...',)
2020-01-16 16:21:07,288 - INFO: ('begin to record the test case into database',)
2020-01-16 16:21:07,288 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:21:07,339 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:21:07,339 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:21:07,448 - INFO: (True,)
2020-01-16 16:21:07,449 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:21:07,549 - INFO: (True,)
2020-01-16 16:21:07,550 - INFO: (['successfully'],)
2020-01-16 16:21:07,550 - INFO: (1,)
2020-01-16 16:21:07,556 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:21:07,968 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:21:07,968 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:21:07,968 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:21:07,969 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:21:07,969 - INFO: ('Need to use mock data ....',)
2020-01-16 16:21:07,969 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:21:08,089 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:21:08,090 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:08,124 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:21:08,124 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:08,125 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:21:08,125 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:21:08,125 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:21:08,125 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:21:08,126 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:21:08,126 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:21:08,231 - INFO: ('update the test_status successfully',)
2020-01-16 16:21:08,232 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:21:08,299 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:21:08,299 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070020001'))
2020-01-16 16:21:08,299 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:21:08,299 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:21:08,299 - INFO: ('Need the mook data ...',)
2020-01-16 16:21:08,299 - INFO: ('begin to record the test case into database',)
2020-01-16 16:21:08,299 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:21:08,412 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:21:08,412 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:21:08,581 - INFO: (True,)
2020-01-16 16:21:08,581 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:21:08,711 - INFO: (True,)
2020-01-16 16:21:08,711 - INFO: (['successfully'],)
2020-01-16 16:21:08,711 - INFO: (1,)
2020-01-16 16:21:08,717 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:21:09,077 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"-1"}}')
2020-01-16 16:21:09,077 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:21:09,078 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:21:09,078 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:21:09,078 - INFO: ('Need to use mock data ....',)
2020-01-16 16:21:09,078 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:21:09,725 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:21:09,725 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:09,900 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:21:09,900 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:09,900 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:21:09,900 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:21:09,900 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:21:09,901 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:21:09,901 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:21:09,901 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:21:10,392 - INFO: ('update the test_status successfully',)
2020-01-16 16:21:10,393 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:21:28,906 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:21:28,907 - INFO: ('python receive message :', ('uom070010001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070010001'))
2020-01-16 16:21:28,907 - INFO: ('judge whether need the mock data:', 'mock_uom070010001')
2020-01-16 16:21:28,907 - INFO: ('the mock_id flag is:', 'mock_uom070010001')
2020-01-16 16:21:28,907 - INFO: ('Need the mook data ...',)
2020-01-16 16:21:28,907 - INFO: ('begin to record the test case into database',)
2020-01-16 16:21:28,907 - INFO: ('the mock template id is :', ('mock_uom070010001',))
2020-01-16 16:21:29,047 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:21:29,047 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:21:29,222 - INFO: (True,)
2020-01-16 16:21:29,223 - INFO: ('the mock template id is :', 'mock_uom070010001')
2020-01-16 16:21:29,398 - INFO: (True,)
2020-01-16 16:21:29,398 - INFO: (['successfully'],)
2020-01-16 16:21:29,398 - INFO: (1,)
2020-01-16 16:21:29,412 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:21:29,789 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"381"}}')
2020-01-16 16:21:29,790 - INFO: ('response_return test_case_id is : ', 'uom070010001')
2020-01-16 16:21:29,790 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:21:29,790 - INFO: ('the test case is : ', 'uom070010001')
2020-01-16 16:21:29,791 - INFO: ('Need to use mock data ....',)
2020-01-16 16:21:29,791 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:21:29,952 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:21:29,952 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:30,124 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:21:30,124 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:30,125 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:21:30,125 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:21:30,125 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:21:30,125 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:21:30,125 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:21:30,126 - INFO: ('update step case_id', 'uom070010001')
2020-01-16 16:21:31,310 - INFO: ('update the test_status successfully',)
2020-01-16 16:21:31,310 - INFO: ('------------------ python return result ------------------',)
2020-01-16 16:21:31,356 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 16:21:31,356 - INFO: ('python receive message :', ('uom070020001', 'invoke com.cmiot.uom.service.order.GetDevSnRemainingDaysService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"c99990000101"})', 'mock_uom070020001'))
2020-01-16 16:21:31,356 - INFO: ('judge whether need the mock data:', 'mock_uom070020001')
2020-01-16 16:21:31,356 - INFO: ('the mock_id flag is:', 'mock_uom070020001')
2020-01-16 16:21:31,356 - INFO: ('Need the mook data ...',)
2020-01-16 16:21:31,356 - INFO: ('begin to record the test case into database',)
2020-01-16 16:21:31,357 - INFO: ('the mock template id is :', ('mock_uom070020001',))
2020-01-16 16:21:31,469 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 16:21:31,469 - INFO: ('the query result is:', ((0,),))
2020-01-16 16:21:31,642 - INFO: (True,)
2020-01-16 16:21:31,642 - INFO: ('the mock template id is :', 'mock_uom070020001')
2020-01-16 16:21:31,755 - INFO: (True,)
2020-01-16 16:21:31,755 - INFO: (['successfully'],)
2020-01-16 16:21:31,756 - INFO: (1,)
2020-01-16 16:21:31,767 - INFO: ('receive the dubbo request ...',)
2020-01-16 16:21:32,094 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"remainingDays":"-1"}}')
2020-01-16 16:21:32,094 - INFO: ('response_return test_case_id is : ', 'uom070020001')
2020-01-16 16:21:32,095 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 16:21:32,095 - INFO: ('the test case is : ', 'uom070020001')
2020-01-16 16:21:32,095 - INFO: ('Need to use mock data ....',)
2020-01-16 16:21:32,095 - INFO: ('Begin to user query the mock data',)
2020-01-16 16:21:32,215 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 16:21:32,215 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:32,301 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 16:21:32,302 - INFO: ('the query result is:', ((1,),))
2020-01-16 16:21:32,302 - INFO: ('Query the mock_data successfully...',)
2020-01-16 16:21:32,303 - INFO: ('mock_total_num is :', 1)
2020-01-16 16:21:32,303 - INFO: ('mock_succuss_num is :', 1)
2020-01-16 16:21:32,303 - INFO: ('all the mock template is used successfully .',)
2020-01-16 16:21:32,303 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 16:21:32,303 - INFO: ('update step case_id', 'uom070020001')
2020-01-16 16:21:32,490 - INFO: ('update the test_status successfully',)
2020-01-16 16:21:32,490 - INFO: ('------------------ python return result ------------------',)
2020-01-16 17:08:44,015 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 17:08:44,015 - INFO: ('python receive message :', ('uom280010001', 'invoke com.cmiot.uom.service.order.hoa.GetInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom280010001', 'mock_uom280010002', 'mock_uom280010003', 'mock_uom280010004', 'mock_uom280010005'))
2020-01-16 17:08:44,016 - INFO: ('judge whether need the mock data:', 'mock_uom280010001')
2020-01-16 17:08:44,016 - INFO: ('the mock_id flag is:', 'mock_uom280010001')
2020-01-16 17:08:44,016 - INFO: ('Need the mook data ...',)
2020-01-16 17:08:44,016 - INFO: ('begin to record the test case into database',)
2020-01-16 17:08:44,016 - INFO: ('the mock template id is :', ('mock_uom280010001', 'mock_uom280010002', 'mock_uom280010003', 'mock_uom280010004', 'mock_uom280010005'))
2020-01-16 17:08:44,048 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 17:08:44,048 - INFO: ('the query result is:', ((0,),))
2020-01-16 17:08:44,089 - INFO: (True,)
2020-01-16 17:08:44,090 - INFO: ('the mock template id is :', 'mock_uom280010001')
2020-01-16 17:08:44,181 - INFO: (True,)
2020-01-16 17:08:44,182 - INFO: ('the mock template id is :', 'mock_uom280010002')
2020-01-16 17:08:44,269 - INFO: (True,)
2020-01-16 17:08:44,269 - INFO: ('the mock template id is :', 'mock_uom280010003')
2020-01-16 17:08:44,380 - INFO: (True,)
2020-01-16 17:08:44,381 - INFO: ('the mock template id is :', 'mock_uom280010004')
2020-01-16 17:08:44,443 - INFO: (True,)
2020-01-16 17:08:44,444 - INFO: ('the mock template id is :', 'mock_uom280010005')
2020-01-16 17:08:44,546 - INFO: (True,)
2020-01-16 17:08:44,547 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 17:08:44,547 - INFO: (5,)
2020-01-16 17:08:44,605 - INFO: ('receive the dubbo request ...',)
2020-01-16 17:08:46,275 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000504173","startTime":1578412800,"endTime":1578585600,"orderTime":1578447454,"saveDay":"7","createPhone":"13996170811","devSn":"c99990000101","orderSource":"901","paymentWay":"3","orderList":[{"itemName":"全天录制+最近7天视频存储","pkgStorageType":"0"}]}]}')
2020-01-16 17:08:46,275 - INFO: ('response_return test_case_id is : ', 'uom280010001')
2020-01-16 17:08:46,276 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 17:08:46,277 - INFO: ('the test case is : ', 'uom280010001')
2020-01-16 17:08:46,277 - INFO: ('Need to use mock data ....',)
2020-01-16 17:08:46,277 - INFO: ('Begin to user query the mock data',)
2020-01-16 17:08:46,332 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 17:08:46,333 - INFO: ('the query result is:', ((5,),))
2020-01-16 17:08:46,398 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 17:08:46,398 - INFO: ('the query result is:', ((5,),))
2020-01-16 17:08:46,398 - INFO: ('Query the mock_data successfully...',)
2020-01-16 17:08:46,399 - INFO: ('mock_total_num is :', 5)
2020-01-16 17:08:46,399 - INFO: ('mock_succuss_num is :', 5)
2020-01-16 17:08:46,399 - INFO: ('all the mock template is used successfully .',)
2020-01-16 17:08:46,399 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 17:08:46,399 - INFO: ('update step case_id', 'uom280010001')
2020-01-16 17:08:46,463 - INFO: ('update the test_status successfully',)
2020-01-16 17:08:46,463 - INFO: ('------------------ python return result ------------------',)
2020-01-16 17:19:46,779 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 17:19:46,779 - INFO: ('python receive message :', ('uom280010001', 'invoke com.cmiot.uom.service.order.hoa.GetInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom280010001', 'mock_uom280010002', 'mock_uom280010003', 'mock_uom280010004', 'mock_uom280010005'))
2020-01-16 17:19:46,779 - INFO: ('judge whether need the mock data:', 'mock_uom280010001')
2020-01-16 17:19:46,779 - INFO: ('the mock_id flag is:', 'mock_uom280010001')
2020-01-16 17:19:46,779 - INFO: ('Need the mook data ...',)
2020-01-16 17:19:46,779 - INFO: ('begin to record the test case into database',)
2020-01-16 17:19:46,780 - INFO: ('the mock template id is :', ('mock_uom280010001', 'mock_uom280010002', 'mock_uom280010003', 'mock_uom280010004', 'mock_uom280010005'))
2020-01-16 17:19:46,805 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 17:19:46,805 - INFO: ('the query result is:', ((0,),))
2020-01-16 17:19:46,911 - INFO: (True,)
2020-01-16 17:19:46,912 - INFO: ('the mock template id is :', 'mock_uom280010001')
2020-01-16 17:19:46,992 - INFO: (True,)
2020-01-16 17:19:46,992 - INFO: ('the mock template id is :', 'mock_uom280010002')
2020-01-16 17:19:47,068 - INFO: (True,)
2020-01-16 17:19:47,068 - INFO: ('the mock template id is :', 'mock_uom280010003')
2020-01-16 17:19:47,190 - INFO: (True,)
2020-01-16 17:19:47,190 - INFO: ('the mock template id is :', 'mock_uom280010004')
2020-01-16 17:19:47,254 - INFO: (True,)
2020-01-16 17:19:47,254 - INFO: ('the mock template id is :', 'mock_uom280010005')
2020-01-16 17:19:47,403 - INFO: (True,)
2020-01-16 17:19:47,403 - INFO: (['successfully', 'successfully', 'successfully', 'successfully', 'successfully'],)
2020-01-16 17:19:47,403 - INFO: (5,)
2020-01-16 17:19:47,410 - INFO: ('receive the dubbo request ...',)
2020-01-16 17:19:49,116 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000504173","startTime":1578412800,"endTime":1578585600,"orderTime":1578447454,"saveDay":"7","createPhone":"13996170811","devSn":"c99990000101","orderSource":"901","paymentWay":"3","orderList":[{"itemName":"全天录制+最近7天视频存储","pkgStorageType":"0"}]}]}')
2020-01-16 17:19:49,117 - INFO: ('response_return test_case_id is : ', 'uom280010001')
2020-01-16 17:19:49,117 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 17:19:49,117 - INFO: ('the test case is : ', 'uom280010001')
2020-01-16 17:19:49,117 - INFO: ('Need to use mock data ....',)
2020-01-16 17:19:49,118 - INFO: ('Begin to user query the mock data',)
2020-01-16 17:19:49,180 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 17:19:49,181 - INFO: ('the query result is:', ((5,),))
2020-01-16 17:19:49,220 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 17:19:49,220 - INFO: ('the query result is:', ((5,),))
2020-01-16 17:19:49,220 - INFO: ('Query the mock_data successfully...',)
2020-01-16 17:19:49,221 - INFO: ('mock_total_num is :', 5)
2020-01-16 17:19:49,221 - INFO: ('mock_succuss_num is :', 5)
2020-01-16 17:19:49,221 - INFO: ('all the mock template is used successfully .',)
2020-01-16 17:19:49,221 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 17:19:49,221 - INFO: ('update step case_id', 'uom280010001')
2020-01-16 17:19:49,314 - INFO: ('update the test_status successfully',)
2020-01-16 17:19:49,314 - INFO: ('------------------ python return result ------------------',)
2020-01-16 17:22:46,755 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 17:22:46,755 - INFO: ('python receive message :', ('uom280010001', 'invoke com.cmiot.uom.service.order.hoa.GetInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:22:46,755 - INFO: ('judge whether need the mock data:', 'mock_uom280010001')
2020-01-16 17:22:46,755 - INFO: ('the mock_id flag is:', 'mock_uom280010001')
2020-01-16 17:22:46,755 - INFO: ('Need the mook data ...',)
2020-01-16 17:22:46,755 - INFO: ('begin to record the test case into database',)
2020-01-16 17:22:46,755 - INFO: ('the mock template id is :', ('mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:22:46,873 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 17:22:46,873 - INFO: ('the query result is:', ((0,),))
2020-01-16 17:22:47,047 - INFO: (True,)
2020-01-16 17:22:47,047 - INFO: ('the mock template id is :', 'mock_uom280010001')
2020-01-16 17:22:47,251 - INFO: (True,)
2020-01-16 17:22:47,251 - INFO: ('the mock template id is :', 'mock_uom280010002')
2020-01-16 17:22:47,475 - INFO: (True,)
2020-01-16 17:22:47,475 - INFO: ('the mock template id is :', 'mock_uom280020003')
2020-01-16 17:22:47,627 - INFO: (True,)
2020-01-16 17:22:47,627 - INFO: (['successfully', 'successfully', 'successfully'],)
2020-01-16 17:22:47,627 - INFO: (3,)
2020-01-16 17:22:47,633 - INFO: ('receive the dubbo request ...',)
2020-01-16 17:22:48,699 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2020-01-16 17:22:48,699 - INFO: ('response_return test_case_id is : ', 'uom280010001')
2020-01-16 17:22:48,700 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 17:22:48,700 - INFO: ('the test case is : ', 'uom280010001')
2020-01-16 17:22:48,700 - INFO: ('Need to use mock data ....',)
2020-01-16 17:22:48,700 - INFO: ('Begin to user query the mock data',)
2020-01-16 17:22:50,047 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 17:22:50,048 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:22:50,175 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 17:22:50,175 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:22:50,176 - INFO: ('Query the mock_data successfully...',)
2020-01-16 17:22:50,176 - INFO: ('mock_total_num is :', 3)
2020-01-16 17:22:50,176 - INFO: ('mock_succuss_num is :', 3)
2020-01-16 17:22:50,176 - INFO: ('all the mock template is used successfully .',)
2020-01-16 17:22:50,176 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 17:22:50,177 - INFO: ('update step case_id', 'uom280010001')
2020-01-16 17:22:50,337 - INFO: ('update the test_status successfully',)
2020-01-16 17:22:50,337 - INFO: ('------------------ python return result ------------------',)
2020-01-16 17:22:50,362 - INFO: ('"orderId":"100000504173" is not in actual result ',)
2020-01-16 17:23:10,628 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 17:23:10,628 - INFO: ('python receive message :', ('uom280010001', 'invoke com.cmiot.uom.service.order.hoa.GetInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:23:10,628 - INFO: ('judge whether need the mock data:', 'mock_uom280010001')
2020-01-16 17:23:10,628 - INFO: ('the mock_id flag is:', 'mock_uom280010001')
2020-01-16 17:23:10,628 - INFO: ('Need the mook data ...',)
2020-01-16 17:23:10,628 - INFO: ('begin to record the test case into database',)
2020-01-16 17:23:10,628 - INFO: ('the mock template id is :', ('mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:23:11,934 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 17:23:11,934 - INFO: ('the query result is:', ((0,),))
2020-01-16 17:23:12,090 - INFO: (True,)
2020-01-16 17:23:12,090 - INFO: ('the mock template id is :', 'mock_uom280010001')
2020-01-16 17:23:12,268 - INFO: (True,)
2020-01-16 17:23:12,268 - INFO: ('the mock template id is :', 'mock_uom280010002')
2020-01-16 17:23:12,432 - INFO: (True,)
2020-01-16 17:23:12,432 - INFO: ('the mock template id is :', 'mock_uom280020003')
2020-01-16 17:23:12,849 - INFO: (True,)
2020-01-16 17:23:12,850 - INFO: (['successfully', 'successfully', 'successfully'],)
2020-01-16 17:23:12,850 - INFO: (3,)
2020-01-16 17:23:12,855 - INFO: ('receive the dubbo request ...',)
2020-01-16 17:23:13,927 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2020-01-16 17:23:13,928 - INFO: ('response_return test_case_id is : ', 'uom280010001')
2020-01-16 17:23:13,928 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 17:23:13,928 - INFO: ('the test case is : ', 'uom280010001')
2020-01-16 17:23:13,928 - INFO: ('Need to use mock data ....',)
2020-01-16 17:23:13,928 - INFO: ('Begin to user query the mock data',)
2020-01-16 17:23:14,015 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 17:23:14,015 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:23:14,115 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 17:23:14,115 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:23:14,116 - INFO: ('Query the mock_data successfully...',)
2020-01-16 17:23:14,116 - INFO: ('mock_total_num is :', 3)
2020-01-16 17:23:14,116 - INFO: ('mock_succuss_num is :', 3)
2020-01-16 17:23:14,116 - INFO: ('all the mock template is used successfully .',)
2020-01-16 17:23:14,116 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 17:23:14,116 - INFO: ('update step case_id', 'uom280010001')
2020-01-16 17:23:14,290 - INFO: ('update the test_status successfully',)
2020-01-16 17:23:14,290 - INFO: ('------------------ python return result ------------------',)
2020-01-16 17:23:14,313 - INFO: ('"orderId":"100000504173" is not in actual result ',)
2020-01-16 17:23:53,892 - INFO: ('------------------ python received testcase ------------------',)
2020-01-16 17:23:53,892 - INFO: ('python receive message :', ('uom280010001', 'invoke com.cmiot.uom.service.order.hoa.GetInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})', 'mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:23:53,893 - INFO: ('judge whether need the mock data:', 'mock_uom280010001')
2020-01-16 17:23:53,893 - INFO: ('the mock_id flag is:', 'mock_uom280010001')
2020-01-16 17:23:53,893 - INFO: ('Need the mook data ...',)
2020-01-16 17:23:53,893 - INFO: ('begin to record the test case into database',)
2020-01-16 17:23:53,893 - INFO: ('the mock template id is :', ('mock_uom280010001', 'mock_uom280010002', 'mock_uom280020003'))
2020-01-16 17:23:53,942 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2020-01-16 17:23:53,943 - INFO: ('the query result is:', ((0,),))
2020-01-16 17:23:54,039 - INFO: (True,)
2020-01-16 17:23:54,039 - INFO: ('the mock template id is :', 'mock_uom280010001')
2020-01-16 17:23:54,207 - INFO: (True,)
2020-01-16 17:23:54,207 - INFO: ('the mock template id is :', 'mock_uom280010002')
2020-01-16 17:23:54,381 - INFO: (True,)
2020-01-16 17:23:54,381 - INFO: ('the mock template id is :', 'mock_uom280020003')
2020-01-16 17:23:54,496 - INFO: (True,)
2020-01-16 17:23:54,496 - INFO: (['successfully', 'successfully', 'successfully'],)
2020-01-16 17:23:54,496 - INFO: (3,)
2020-01-16 17:23:54,502 - INFO: ('receive the dubbo request ...',)
2020-01-16 17:23:55,470 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2020-01-16 17:23:55,470 - INFO: ('response_return test_case_id is : ', 'uom280010001')
2020-01-16 17:23:55,470 - INFO: ('begin to return the mock data from db ... ',)
2020-01-16 17:23:55,471 - INFO: ('the test case is : ', 'uom280010001')
2020-01-16 17:23:55,471 - INFO: ('Need to use mock data ....',)
2020-01-16 17:23:55,471 - INFO: ('Begin to user query the mock data',)
2020-01-16 17:23:55,563 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2020-01-16 17:23:55,564 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:23:55,627 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2020-01-16 17:23:55,627 - INFO: ('the query result is:', ((3,),))
2020-01-16 17:23:55,628 - INFO: ('Query the mock_data successfully...',)
2020-01-16 17:23:55,628 - INFO: ('mock_total_num is :', 3)
2020-01-16 17:23:55,628 - INFO: ('mock_succuss_num is :', 3)
2020-01-16 17:23:55,628 - INFO: ('all the mock template is used successfully .',)
2020-01-16 17:23:55,628 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2020-01-16 17:23:55,629 - INFO: ('update step case_id', 'uom280010001')
2020-01-16 17:23:55,712 - INFO: ('update the test_status successfully',)
2020-01-16 17:23:55,712 - INFO: ('------------------ python return result ------------------',)
