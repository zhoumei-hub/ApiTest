2019-09-29 00:20:12,360 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 00:20:12,360 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 00:20:12,361 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 00:20:12,361 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 00:20:12,361 - INFO: ('Need the mook data ...',)
2019-09-29 00:20:12,361 - INFO: ('begin to record the test case into database',)
2019-09-29 00:20:12,362 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 00:20:12,375 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 00:20:12,375 - INFO: ('the query result is:', ((2,),))
2019-09-29 00:20:12,376 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-09-29 00:20:12,376 - INFO: ('Please wait a while,someone is running the testcase at the same time ',)
2019-09-29 00:20:12,376 - INFO: ('------------------ python return result ------------------',)
2019-09-29 00:20:12,395 - INFO: ('13618254716 is not in actual result ',)
2019-09-29 00:20:12,396 - INFO: ('"oprerationType":"1000000009" is not in actual result ',)
2019-09-29 00:20:59,376 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 00:20:59,376 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 00:20:59,377 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 00:20:59,377 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 00:20:59,377 - INFO: ('Need the mook data ...',)
2019-09-29 00:20:59,377 - INFO: ('begin to record the test case into database',)
2019-09-29 00:20:59,377 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 00:20:59,389 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 00:20:59,390 - INFO: ('the query result is:', ((0,),))
2019-09-29 00:20:59,403 - INFO: (True,)
2019-09-29 00:20:59,403 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 00:20:59,421 - INFO: (True,)
2019-09-29 00:20:59,421 - INFO: ('the mock template id is :', 'mock_template_010102')
2019-09-29 00:20:59,445 - INFO: (True,)
2019-09-29 00:20:59,445 - INFO: (['successfully', 'successfully'],)
2019-09-29 00:20:59,445 - INFO: (2,)
2019-09-29 00:20:59,450 - INFO: ('receive the dubbo request ...',)
2019-09-29 00:21:01,349 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800}]}')
2019-09-29 00:21:01,350 - INFO: ('response_return test_case_id is : ', 'qos020010001')
2019-09-29 00:21:01,350 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 00:21:01,350 - INFO: ('the test case is : ', 'qos020010001')
2019-09-29 00:21:01,350 - INFO: ('Need to use mock data ....',)
2019-09-29 00:21:01,350 - INFO: ('Begin to user query the mock data',)
2019-09-29 00:21:01,364 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 00:21:01,364 - INFO: ('the query result is:', ((2,),))
2019-09-29 00:21:01,387 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 00:21:01,387 - INFO: ('the query result is:', ((2,),))
2019-09-29 00:21:01,388 - INFO: ('Query the mock_data successfully...',)
2019-09-29 00:21:01,388 - INFO: ('mock_total_num is :', 2)
2019-09-29 00:21:01,388 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 00:21:01,388 - INFO: ('all the mock template is used successfully .',)
2019-09-29 00:21:01,389 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 00:21:01,389 - INFO: ('update step case_id', 'qos020010001')
2019-09-29 00:21:01,415 - INFO: ('update the test_status successfully',)
2019-09-29 00:21:01,415 - INFO: ('------------------ python return result ------------------',)
2019-09-29 00:21:01,436 - INFO: ('"oprerationType":"1000000009" is not in actual result ',)
2019-09-29 00:22:12,260 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 00:22:12,261 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 00:22:12,262 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 00:22:12,262 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 00:22:12,262 - INFO: ('Need the mook data ...',)
2019-09-29 00:22:12,262 - INFO: ('begin to record the test case into database',)
2019-09-29 00:22:12,262 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 00:22:12,282 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 00:22:12,282 - INFO: ('the query result is:', ((0,),))
2019-09-29 00:22:12,313 - INFO: (True,)
2019-09-29 00:22:12,314 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 00:22:12,336 - INFO: (True,)
2019-09-29 00:22:12,337 - INFO: ('the mock template id is :', 'mock_template_010102')
2019-09-29 00:22:12,366 - INFO: (True,)
2019-09-29 00:22:12,368 - INFO: (['successfully', 'successfully'],)
2019-09-29 00:22:12,368 - INFO: (2,)
2019-09-29 00:22:12,377 - INFO: ('receive the dubbo request ...',)
2019-09-29 00:22:12,854 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800}]}')
2019-09-29 00:22:12,855 - INFO: ('response_return test_case_id is : ', 'qos020010001')
2019-09-29 00:22:12,855 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 00:22:12,855 - INFO: ('the test case is : ', 'qos020010001')
2019-09-29 00:22:12,857 - INFO: ('Need to use mock data ....',)
2019-09-29 00:22:12,857 - INFO: ('Begin to user query the mock data',)
2019-09-29 00:22:12,882 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 00:22:12,883 - INFO: ('the query result is:', ((2,),))
2019-09-29 00:22:12,907 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 00:22:12,908 - INFO: ('the query result is:', ((2,),))
2019-09-29 00:22:12,909 - INFO: ('Query the mock_data successfully...',)
2019-09-29 00:22:12,909 - INFO: ('mock_total_num is :', 2)
2019-09-29 00:22:12,909 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 00:22:12,910 - INFO: ('all the mock template is used successfully .',)
2019-09-29 00:22:12,910 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 00:22:12,910 - INFO: ('update step case_id', 'qos020010001')
2019-09-29 00:22:12,943 - INFO: ('update the test_status successfully',)
2019-09-29 00:22:12,943 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:17:38,015 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:17:38,017 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 09:17:38,018 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 09:17:38,018 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 09:17:38,018 - INFO: ('Need the mook data ...',)
2019-09-29 09:17:38,018 - INFO: ('begin to record the test case into database',)
2019-09-29 09:17:38,018 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 09:17:38,036 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:17:38,037 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:17:38,066 - INFO: (True,)
2019-09-29 09:17:38,067 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 09:17:38,095 - INFO: (True,)
2019-09-29 09:17:38,096 - INFO: ('the mock template id is :', 'mock_template_010102')
2019-09-29 09:17:38,119 - INFO: (True,)
2019-09-29 09:17:38,120 - INFO: (['successfully', 'successfully'],)
2019-09-29 09:17:38,121 - INFO: (2,)
2019-09-29 09:17:38,126 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:17:39,754 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800}]}')
2019-09-29 09:17:39,755 - INFO: ('response_return test_case_id is : ', 'qos020010001')
2019-09-29 09:17:39,755 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:17:39,755 - INFO: ('the test case is : ', 'qos020010001')
2019-09-29 09:17:39,756 - INFO: ('Need to use mock data ....',)
2019-09-29 09:17:39,756 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:17:39,783 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:17:39,784 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:17:39,800 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:17:39,800 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:17:39,801 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:17:39,801 - INFO: ('mock_total_num is :', 2)
2019-09-29 09:17:39,801 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 09:17:39,802 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:17:39,802 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:17:39,802 - INFO: ('update step case_id', 'qos020010001')
2019-09-29 09:17:39,834 - INFO: ('update the test_status successfully',)
2019-09-29 09:17:39,834 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:18,094 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:18,095 - INFO: ('python receive message :', ('qos010010001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9"})'))
2019-09-29 09:52:18,095 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:18,095 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:18,100 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:18,120 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:18,121 - INFO: ('response_return test_case_id is : ', 'qos010010001')
2019-09-29 09:52:18,121 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:18,121 - INFO: ('the test case is : ', 'qos010010001')
2019-09-29 09:52:18,122 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:18,122 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:18,349 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:18,349 - INFO: ('python receive message :', ('qos010020001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"aaabbb123"})'))
2019-09-29 09:52:18,349 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:18,350 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:18,358 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:18,373 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:18,373 - INFO: ('response_return test_case_id is : ', 'qos010020001')
2019-09-29 09:52:18,373 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:18,374 - INFO: ('the test case is : ', 'qos010020001')
2019-09-29 09:52:18,374 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:18,374 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:18,610 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:18,611 - INFO: ('python receive message :', ('qos010030001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":""})'))
2019-09-29 09:52:18,611 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:18,611 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:18,616 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:18,625 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备编号不能为空"}')
2019-09-29 09:52:18,626 - INFO: ('response_return test_case_id is : ', 'qos010030001')
2019-09-29 09:52:18,626 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:18,626 - INFO: ('the test case is : ', 'qos010030001')
2019-09-29 09:52:18,626 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:18,626 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:18,854 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:18,854 - INFO: ('python receive message :', ('qos010040001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"":""})'))
2019-09-29 09:52:18,855 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:18,855 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:18,863 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:18,872 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备编号不能为空"}')
2019-09-29 09:52:18,873 - INFO: ('response_return test_case_id is : ', 'qos010040001')
2019-09-29 09:52:18,873 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:18,873 - INFO: ('the test case is : ', 'qos010040001')
2019-09-29 09:52:18,873 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:18,873 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:19,162 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:19,162 - INFO: ('python receive message :', ('qos010010001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9"})'))
2019-09-29 09:52:19,163 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:19,163 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:19,170 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:19,191 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:19,191 - INFO: ('response_return test_case_id is : ', 'qos010010001')
2019-09-29 09:52:19,192 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:19,192 - INFO: ('the test case is : ', 'qos010010001')
2019-09-29 09:52:19,192 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:19,192 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:19,407 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:19,408 - INFO: ('python receive message :', ('qos010020001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"aaabbb123"})'))
2019-09-29 09:52:19,408 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:19,408 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:19,414 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:19,440 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:19,440 - INFO: ('response_return test_case_id is : ', 'qos010020001')
2019-09-29 09:52:19,440 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:19,441 - INFO: ('the test case is : ', 'qos010020001')
2019-09-29 09:52:19,441 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:19,441 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:19,664 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:19,665 - INFO: ('python receive message :', ('qos010030001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":""})'))
2019-09-29 09:52:19,665 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:19,666 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:19,677 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:19,692 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备编号不能为空"}')
2019-09-29 09:52:19,693 - INFO: ('response_return test_case_id is : ', 'qos010030001')
2019-09-29 09:52:19,693 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:19,693 - INFO: ('the test case is : ', 'qos010030001')
2019-09-29 09:52:19,693 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:19,694 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:19,920 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:19,921 - INFO: ('python receive message :', ('qos010040001', 'invoke com.cmiot.qos.api.order.QueryActOrdByDevService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"":""})'))
2019-09-29 09:52:19,921 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:19,921 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:19,928 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:19,944 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备编号不能为空"}')
2019-09-29 09:52:19,945 - INFO: ('response_return test_case_id is : ', 'qos010040001')
2019-09-29 09:52:19,945 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:19,945 - INFO: ('the test case is : ', 'qos010040001')
2019-09-29 09:52:19,946 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:19,946 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:20,160 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:20,161 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 09:52:20,161 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 09:52:20,161 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 09:52:20,161 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:20,161 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:20,161 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 09:52:20,182 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:20,182 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:20,221 - INFO: (True,)
2019-09-29 09:52:20,222 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 09:52:20,266 - INFO: (True,)
2019-09-29 09:52:20,267 - INFO: ('the mock template id is :', 'mock_template_010102')
2019-09-29 09:52:20,305 - INFO: (True,)
2019-09-29 09:52:20,306 - INFO: (['successfully', 'successfully'],)
2019-09-29 09:52:20,306 - INFO: (2,)
2019-09-29 09:52:20,318 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:20,691 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800}]}')
2019-09-29 09:52:20,691 - INFO: ('response_return test_case_id is : ', 'qos020010001')
2019-09-29 09:52:20,691 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:20,693 - INFO: ('the test case is : ', 'qos020010001')
2019-09-29 09:52:20,693 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:20,693 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:20,715 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:20,715 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:20,737 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:20,737 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:20,738 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:20,738 - INFO: ('mock_total_num is :', 2)
2019-09-29 09:52:20,738 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 09:52:20,738 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:20,738 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:20,738 - INFO: ('update step case_id', 'qos020010001')
2019-09-29 09:52:20,769 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:20,769 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:21,073 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:21,074 - INFO: ('python receive message :', ('qos020020001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010102'))
2019-09-29 09:52:21,074 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 09:52:21,074 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 09:52:21,074 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:21,074 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:21,074 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010102'))
2019-09-29 09:52:21,106 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:21,107 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:21,126 - INFO: (True,)
2019-09-29 09:52:21,127 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 09:52:21,167 - INFO: (True,)
2019-09-29 09:52:21,167 - INFO: ('the mock template id is :', 'mock_template_010102')
2019-09-29 09:52:21,201 - INFO: (True,)
2019-09-29 09:52:21,201 - INFO: (['successfully', 'successfully'],)
2019-09-29 09:52:21,201 - INFO: (2,)
2019-09-29 09:52:21,210 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:21,612 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800}]}')
2019-09-29 09:52:21,613 - INFO: ('response_return test_case_id is : ', 'qos020020001')
2019-09-29 09:52:21,613 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:21,613 - INFO: ('the test case is : ', 'qos020020001')
2019-09-29 09:52:21,615 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:21,615 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:21,640 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:21,641 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:21,665 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:21,665 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:21,666 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:21,666 - INFO: ('mock_total_num is :', 2)
2019-09-29 09:52:21,666 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 09:52:21,666 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:21,667 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:21,667 - INFO: ('update step case_id', 'qos020020001')
2019-09-29 09:52:21,703 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:21,703 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:21,887 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:21,888 - INFO: ('python receive message :', ('qos020030001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"111222333aa"})', 'mock_template_010204', 'mock_template_010205'))
2019-09-29 09:52:21,888 - INFO: ('judge whether need the mock data:', 'mock_template_010204')
2019-09-29 09:52:21,888 - INFO: ('the mock_id flag is:', 'mock_template_010204')
2019-09-29 09:52:21,888 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:21,889 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:21,889 - INFO: ('the mock template id is :', ('mock_template_010204', 'mock_template_010205'))
2019-09-29 09:52:21,903 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:21,903 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:21,926 - INFO: (True,)
2019-09-29 09:52:21,927 - INFO: ('the mock template id is :', 'mock_template_010204')
2019-09-29 09:52:21,950 - INFO: (True,)
2019-09-29 09:52:21,950 - INFO: ('the mock template id is :', 'mock_template_010205')
2019-09-29 09:52:21,976 - INFO: (True,)
2019-09-29 09:52:21,976 - INFO: (['successfully', 'successfully'],)
2019-09-29 09:52:21,976 - INFO: (2,)
2019-09-29 09:52:21,981 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:22,311 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:22,312 - INFO: ('response_return test_case_id is : ', 'qos020030001')
2019-09-29 09:52:22,312 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:22,312 - INFO: ('the test case is : ', 'qos020030001')
2019-09-29 09:52:22,312 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:22,312 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:22,335 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:22,336 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:22,351 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:22,352 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:22,352 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:22,352 - INFO: ('mock_total_num is :', 2)
2019-09-29 09:52:22,352 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 09:52:22,353 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:22,353 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:22,353 - INFO: ('update step case_id', 'qos020030001')
2019-09-29 09:52:22,376 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:22,377 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:22,572 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:22,573 - INFO: ('python receive message :', ('qos020040001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":""})'))
2019-09-29 09:52:22,573 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:22,573 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:22,578 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:22,593 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户id不能为空"}')
2019-09-29 09:52:22,593 - INFO: ('response_return test_case_id is : ', 'qos020040001')
2019-09-29 09:52:22,593 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:22,593 - INFO: ('the test case is : ', 'qos020040001')
2019-09-29 09:52:22,593 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:22,594 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:22,804 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:22,804 - INFO: ('python receive message :', ('qos020050001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"":""})'))
2019-09-29 09:52:22,804 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:22,805 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:22,812 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:22,823 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户id不能为空"}')
2019-09-29 09:52:22,824 - INFO: ('response_return test_case_id is : ', 'qos020050001')
2019-09-29 09:52:22,824 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:22,824 - INFO: ('the test case is : ', 'qos020050001')
2019-09-29 09:52:22,824 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:22,824 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:23,015 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:23,015 - INFO: ('python receive message :', ('qos020060001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010206'))
2019-09-29 09:52:23,016 - INFO: ('judge whether need the mock data:', 'mock_template_010206')
2019-09-29 09:52:23,016 - INFO: ('the mock_id flag is:', 'mock_template_010206')
2019-09-29 09:52:23,016 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:23,016 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:23,016 - INFO: ('the mock template id is :', ('mock_template_010206',))
2019-09-29 09:52:23,039 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:23,039 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:23,066 - INFO: (True,)
2019-09-29 09:52:23,066 - INFO: ('the mock template id is :', 'mock_template_010206')
2019-09-29 09:52:23,089 - INFO: (True,)
2019-09-29 09:52:23,089 - INFO: (['successfully'],)
2019-09-29 09:52:23,090 - INFO: (1,)
2019-09-29 09:52:23,095 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:23,347 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"Something wrong .No Mock data return."}')
2019-09-29 09:52:23,348 - INFO: ('response_return test_case_id is : ', 'qos020060001')
2019-09-29 09:52:23,348 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:23,348 - INFO: ('the test case is : ', 'qos020060001')
2019-09-29 09:52:23,349 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:23,349 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:23,369 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:23,370 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:23,395 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:23,395 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:23,397 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:23,397 - INFO: ('mock_total_num is :', 1)
2019-09-29 09:52:23,397 - INFO: ('mock_succuss_num is :', 1)
2019-09-29 09:52:23,398 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:23,398 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:23,399 - INFO: ('update step case_id', 'qos020060001')
2019-09-29 09:52:23,421 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:23,422 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:23,662 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:23,663 - INFO: ('python receive message :', ('qos020070001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101', 'mock_template_010207'))
2019-09-29 09:52:23,663 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 09:52:23,663 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 09:52:23,663 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:23,664 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:23,664 - INFO: ('the mock template id is :', ('mock_template_010101', 'mock_template_010207'))
2019-09-29 09:52:23,686 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:23,686 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:23,716 - INFO: (True,)
2019-09-29 09:52:23,717 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 09:52:23,744 - INFO: (True,)
2019-09-29 09:52:23,745 - INFO: ('the mock template id is :', 'mock_template_010207')
2019-09-29 09:52:23,779 - INFO: (True,)
2019-09-29 09:52:23,780 - INFO: (['successfully', 'successfully'],)
2019-09-29 09:52:23,780 - INFO: (2,)
2019-09-29 09:52:23,787 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:24,205 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:24,206 - INFO: ('response_return test_case_id is : ', 'qos020070001')
2019-09-29 09:52:24,206 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:24,206 - INFO: ('the test case is : ', 'qos020070001')
2019-09-29 09:52:24,206 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:24,206 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:24,223 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:24,224 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:24,239 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:24,240 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:24,241 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:24,241 - INFO: ('mock_total_num is :', 2)
2019-09-29 09:52:24,241 - INFO: ('mock_succuss_num is :', 2)
2019-09-29 09:52:24,241 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:24,242 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:24,242 - INFO: ('update step case_id', 'qos020070001')
2019-09-29 09:52:24,278 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:24,279 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:24,477 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:24,478 - INFO: ('python receive message :', ('qos020080001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})'))
2019-09-29 09:52:24,478 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:24,478 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:24,488 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:24,574 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"Something wrong .No Mock data return."}')
2019-09-29 09:52:24,575 - INFO: ('response_return test_case_id is : ', 'qos020080001')
2019-09-29 09:52:24,575 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:24,575 - INFO: ('the test case is : ', 'qos020080001')
2019-09-29 09:52:24,576 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:24,576 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:24,790 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:24,790 - INFO: ('python receive message :', ('qos020010001', 'invoke com.cmiot.qos.api.QueryActiveOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19926359"})', 'mock_template_010101'))
2019-09-29 09:52:24,790 - INFO: ('judge whether need the mock data:', 'mock_template_010101')
2019-09-29 09:52:24,791 - INFO: ('the mock_id flag is:', 'mock_template_010101')
2019-09-29 09:52:24,791 - INFO: ('Need the mook data ...',)
2019-09-29 09:52:24,791 - INFO: ('begin to record the test case into database',)
2019-09-29 09:52:24,791 - INFO: ('the mock template id is :', ('mock_template_010101',))
2019-09-29 09:52:24,823 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where mock_status = 1')
2019-09-29 09:52:24,823 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:24,867 - INFO: (True,)
2019-09-29 09:52:24,868 - INFO: ('the mock template id is :', 'mock_template_010101')
2019-09-29 09:52:24,905 - INFO: (True,)
2019-09-29 09:52:24,905 - INFO: (['successfully'],)
2019-09-29 09:52:24,905 - INFO: (1,)
2019-09-29 09:52:24,915 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:25,163 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"Something wrong .No Mock data return."}')
2019-09-29 09:52:25,164 - INFO: ('response_return test_case_id is : ', 'qos020010001')
2019-09-29 09:52:25,164 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:25,164 - INFO: ('the test case is : ', 'qos020010001')
2019-09-29 09:52:25,164 - INFO: ('Need to use mock data ....',)
2019-09-29 09:52:25,164 - INFO: ('Begin to user query the mock data',)
2019-09-29 09:52:25,188 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and test_status = 1')
2019-09-29 09:52:25,188 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:25,217 - INFO: ('query sql is： :', 'select count(1) from t_execution_table where case_id = %s and mock_status = 0')
2019-09-29 09:52:25,217 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:25,218 - INFO: ('Query the mock_data successfully...',)
2019-09-29 09:52:25,218 - INFO: ('mock_total_num is :', 1)
2019-09-29 09:52:25,218 - INFO: ('mock_succuss_num is :', 1)
2019-09-29 09:52:25,218 - INFO: ('all the mock template is used successfully .',)
2019-09-29 09:52:25,218 - INFO: ('update step sql_update_success:', 'update t_execution_table set test_status = 0 where case_id = %s and  mock_status = 0')
2019-09-29 09:52:25,219 - INFO: ('update step case_id', 'qos020010001')
2019-09-29 09:52:25,243 - INFO: ('update the test_status successfully',)
2019-09-29 09:52:25,243 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:25,388 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:25,388 - INFO: ('python receive message :', ('qos030010001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"10","page":"1","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:25,389 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:25,389 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:25,394 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:25,418 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":"9460506","effectTime":"2019-07-23","failureTime":"2019-07-26","createTime":"2019-08-06 21:17:20","phonePay":"13618254716","packageCode":"sjkj_hkc2","orderSource":"01","paymentWay":"3"}]}')
2019-09-29 09:52:25,419 - INFO: ('response_return test_case_id is : ', 'qos030010001')
2019-09-29 09:52:25,419 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:25,420 - INFO: ('the test case is : ', 'qos030010001')
2019-09-29 09:52:25,420 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:25,420 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:25,534 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:25,535 - INFO: ('python receive message :', ('qos030020001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","page":"1","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:25,535 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:25,536 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:25,540 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:25,563 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":"9460507","effectTime":"2019-07-23","failureTime":"2019-07-26","createTime":"2019-08-06 21:17:20","phonePay":"13618254716","packageCode":"sjkj_hkc2","orderSource":"01","paymentWay":"3"}]}')
2019-09-29 09:52:25,564 - INFO: ('response_return test_case_id is : ', 'qos030020001')
2019-09-29 09:52:25,564 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:25,564 - INFO: ('the test case is : ', 'qos030020001')
2019-09-29 09:52:25,565 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:25,566 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:25,679 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:25,680 - INFO: ('python receive message :', ('qos030030001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"10","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:25,680 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:25,680 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:25,687 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:25,706 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":"9460508","effectTime":"2019-07-23","failureTime":"2019-07-26","createTime":"2019-08-06 21:17:20","phonePay":"13618254716","packageCode":"sjkj_hkc2","orderSource":"01","paymentWay":"3"}]}')
2019-09-29 09:52:25,707 - INFO: ('response_return test_case_id is : ', 'qos030030001')
2019-09-29 09:52:25,708 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:25,708 - INFO: ('the test case is : ', 'qos030030001')
2019-09-29 09:52:25,709 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:25,709 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:25,841 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:25,842 - INFO: ('python receive message :', ('qos030040001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"10","page":"1"})'))
2019-09-29 09:52:25,842 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:25,842 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:25,848 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:25,867 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":"9460509","effectTime":"2019-07-23","failureTime":"2019-07-26","createTime":"2019-08-06 21:17:20","phonePay":"13618254716","packageCode":"sjkj_hkc2","orderSource":"01","paymentWay":"3"}]}')
2019-09-29 09:52:25,868 - INFO: ('response_return test_case_id is : ', 'qos030040001')
2019-09-29 09:52:25,868 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:25,869 - INFO: ('the test case is : ', 'qos030040001')
2019-09-29 09:52:25,869 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:25,870 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:25,987 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:25,987 - INFO: ('python receive message :', ('qos030050001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716"})'))
2019-09-29 09:52:25,988 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:25,988 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:25,998 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,014 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":"9460510","effectTime":"2019-07-23","failureTime":"2019-07-26","createTime":"2019-08-06 21:17:20","phonePay":"13618254716","packageCode":"sjkj_hkc2","orderSource":"01","paymentWay":"3"}]}')
2019-09-29 09:52:26,015 - INFO: ('response_return test_case_id is : ', 'qos030050001')
2019-09-29 09:52:26,015 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,016 - INFO: ('the test case is : ', 'qos030050001')
2019-09-29 09:52:26,016 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,016 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,117 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:26,117 - INFO: ('python receive message :', ('qos030060001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"136182547168","pageSize":"10","page":"1","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:26,118 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:26,118 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:26,124 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,138 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:26,139 - INFO: ('response_return test_case_id is : ', 'qos030060001')
2019-09-29 09:52:26,139 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,139 - INFO: ('the test case is : ', 'qos030060001')
2019-09-29 09:52:26,139 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,140 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,304 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:26,305 - INFO: ('python receive message :', ('qos030070001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","pageSize":"10","page":"1","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:26,305 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:26,306 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:26,310 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,317 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:26,318 - INFO: ('response_return test_case_id is : ', 'qos030070001')
2019-09-29 09:52:26,318 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,320 - INFO: ('the test case is : ', 'qos030070001')
2019-09-29 09:52:26,320 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,321 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,457 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:26,458 - INFO: ('python receive message :', ('qos030080001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:26,458 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:26,458 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:26,466 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,478 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:26,479 - INFO: ('response_return test_case_id is : ', 'qos030080001')
2019-09-29 09:52:26,480 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,480 - INFO: ('the test case is : ', 'qos030080001')
2019-09-29 09:52:26,481 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,482 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,628 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:26,629 - INFO: ('python receive message :', ('qos030090001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"stringtest","page":"1","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:26,630 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:26,631 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:26,641 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,652 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:26,653 - INFO: ('response_return test_case_id is : ', 'qos030090001')
2019-09-29 09:52:26,654 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,655 - INFO: ('the test case is : ', 'qos030090001')
2019-09-29 09:52:26,655 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,656 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,818 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:26,818 - INFO: ('python receive message :', ('qos030100001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"10","page":"stringtest","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:26,819 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:26,820 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:26,828 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:26,842 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:26,844 - INFO: ('response_return test_case_id is : ', 'qos030100001')
2019-09-29 09:52:26,845 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:26,845 - INFO: ('the test case is : ', 'qos030100001')
2019-09-29 09:52:26,846 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:26,847 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:26,999 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,000 - INFO: ('python receive message :', ('qos030110001', 'invoke com.cmiot.qos.api.order.QueryInvalidOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","pageSize":"10","page":"1","allDevSns":"stringtest"})'))
2019-09-29 09:52:27,001 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,001 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,011 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,021 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:27,022 - INFO: ('response_return test_case_id is : ', 'qos030110001')
2019-09-29 09:52:27,023 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,024 - INFO: ('the test case is : ', 'qos030110001')
2019-09-29 09:52:27,024 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,025 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,217 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,218 - INFO: ('python receive message :', ('qos040010001', 'invoke com.cmiot.qos.api.order.QueryDirectDataOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716"})'))
2019-09-29 09:52:27,218 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,220 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,226 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,240 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":905,"orderId":"201908010001","phoneNum":"13618254716","productId":"20190801000101","orderTime":"20190801103010","orderChannel":"60"}]}')
2019-09-29 09:52:27,241 - INFO: ('response_return test_case_id is : ', 'qos040010001')
2019-09-29 09:52:27,241 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,242 - INFO: ('the test case is : ', 'qos040010001')
2019-09-29 09:52:27,242 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,243 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,381 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,382 - INFO: ('python receive message :', ('qos040020001', 'invoke com.cmiot.qos.api.order.QueryDirectDataOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":""})'))
2019-09-29 09:52:27,382 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,383 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,387 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,410 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":906,"orderId":"201908010001","phoneNum":"13618254716","productId":"20190801000101","orderTime":"20190801103010","orderChannel":"60"}]}')
2019-09-29 09:52:27,411 - INFO: ('response_return test_case_id is : ', 'qos040020001')
2019-09-29 09:52:27,412 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,412 - INFO: ('the test case is : ', 'qos040020001')
2019-09-29 09:52:27,413 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,413 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,535 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,535 - INFO: ('python receive message :', ('qos040030001', 'invoke com.cmiot.qos.api.order.QueryDirectDataOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:27,536 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,536 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,543 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,557 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":907,"orderId":"201908010001","phoneNum":"13618254716","productId":"20190801000101","orderTime":"20190801103010","orderChannel":"60"}]}')
2019-09-29 09:52:27,559 - INFO: ('response_return test_case_id is : ', 'qos040030001')
2019-09-29 09:52:27,559 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,559 - INFO: ('the test case is : ', 'qos040030001')
2019-09-29 09:52:27,560 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,560 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,699 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,700 - INFO: ('python receive message :', ('qos040040001', 'invoke com.cmiot.qos.api.order.QueryDirectDataOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"136182547168"})'))
2019-09-29 09:52:27,700 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,701 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,709 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,722 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:27,723 - INFO: ('response_return test_case_id is : ', 'qos040040001')
2019-09-29 09:52:27,724 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,724 - INFO: ('the test case is : ', 'qos040040001')
2019-09-29 09:52:27,725 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,725 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,865 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,865 - INFO: ('python receive message :', ('qos050010001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:27,866 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,866 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:27,875 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:27,888 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:27,889 - INFO: ('response_return test_case_id is : ', 'qos050010001')
2019-09-29 09:52:27,890 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:27,891 - INFO: ('the test case is : ', 'qos050010001')
2019-09-29 09:52:27,891 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:27,891 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:27,997 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:27,998 - INFO: ('python receive message :', ('qos050020001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"12345678910","allDevSns":["2059a0caa3d9",""]})'))
2019-09-29 09:52:27,998 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:27,999 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,006 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,026 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:28,027 - INFO: ('response_return test_case_id is : ', 'qos050020001')
2019-09-29 09:52:28,027 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,028 - INFO: ('the test case is : ', 'qos050020001')
2019-09-29 09:52:28,028 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,028 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,140 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,140 - INFO: ('python receive message :', ('qos050030001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:28,141 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,141 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,147 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,163 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:28,164 - INFO: ('response_return test_case_id is : ', 'qos050030001')
2019-09-29 09:52:28,165 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,165 - INFO: ('the test case is : ', 'qos050030001')
2019-09-29 09:52:28,165 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,166 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,267 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,268 - INFO: ('python receive message :', ('qos050040001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"12345678910","allDevSns":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:28,268 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,269 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,275 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,287 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:28,288 - INFO: ('response_return test_case_id is : ', 'qos050040001')
2019-09-29 09:52:28,288 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,289 - INFO: ('the test case is : ', 'qos050040001')
2019-09-29 09:52:28,289 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,290 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,419 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,419 - INFO: ('python receive message :', ('qos050050001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","allDevSns":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:28,420 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,420 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,428 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,446 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:28,447 - INFO: ('response_return test_case_id is : ', 'qos050050001')
2019-09-29 09:52:28,448 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,448 - INFO: ('the test case is : ', 'qos050050001')
2019-09-29 09:52:28,449 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,449 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,577 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,578 - INFO: ('python receive message :', ('qos050060001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":""})'))
2019-09-29 09:52:28,578 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,578 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,586 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,597 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:28,598 - INFO: ('response_return test_case_id is : ', 'qos050060001')
2019-09-29 09:52:28,598 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,599 - INFO: ('the test case is : ', 'qos050060001')
2019-09-29 09:52:28,600 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,600 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,734 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,735 - INFO: ('python receive message :', ('qos050070001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":["13618254716"],"allDevSns":""})'))
2019-09-29 09:52:28,735 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,736 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,743 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,756 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:28,758 - INFO: ('response_return test_case_id is : ', 'qos050070001')
2019-09-29 09:52:28,758 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,758 - INFO: ('the test case is : ', 'qos050070001')
2019-09-29 09:52:28,759 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,759 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:28,876 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:28,877 - INFO: ('python receive message :', ('qos050080001', 'invoke com.cmiot.qos.api.order.QueryActOrdByPhoneAndMacService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:28,877 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:28,878 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:28,885 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:28,899 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:28,899 - INFO: ('response_return test_case_id is : ', 'qos050080001')
2019-09-29 09:52:28,900 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:28,900 - INFO: ('the test case is : ', 'qos050080001')
2019-09-29 09:52:28,900 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:28,901 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:29,059 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:29,059 - INFO: ('python receive message :', ('qos060010001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"9419293"})'))
2019-09-29 09:52:29,059 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:29,060 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:29,065 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:29,081 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}}')
2019-09-29 09:52:29,082 - INFO: ('response_return test_case_id is : ', 'qos060010001')
2019-09-29 09:52:29,082 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:29,082 - INFO: ('the test case is : ', 'qos060010001')
2019-09-29 09:52:29,083 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:29,083 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:29,234 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:29,235 - INFO: ('python receive message :', ('qos060020001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"111222333"})'))
2019-09-29 09:52:29,235 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:29,235 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:29,242 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:29,253 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:29,254 - INFO: ('response_return test_case_id is : ', 'qos060020001')
2019-09-29 09:52:29,254 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:29,254 - INFO: ('the test case is : ', 'qos060020001')
2019-09-29 09:52:29,254 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:29,255 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:29,368 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:29,370 - INFO: ('python receive message :', ('qos060030001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":""})'))
2019-09-29 09:52:29,370 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:29,371 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:29,378 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:29,390 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"待关联订单id不能为空"}')
2019-09-29 09:52:29,391 - INFO: ('response_return test_case_id is : ', 'qos060030001')
2019-09-29 09:52:29,391 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:29,392 - INFO: ('the test case is : ', 'qos060030001')
2019-09-29 09:52:29,392 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:29,393 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:29,507 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:29,507 - INFO: ('python receive message :', ('qos060040001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:29,508 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:29,508 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:29,515 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:29,529 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"待关联订单id不能为空"}')
2019-09-29 09:52:29,530 - INFO: ('response_return test_case_id is : ', 'qos060040001')
2019-09-29 09:52:29,531 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:29,531 - INFO: ('the test case is : ', 'qos060040001')
2019-09-29 09:52:29,531 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:29,532 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:31,903 - INFO: ('Update redis values failed ...:', ConnectionError('Error 11004 connecting to  10.11.4.77:6389. getaddrinfo failed.',))
2019-09-29 09:52:31,925 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:31,926 - INFO: ('python receive message :', ('qos070010001', 'invoke com.cmiot.qos.api.operation.CheckOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"code":"19926359:2059a0caa3d9:39_month_7_01:a1d263f249e54b4fbb0243da8352328b"})'))
2019-09-29 09:52:31,926 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:31,927 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:31,933 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:31,945 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:31,946 - INFO: ('response_return test_case_id is : ', 'qos070010001')
2019-09-29 09:52:31,947 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:31,947 - INFO: ('the test case is : ', 'qos070010001')
2019-09-29 09:52:31,947 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:31,948 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:31,963 - INFO: ('"resultCode":"000000" is not in actual result ',)
2019-09-29 09:52:34,295 - INFO: ('Delete redis values failed ... ', ConnectionError('Error 11004 connecting to  10.11.4.77:6389. getaddrinfo failed.',))
2019-09-29 09:52:34,317 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:34,318 - INFO: ('python receive message :', ('qos070020001', 'invoke com.cmiot.qos.api.operation.CheckOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"code":"19926359:2059a0caa3d9:39_month_7_01:a1d263f249e54b4fbb0243da8352328b"})'))
2019-09-29 09:52:34,318 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:34,319 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:34,328 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:34,340 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:34,341 - INFO: ('response_return test_case_id is : ', 'qos070020001')
2019-09-29 09:52:34,341 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:34,341 - INFO: ('the test case is : ', 'qos070020001')
2019-09-29 09:52:34,342 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:34,342 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:36,685 - INFO: ('Update redis values failed ...:', ConnectionError('Error 11004 connecting to  10.11.4.77:6389. getaddrinfo failed.',))
2019-09-29 09:52:36,705 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:36,706 - INFO: ('python receive message :', ('qos070030001', 'invoke com.cmiot.qos.api.operation.CheckOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"code":""})'))
2019-09-29 09:52:36,707 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:36,707 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:36,712 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:36,725 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"操作码不能为空"}')
2019-09-29 09:52:36,726 - INFO: ('response_return test_case_id is : ', 'qos070030001')
2019-09-29 09:52:36,726 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:36,727 - INFO: ('the test case is : ', 'qos070030001')
2019-09-29 09:52:36,727 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:36,727 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,071 - INFO: ('Update redis values failed ...:', ConnectionError('Error 11004 connecting to  10.11.4.77:6389. getaddrinfo failed.',))
2019-09-29 09:52:39,096 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,096 - INFO: ('python receive message :', ('qos070040001', 'invoke com.cmiot.qos.api.operation.CheckOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:39,097 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,097 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,105 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,114 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"操作码不能为空"}')
2019-09-29 09:52:39,115 - INFO: ('response_return test_case_id is : ', 'qos070040001')
2019-09-29 09:52:39,116 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,116 - INFO: ('the test case is : ', 'qos070040001')
2019-09-29 09:52:39,117 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,117 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,254 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,255 - INFO: ('python receive message :', ('qos080010001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"100000441381"})'))
2019-09-29 09:52:39,255 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,256 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,264 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,280 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}}')
2019-09-29 09:52:39,280 - INFO: ('response_return test_case_id is : ', 'qos080010001')
2019-09-29 09:52:39,281 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,281 - INFO: ('the test case is : ', 'qos080010001')
2019-09-29 09:52:39,282 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,282 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,393 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,394 - INFO: ('python receive message :', ('qos080020001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"11222333444"})'))
2019-09-29 09:52:39,394 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,394 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,399 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,417 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:39,418 - INFO: ('response_return test_case_id is : ', 'qos080020001')
2019-09-29 09:52:39,418 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,419 - INFO: ('the test case is : ', 'qos080020001')
2019-09-29 09:52:39,419 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,419 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,537 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,538 - INFO: ('python receive message :', ('qos080030001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":""})'))
2019-09-29 09:52:39,538 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,539 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,545 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,553 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单ID不能为空"}')
2019-09-29 09:52:39,554 - INFO: ('response_return test_case_id is : ', 'qos080030001')
2019-09-29 09:52:39,554 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,555 - INFO: ('the test case is : ', 'qos080030001')
2019-09-29 09:52:39,555 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,555 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,678 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,679 - INFO: ('python receive message :', ('qos080040001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderByIdService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:39,679 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,680 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,687 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,696 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单ID不能为空"}')
2019-09-29 09:52:39,697 - INFO: ('response_return test_case_id is : ', 'qos080040001')
2019-09-29 09:52:39,698 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,698 - INFO: ('the test case is : ', 'qos080040001')
2019-09-29 09:52:39,699 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,699 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:39,820 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:39,820 - INFO: ('python receive message :', ('qos090010001', 'invoke com.cmiot.qos.api.order.QueryTempOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":"2019081909025205206222"})'))
2019-09-29 09:52:39,821 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:39,821 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:39,827 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:39,868 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"1","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}}')
2019-09-29 09:52:39,869 - INFO: ('response_return test_case_id is : ', 'qos090010001')
2019-09-29 09:52:39,870 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:39,871 - INFO: ('the test case is : ', 'qos090010001')
2019-09-29 09:52:39,871 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:39,872 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,013 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,014 - INFO: ('python receive message :', ('qos100010001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:40,014 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,014 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,021 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,033 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:40,034 - INFO: ('response_return test_case_id is : ', 'qos100010001')
2019-09-29 09:52:40,034 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,035 - INFO: ('the test case is : ', 'qos100010001')
2019-09-29 09:52:40,035 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,035 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,155 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,156 - INFO: ('python receive message :', ('qos100020001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:40,157 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,157 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,163 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,178 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:40,179 - INFO: ('response_return test_case_id is : ', 'qos100020001')
2019-09-29 09:52:40,180 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,180 - INFO: ('the test case is : ', 'qos100020001')
2019-09-29 09:52:40,180 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,181 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,297 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,298 - INFO: ('python receive message :', ('qos100030001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716"})'))
2019-09-29 09:52:40,298 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,299 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,305 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,323 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:40,324 - INFO: ('response_return test_case_id is : ', 'qos100030001')
2019-09-29 09:52:40,325 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,325 - INFO: ('the test case is : ', 'qos100030001')
2019-09-29 09:52:40,326 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,326 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,441 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,442 - INFO: ('python receive message :', ('qos100040001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:40,442 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,443 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,448 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,464 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:40,465 - INFO: ('response_return test_case_id is : ', 'qos100040001')
2019-09-29 09:52:40,465 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,465 - INFO: ('the test case is : ', 'qos100040001')
2019-09-29 09:52:40,466 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,466 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,589 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,589 - INFO: ('python receive message :', ('qos100050001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"136182547168","allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:40,590 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,590 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,596 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,617 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:40,619 - INFO: ('response_return test_case_id is : ', 'qos100050001')
2019-09-29 09:52:40,619 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,620 - INFO: ('the test case is : ', 'qos100050001')
2019-09-29 09:52:40,620 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,621 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,762 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,763 - INFO: ('python receive message :', ('qos100060001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:40,764 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,764 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,770 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,788 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:40,788 - INFO: ('response_return test_case_id is : ', 'qos100060001')
2019-09-29 09:52:40,789 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,789 - INFO: ('the test case is : ', 'qos100060001')
2019-09-29 09:52:40,790 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,790 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:40,911 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:40,912 - INFO: ('python receive message :', ('qos100070001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["",""]})'))
2019-09-29 09:52:40,912 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:40,913 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:40,919 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:40,929 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:40,930 - INFO: ('response_return test_case_id is : ', 'qos100070001')
2019-09-29 09:52:40,930 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:40,931 - INFO: ('the test case is : ', 'qos100070001')
2019-09-29 09:52:40,931 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:40,931 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,071 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,072 - INFO: ('python receive message :', ('qos100080001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":[13618254716，],"allDevSns":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:41,073 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,073 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,081 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,092 - INFO: ('wait dubbo return ', 'Invalid json argument, cause: Unexpected char [锛]')
2019-09-29 09:52:41,093 - INFO: ('response_return test_case_id is : ', 'qos100080001')
2019-09-29 09:52:41,093 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,094 - INFO: ('the test case is : ', 'qos100080001')
2019-09-29 09:52:41,094 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,095 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,220 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,220 - INFO: ('python receive message :', ('qos100090001', 'invoke com.cmiot.qos.api.order.QueryUsingOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":"2059a0caa3d9"})'))
2019-09-29 09:52:41,221 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,221 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,233 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,243 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:41,244 - INFO: ('response_return test_case_id is : ', 'qos100090001')
2019-09-29 09:52:41,245 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,245 - INFO: ('the test case is : ', 'qos100090001')
2019-09-29 09:52:41,246 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,247 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,378 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,379 - INFO: ('python receive message :', ('qos110010001', 'invoke com.cmiot.qos.api.operation.GenerateOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"item":"39_month_7_01","userId":"19926359","mac":"2059a0caa3d9"})'))
2019-09-29 09:52:41,379 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,379 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,384 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,400 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"operationCode":"19926359:2059a0caa3d9:39_month_7_01:e8e79e44272e4d4db4cd6469e667aaa3","timestamp":1569721948138}}')
2019-09-29 09:52:41,401 - INFO: ('response_return test_case_id is : ', 'qos110010001')
2019-09-29 09:52:41,402 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,402 - INFO: ('the test case is : ', 'qos110010001')
2019-09-29 09:52:41,402 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,403 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,531 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,532 - INFO: ('python receive message :', ('qos110020001', 'invoke com.cmiot.qos.api.operation.GenerateOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"item":"","userId":"19926359","mac":"2059a0caa3d9"})'))
2019-09-29 09:52:41,533 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,533 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,542 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,554 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"operationCode":"19926359:2059a0caa3d9:item:72b4eda27c8542e1b5540110818b4eee","timestamp":1569721948286}}')
2019-09-29 09:52:41,555 - INFO: ('response_return test_case_id is : ', 'qos110020001')
2019-09-29 09:52:41,555 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,556 - INFO: ('the test case is : ', 'qos110020001')
2019-09-29 09:52:41,556 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,557 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,669 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,670 - INFO: ('python receive message :', ('qos110030001', 'invoke com.cmiot.qos.api.operation.GenerateOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"item":"39_month_7_01","userId":"","mac":"2059a0caa3d9"})'))
2019-09-29 09:52:41,670 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,671 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,676 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,684 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户id不能为空"}')
2019-09-29 09:52:41,684 - INFO: ('response_return test_case_id is : ', 'qos110030001')
2019-09-29 09:52:41,684 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,685 - INFO: ('the test case is : ', 'qos110030001')
2019-09-29 09:52:41,685 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,685 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,799 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,800 - INFO: ('python receive message :', ('qos110040001', 'invoke com.cmiot.qos.api.operation.GenerateOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"item":"39_month_7_01","userId":"19926359","mac":""})'))
2019-09-29 09:52:41,800 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,801 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,809 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,818 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:41,819 - INFO: ('response_return test_case_id is : ', 'qos110040001')
2019-09-29 09:52:41,819 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,819 - INFO: ('the test case is : ', 'qos110040001')
2019-09-29 09:52:41,820 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,820 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:41,932 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:41,932 - INFO: ('python receive message :', ('qos110040001', 'invoke com.cmiot.qos.api.operation.GenerateOperationCode.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:41,933 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:41,933 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:41,941 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:41,952 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"用户id不能为空"}')
2019-09-29 09:52:41,953 - INFO: ('response_return test_case_id is : ', 'qos110040001')
2019-09-29 09:52:41,953 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:41,954 - INFO: ('the test case is : ', 'qos110040001')
2019-09-29 09:52:41,954 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:41,954 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,084 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,085 - INFO: ('python receive message :', ('qos120010001', 'invoke com.cmiot.qos.api.order.QueryAvailableOrderByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 09:52:42,085 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,086 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,092 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:42,105 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}')
2019-09-29 09:52:42,106 - INFO: ('response_return test_case_id is : ', 'qos120010001')
2019-09-29 09:52:42,106 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:42,106 - INFO: ('the test case is : ', 'qos120010001')
2019-09-29 09:52:42,107 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:42,107 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,241 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,241 - INFO: ('python receive message :', ('qos120020001', 'invoke com.cmiot.qos.api.order.QueryAvailableOrderByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"aaabbbcccdd"})'))
2019-09-29 09:52:42,242 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,242 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,248 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:42,260 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:42,261 - INFO: ('response_return test_case_id is : ', 'qos120020001')
2019-09-29 09:52:42,261 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:42,262 - INFO: ('the test case is : ', 'qos120020001')
2019-09-29 09:52:42,262 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:42,262 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,375 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,375 - INFO: ('python receive message :', ('qos120030001', 'invoke com.cmiot.qos.api.order.QueryAvailableOrderByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":""})'))
2019-09-29 09:52:42,376 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,376 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,383 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:42,393 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:42,393 - INFO: ('response_return test_case_id is : ', 'qos120030001')
2019-09-29 09:52:42,394 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:42,394 - INFO: ('the test case is : ', 'qos120030001')
2019-09-29 09:52:42,394 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:42,395 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,507 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,508 - INFO: ('python receive message :', ('qos120040001', 'invoke com.cmiot.qos.api.order.QueryAvailableOrderByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:42,508 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,508 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,515 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:42,528 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:42,529 - INFO: ('response_return test_case_id is : ', 'qos120040001')
2019-09-29 09:52:42,530 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:42,530 - INFO: ('the test case is : ', 'qos120040001')
2019-09-29 09:52:42,531 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:42,531 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,748 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,749 - INFO: ('python receive message :', ('qos130010001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:42,750 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,750 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,756 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:42,791 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[]}}')
2019-09-29 09:52:42,792 - INFO: ('response_return test_case_id is : ', 'qos130010001')
2019-09-29 09:52:42,792 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:42,793 - INFO: ('the test case is : ', 'qos130010001')
2019-09-29 09:52:42,793 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:42,793 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:42,968 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:42,969 - INFO: ('python receive message :', ('qos130020001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:42,969 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:42,969 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:42,984 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:43,005 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[],"orderList":[],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:43,006 - INFO: ('response_return test_case_id is : ', 'qos130020001')
2019-09-29 09:52:43,006 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:43,007 - INFO: ('the test case is : ', 'qos130020001')
2019-09-29 09:52:43,007 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:43,008 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:43,191 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:43,192 - INFO: ('python receive message :', ('qos130030001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:43,192 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:43,192 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:43,198 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:43,225 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[],"tempOrders":[]}}')
2019-09-29 09:52:43,226 - INFO: ('response_return test_case_id is : ', 'qos130030001')
2019-09-29 09:52:43,227 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:43,227 - INFO: ('the test case is : ', 'qos130030001')
2019-09-29 09:52:43,227 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:43,228 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:43,486 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:43,487 - INFO: ('python receive message :', ('qos130040001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:43,487 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:43,488 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:43,497 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:43,527 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:43,528 - INFO: ('response_return test_case_id is : ', 'qos130040001')
2019-09-29 09:52:43,529 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:43,529 - INFO: ('the test case is : ', 'qos130040001')
2019-09-29 09:52:43,531 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:43,532 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:43,565 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:43,565 - INFO: ('python receive message :', ('qos130040001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:43,566 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:43,566 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:43,572 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:43,598 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:43,600 - INFO: ('response_return test_case_id is : ', 'qos130040001')
2019-09-29 09:52:43,600 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:43,601 - INFO: ('the test case is : ', 'qos130040001')
2019-09-29 09:52:43,601 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:43,601 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:43,638 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:43,638 - INFO: ('python receive message :', ('qos130040001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:43,638 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:43,639 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:43,651 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:43,683 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:43,684 - INFO: ('response_return test_case_id is : ', 'qos130040001')
2019-09-29 09:52:43,684 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:43,685 - INFO: ('the test case is : ', 'qos130040001')
2019-09-29 09:52:43,685 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:43,685 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:44,020 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:44,021 - INFO: ('python receive message :', ('qos130050001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:44,022 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:44,022 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:44,027 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:44,053 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:44,053 - INFO: ('response_return test_case_id is : ', 'qos130050001')
2019-09-29 09:52:44,054 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:44,054 - INFO: ('the test case is : ', 'qos130050001')
2019-09-29 09:52:44,054 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:44,055 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:44,290 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:44,291 - INFO: ('python receive message :', ('qos130060001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":[""],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:44,291 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:44,291 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:44,297 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:44,322 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[]}}')
2019-09-29 09:52:44,323 - INFO: ('response_return test_case_id is : ', 'qos130060001')
2019-09-29 09:52:44,323 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:44,324 - INFO: ('the test case is : ', 'qos130060001')
2019-09-29 09:52:44,325 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:44,325 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:44,621 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:44,621 - INFO: ('python receive message :', ('qos130070001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","tempStatus":[2],"allDevSns":[""],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:44,622 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:44,622 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:44,627 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:44,652 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[],"orderList":[],"tempOrders":[]}}')
2019-09-29 09:52:44,653 - INFO: ('response_return test_case_id is : ', 'qos130070001')
2019-09-29 09:52:44,653 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:44,653 - INFO: ('the test case is : ', 'qos130070001')
2019-09-29 09:52:44,653 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:44,654 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:44,909 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:44,910 - INFO: ('python receive message :', ('qos130080001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[]})'))
2019-09-29 09:52:44,910 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:44,910 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:44,916 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:44,940 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:44,941 - INFO: ('response_return test_case_id is : ', 'qos130080001')
2019-09-29 09:52:44,941 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:44,941 - INFO: ('the test case is : ', 'qos130080001')
2019-09-29 09:52:44,942 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:44,942 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:45,180 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:45,181 - INFO: ('python receive message :', ('qos130090001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[]})'))
2019-09-29 09:52:45,181 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:45,182 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:45,195 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:45,211 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:45,212 - INFO: ('response_return test_case_id is : ', 'qos130090001')
2019-09-29 09:52:45,213 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:45,213 - INFO: ('the test case is : ', 'qos130090001')
2019-09-29 09:52:45,213 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:45,214 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:45,454 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:45,454 - INFO: ('python receive message :', ('qos130100001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"tempStatus":[2],"allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:45,455 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:45,455 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:45,462 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:45,478 - INFO: ('wait dubbo return ', '{"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:45,479 - INFO: ('response_return test_case_id is : ', 'qos130100001')
2019-09-29 09:52:45,479 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:45,480 - INFO: ('the test case is : ', 'qos130100001')
2019-09-29 09:52:45,480 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:45,481 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:45,755 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:45,756 - INFO: ('python receive message :', ('qos130110001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:45,756 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:45,757 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:45,762 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:45,787 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}]}}')
2019-09-29 09:52:45,788 - INFO: ('response_return test_case_id is : ', 'qos130110001')
2019-09-29 09:52:45,788 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:45,788 - INFO: ('the test case is : ', 'qos130110001')
2019-09-29 09:52:45,789 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:45,789 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:46,028 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:46,029 - INFO: ('python receive message :', ('qos130120001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","allDevSns":["2059a0caa3d9"],"paymentWay":null,"appointStatus":[1]})'))
2019-09-29 09:52:46,029 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:46,030 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:46,038 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:46,069 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:46,070 - INFO: ('response_return test_case_id is : ', 'qos130120001')
2019-09-29 09:52:46,070 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:46,071 - INFO: ('the test case is : ', 'qos130120001')
2019-09-29 09:52:46,071 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:46,072 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:46,287 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:46,288 - INFO: ('python receive message :', ('qos130130001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["2059a0caa3d9"],"appointStatus":[1]})'))
2019-09-29 09:52:46,288 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:46,288 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:46,300 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:46,330 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[{"id":18418461,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1568822400,"payState":2,"orderType":1,"totalFee":1.0,"packageMonth":1,"createTime":1566176572,"updateTime":1566176889,"paymentWay":"null","orderDevice":2,"actualPrice":1.0,"clientType":"APP"}]}}')
2019-09-29 09:52:46,331 - INFO: ('response_return test_case_id is : ', 'qos130130001')
2019-09-29 09:52:46,331 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:46,332 - INFO: ('the test case is : ', 'qos130130001')
2019-09-29 09:52:46,332 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:46,333 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:46,580 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:46,581 - INFO: ('python receive message :', ('qos130140001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:46,581 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:46,581 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:46,589 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:46,602 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"orderList":[]}}')
2019-09-29 09:52:46,603 - INFO: ('response_return test_case_id is : ', 'qos130140001')
2019-09-29 09:52:46,603 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:46,604 - INFO: ('the test case is : ', 'qos130140001')
2019-09-29 09:52:46,605 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:46,606 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:46,851 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:46,852 - INFO: ('python receive message :', ('qos130150001', 'invoke com.cmiot.qos.api.order.QueryAllOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","tempStatus":[2],"allDevSns":["aaabbbccc"],"appointStatus":[1]})'))
2019-09-29 09:52:46,853 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:46,853 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:46,859 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:46,881 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"appointOrderList":[{"id":300,"area":"53","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"sjkj_hka1","effectiveTime":1510761600000,"createTime":1510592158000,"updateTime":1510803841000,"cost":1200,"oprcode":"01","effect":1,"pkgname":"手机看家7天标准包","monthNum":13,"saveDay":7,"typemodel":"","state":1}],"orderList":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"paymentWay":"1"}],"tempOrders":[]}}')
2019-09-29 09:52:46,882 - INFO: ('response_return test_case_id is : ', 'qos130150001')
2019-09-29 09:52:46,883 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:46,883 - INFO: ('the test case is : ', 'qos130150001')
2019-09-29 09:52:46,883 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:46,884 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,021 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,021 - INFO: ('python receive message :', ('qos140010001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19759589","devices":["2059a0caa3d9"]})'))
2019-09-29 09:52:47,022 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,022 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,028 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,068 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:47,069 - INFO: ('response_return test_case_id is : ', 'qos140010001')
2019-09-29 09:52:47,069 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,070 - INFO: ('the test case is : ', 'qos140010001')
2019-09-29 09:52:47,070 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,070 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,110 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:47,111 - INFO: ('the query result is:', ((3,),))
2019-09-29 09:52:47,218 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,219 - INFO: ('python receive message :', ('qos140020001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devices":["2059a0caa3d9"]})'))
2019-09-29 09:52:47,219 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,220 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,227 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,253 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:47,254 - INFO: ('response_return test_case_id is : ', 'qos140020001')
2019-09-29 09:52:47,255 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,255 - INFO: ('the test case is : ', 'qos140020001')
2019-09-29 09:52:47,255 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,256 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,308 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:47,309 - INFO: ('the query result is:', ((3,),))
2019-09-29 09:52:47,407 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,407 - INFO: ('python receive message :', ('qos140030001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19759589"})'))
2019-09-29 09:52:47,408 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,408 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,416 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,427 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:47,428 - INFO: ('response_return test_case_id is : ', 'qos140030001')
2019-09-29 09:52:47,429 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,429 - INFO: ('the test case is : ', 'qos140030001')
2019-09-29 09:52:47,430 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,430 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,478 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:47,479 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:47,558 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,559 - INFO: ('python receive message :', ('qos140040001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"userId":"19759589"})'))
2019-09-29 09:52:47,559 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,559 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,563 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,575 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:47,576 - INFO: ('response_return test_case_id is : ', 'qos140040001')
2019-09-29 09:52:47,576 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,576 - INFO: ('the test case is : ', 'qos140040001')
2019-09-29 09:52:47,577 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,577 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,630 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:47,630 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:47,740 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,741 - INFO: ('python receive message :', ('qos140050001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devices":"2059a0caa3d9"})'))
2019-09-29 09:52:47,741 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,741 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,746 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,754 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:47,755 - INFO: ('response_return test_case_id is : ', 'qos140050001')
2019-09-29 09:52:47,755 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,755 - INFO: ('the test case is : ', 'qos140050001')
2019-09-29 09:52:47,756 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,756 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:47,793 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:47,794 - INFO: ('the query result is:', ((2,),))
2019-09-29 09:52:47,915 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:47,915 - INFO: ('python receive message :', ('qos140060001', 'invoke com.cmiot.qos.api.ClearNonPaymentOrder.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devices":["2059A0CAA3d9"]})'))
2019-09-29 09:52:47,916 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:47,917 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:47,927 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:47,967 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:47,968 - INFO: ('response_return test_case_id is : ', 'qos140060001')
2019-09-29 09:52:47,969 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:47,969 - INFO: ('the test case is : ', 'qos140060001')
2019-09-29 09:52:47,969 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:47,970 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,019 - INFO: ('query sql is： :', "select pay_state  from t_ordertemp_table where phone_number = '13618254716' and payment_way in (1,2)")
2019-09-29 09:52:48,020 - INFO: ('the query result is:', ((3,),))
2019-09-29 09:52:48,137 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,137 - INFO: ('python receive message :', ('qos150010001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716","devices":["2059a0caa3d9","cde010000001"]})'))
2019-09-29 09:52:48,138 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,138 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,145 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,168 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800},{"orderId":"300","orderArea":"53","orderPeople":"13618254716","orderTime":1510592158000,"payType":3,"payPrice":1200.0,"orderType":100003,"oprerationType":"1000000009","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"sjkj_hka1","itemUse":5,"startTime":1510761600000}]}')
2019-09-29 09:52:48,169 - INFO: ('response_return test_case_id is : ', 'qos150010001')
2019-09-29 09:52:48,169 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,170 - INFO: ('the test case is : ', 'qos150010001')
2019-09-29 09:52:48,170 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,170 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,286 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,286 - INFO: ('python receive message :', ('qos150020001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"12345678910","devices":["2059a0caa3d9",""]})'))
2019-09-29 09:52:48,287 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,288 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,294 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,321 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800},{"orderId":"300","orderArea":"53","orderPeople":"13618254716","orderTime":1510592158000,"payType":3,"payPrice":1200.0,"orderType":100003,"oprerationType":"1000000009","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"sjkj_hka1","itemUse":5,"startTime":1510761600000}]}')
2019-09-29 09:52:48,322 - INFO: ('response_return test_case_id is : ', 'qos150020001')
2019-09-29 09:52:48,322 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,323 - INFO: ('the test case is : ', 'qos150020001')
2019-09-29 09:52:48,323 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,324 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,446 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,446 - INFO: ('python receive message :', ('qos150030001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716","devices":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:48,447 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,447 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,453 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,489 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"orderId":"100000441381","orderSerialNum":"2019081909025205206222","orderArea":"451","orderPeople":"13618254716","orderTime":1566176735,"payType":1,"payPrice":1.0,"orderType":100001,"oprerationType":"1000000001","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"39_month_7_01","itemUse":1,"startTime":1566144000,"endTime":1600444800},{"orderId":"300","orderArea":"53","orderPeople":"13618254716","orderTime":1510592158000,"payType":3,"payPrice":1200.0,"orderType":100003,"oprerationType":"1000000009","resultCode":1,"deviceMac":"2059a0caa3d9","itemCode":"sjkj_hka1","itemUse":5,"startTime":1510761600000}]}')
2019-09-29 09:52:48,490 - INFO: ('response_return test_case_id is : ', 'qos150030001')
2019-09-29 09:52:48,490 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,491 - INFO: ('the test case is : ', 'qos150030001')
2019-09-29 09:52:48,491 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,492 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,613 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,613 - INFO: ('python receive message :', ('qos150040001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"12345678910","devices":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:48,613 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,614 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,619 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,634 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:48,635 - INFO: ('response_return test_case_id is : ', 'qos150040001')
2019-09-29 09:52:48,636 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,637 - INFO: ('the test case is : ', 'qos150040001')
2019-09-29 09:52:48,637 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,638 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,749 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,750 - INFO: ('python receive message :', ('qos150050001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"","devices":["aaaaa","bbbbb"]})'))
2019-09-29 09:52:48,751 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,751 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,757 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,765 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:48,766 - INFO: ('response_return test_case_id is : ', 'qos150050001')
2019-09-29 09:52:48,767 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,767 - INFO: ('the test case is : ', 'qos150050001')
2019-09-29 09:52:48,768 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,768 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:48,915 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:48,916 - INFO: ('python receive message :', ('qos150060001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716","devices":""})'))
2019-09-29 09:52:48,916 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:48,917 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:48,924 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:48,934 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:48,935 - INFO: ('response_return test_case_id is : ', 'qos150060001')
2019-09-29 09:52:48,936 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:48,936 - INFO: ('the test case is : ', 'qos150060001')
2019-09-29 09:52:48,937 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:48,937 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,048 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,049 - INFO: ('python receive message :', ('qos150070001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":["13618254716"],"devices":""})'))
2019-09-29 09:52:49,049 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,050 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,057 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,072 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:49,073 - INFO: ('response_return test_case_id is : ', 'qos150070001')
2019-09-29 09:52:49,073 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,074 - INFO: ('the test case is : ', 'qos150070001')
2019-09-29 09:52:49,075 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,075 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,198 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,198 - INFO: ('python receive message :', ('qos150080001', 'invoke com.cmiot.qos.api.QueryActiveOrderByPhoneAndMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:49,199 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,200 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,207 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,217 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:49,218 - INFO: ('response_return test_case_id is : ', 'qos150080001')
2019-09-29 09:52:49,218 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,219 - INFO: ('the test case is : ', 'qos150080001')
2019-09-29 09:52:49,219 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,219 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,397 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,400 - INFO: ('python receive message :', ('qos160010001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 09:52:49,401 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,401 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,408 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,424 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 09:52:49,425 - INFO: ('response_return test_case_id is : ', 'qos160010001')
2019-09-29 09:52:49,425 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,426 - INFO: ('the test case is : ', 'qos160010001')
2019-09-29 09:52:49,426 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,427 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,444 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 09:52:49,539 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,539 - INFO: ('python receive message :', ('qos160020001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 09:52:49,541 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,542 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,550 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,562 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 09:52:49,563 - INFO: ('response_return test_case_id is : ', 'qos160020001')
2019-09-29 09:52:49,563 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,563 - INFO: ('the test case is : ', 'qos160020001')
2019-09-29 09:52:49,564 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,564 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,578 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 09:52:49,688 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,689 - INFO: ('python receive message :', ('qos160030001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059A0CAA3D9"})'))
2019-09-29 09:52:49,689 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,689 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,696 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,708 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 09:52:49,709 - INFO: ('response_return test_case_id is : ', 'qos160030001')
2019-09-29 09:52:49,710 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,710 - INFO: ('the test case is : ', 'qos160030001')
2019-09-29 09:52:49,711 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,711 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,726 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 09:52:49,815 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,816 - INFO: ('python receive message :', ('qos160040001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"aaabbbccc"})'))
2019-09-29 09:52:49,816 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,816 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,822 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,833 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 09:52:49,833 - INFO: ('response_return test_case_id is : ', 'qos160040001')
2019-09-29 09:52:49,834 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,834 - INFO: ('the test case is : ', 'qos160040001')
2019-09-29 09:52:49,834 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,835 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:49,944 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:49,944 - INFO: ('python receive message :', ('qos160050001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":""})'))
2019-09-29 09:52:49,945 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:49,945 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:49,949 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:49,956 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:49,956 - INFO: ('response_return test_case_id is : ', 'qos160050001')
2019-09-29 09:52:49,957 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:49,957 - INFO: ('the test case is : ', 'qos160050001')
2019-09-29 09:52:49,957 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:49,958 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,049 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,049 - INFO: ('python receive message :', ('qos160060001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":""})'))
2019-09-29 09:52:50,050 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,050 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,057 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,065 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"设备mac不能为空"}')
2019-09-29 09:52:50,066 - INFO: ('response_return test_case_id is : ', 'qos160060001')
2019-09-29 09:52:50,066 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,066 - INFO: ('the test case is : ', 'qos160060001')
2019-09-29 09:52:50,067 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,067 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,206 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,207 - INFO: ('python receive message :', ('qos170010001', 'invoke com.cmiot.qos.api.order.QueryRevOrderCountService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":13618254716})'))
2019-09-29 09:52:50,207 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,208 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,215 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,227 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"totalNum":1}}')
2019-09-29 09:52:50,228 - INFO: ('response_return test_case_id is : ', 'qos170010001')
2019-09-29 09:52:50,228 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,228 - INFO: ('the test case is : ', 'qos170010001')
2019-09-29 09:52:50,229 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,229 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,324 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,324 - INFO: ('python receive message :', ('qos170020001', 'invoke com.cmiot.qos.api.order.QueryRevOrderCountService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":13618254716})'))
2019-09-29 09:52:50,325 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,325 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,330 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,339 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"totalNum":0}}')
2019-09-29 09:52:50,340 - INFO: ('response_return test_case_id is : ', 'qos170020001')
2019-09-29 09:52:50,341 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,341 - INFO: ('the test case is : ', 'qos170020001')
2019-09-29 09:52:50,341 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,342 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,443 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,444 - INFO: ('python receive message :', ('qos170030001', 'invoke com.cmiot.qos.api.order.QueryRevOrderCountService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":11122223333})'))
2019-09-29 09:52:50,445 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,445 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,451 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,465 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"totalNum":0}}')
2019-09-29 09:52:50,466 - INFO: ('response_return test_case_id is : ', 'qos170030001')
2019-09-29 09:52:50,466 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,467 - INFO: ('the test case is : ', 'qos170030001')
2019-09-29 09:52:50,467 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,468 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,596 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,596 - INFO: ('python receive message :', ('qos170040001', 'invoke com.cmiot.qos.api.order.QueryRevOrderCountService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":""})'))
2019-09-29 09:52:50,597 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,597 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,605 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,613 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:50,614 - INFO: ('response_return test_case_id is : ', 'qos170040001')
2019-09-29 09:52:50,615 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,615 - INFO: ('the test case is : ', 'qos170040001')
2019-09-29 09:52:50,615 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,616 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,735 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,736 - INFO: ('python receive message :', ('qos170050001', 'invoke com.cmiot.qos.api.order.QueryRevOrderCountService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:50,737 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,737 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,746 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,753 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:50,754 - INFO: ('response_return test_case_id is : ', 'qos170050001')
2019-09-29 09:52:50,754 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,754 - INFO: ('the test case is : ', 'qos170050001')
2019-09-29 09:52:50,755 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,755 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,859 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:50,859 - INFO: ('python receive message :', ('qos180010001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"orderNo":"11122233310","outOrderNo":"abcde123456","phonePay":"13618254716","packageCode":"000111222","areaCode":"023"})'))
2019-09-29 09:52:50,860 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:50,861 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:50,875 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:50,906 - INFO: ('wait dubbo return ', '{"data":9460517,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:50,906 - INFO: ('response_return test_case_id is : ', 'qos180010001')
2019-09-29 09:52:50,907 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:50,907 - INFO: ('the test case is : ', 'qos180010001')
2019-09-29 09:52:50,907 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:50,908 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:50,951 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:50,952 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:51,018 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,018 - INFO: ('python receive message :', ('qos180020001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"outOrderNo":"abcde123456","phonePay":"13618254716","packageCode":"000111222","areaCode":"023"})'))
2019-09-29 09:52:51,019 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,019 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,026 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,040 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,041 - INFO: ('response_return test_case_id is : ', 'qos180020001')
2019-09-29 09:52:51,044 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,044 - INFO: ('the test case is : ', 'qos180020001')
2019-09-29 09:52:51,045 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,045 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,097 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,098 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,170 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,170 - INFO: ('python receive message :', ('qos180030001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"orderNo":"11122233310","phonePay":"13618254716","packageCode":"000111222","areaCode":"023"})'))
2019-09-29 09:52:51,171 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,171 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,176 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,186 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,187 - INFO: ('response_return test_case_id is : ', 'qos180030001')
2019-09-29 09:52:51,187 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,187 - INFO: ('the test case is : ', 'qos180030001')
2019-09-29 09:52:51,188 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,188 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,226 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,227 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,285 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,286 - INFO: ('python receive message :', ('qos180040001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"orderNo":"11122233310","outOrderNo":"abcde123456","packageCode":"000111222","areaCode":"023"})'))
2019-09-29 09:52:51,286 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,287 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,293 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,307 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,308 - INFO: ('response_return test_case_id is : ', 'qos180040001')
2019-09-29 09:52:51,308 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,308 - INFO: ('the test case is : ', 'qos180040001')
2019-09-29 09:52:51,309 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,309 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,364 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,365 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,431 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,432 - INFO: ('python receive message :', ('qos180050001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"orderNo":"11122233310","outOrderNo":"abcde123456","phonePay":"13618254716","areaCode":"023"})'))
2019-09-29 09:52:51,432 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,433 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,438 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,461 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,462 - INFO: ('response_return test_case_id is : ', 'qos180050001')
2019-09-29 09:52:51,462 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,463 - INFO: ('the test case is : ', 'qos180050001')
2019-09-29 09:52:51,463 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,463 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,517 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,519 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,577 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,577 - INFO: ('python receive message :', ('qos180060001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({"orderNo":"11122233310","outOrderNo":"abcde123456","phonePay":"13618254716","packageCode":"000111222"})'))
2019-09-29 09:52:51,578 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,578 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,584 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,596 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,597 - INFO: ('response_return test_case_id is : ', 'qos180060001')
2019-09-29 09:52:51,597 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,598 - INFO: ('the test case is : ', 'qos180060001')
2019-09-29 09:52:51,598 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,598 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,647 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,648 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,706 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,706 - INFO: ('python receive message :', ('qos180060001', 'invoke com.cmiot.qos.api.order.AddRevOrderService.addRevOrderService({})'))
2019-09-29 09:52:51,707 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,707 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,712 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,727 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:51,728 - INFO: ('response_return test_case_id is : ', 'qos180060001')
2019-09-29 09:52:51,729 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,729 - INFO: ('the test case is : ', 'qos180060001')
2019-09-29 09:52:51,730 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,730 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,779 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,780 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:51,901 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:51,902 - INFO: ('python receive message :', ('qos190010001', 'invoke com.cmiot.qos.api.order.DeleteRevOrderByIdService.deleteRevOrderByIdService(9419293)'))
2019-09-29 09:52:51,902 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:51,902 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:51,908 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:51,924 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:51,925 - INFO: ('response_return test_case_id is : ', 'qos190010001')
2019-09-29 09:52:51,926 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:51,926 - INFO: ('the test case is : ', 'qos190010001')
2019-09-29 09:52:51,927 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:51,927 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:51,978 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:51,979 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:52,032 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,033 - INFO: ('python receive message :', ('qos190020001', 'invoke com.cmiot.qos.api.order.DeleteRevOrderByIdService.deleteRevOrderByIdService(11122233)'))
2019-09-29 09:52:52,033 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,034 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,042 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,057 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:52,058 - INFO: ('response_return test_case_id is : ', 'qos190020001')
2019-09-29 09:52:52,059 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,059 - INFO: ('the test case is : ', 'qos190020001')
2019-09-29 09:52:52,059 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,060 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,113 - INFO: ('query sql is： :', "select count(1) from t_rev_user_order where phone_pay = '13618254716'")
2019-09-29 09:52:52,114 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:52,206 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,206 - INFO: ('python receive message :', ('qos190030001', 'invoke com.cmiot.qos.api.order.DeleteRevOrderByIdService.deleteRevOrderByIdService(aaabbbccc)'))
2019-09-29 09:52:52,207 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,207 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,213 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,220 - INFO: ('wait dubbo return ', "Invalid json argument, cause: Unexcepted token expect [ VALUE or ',' or ']' or '[' or '{' ] get 'IDENT'")
2019-09-29 09:52:52,221 - INFO: ('response_return test_case_id is : ', 'qos190030001')
2019-09-29 09:52:52,221 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,221 - INFO: ('the test case is : ', 'qos190030001')
2019-09-29 09:52:52,222 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,222 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,370 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,371 - INFO: ('python receive message :', ('qos190040001', 'invoke com.cmiot.qos.api.order.DeleteRevOrderByIdService.deleteRevOrderByIdService("")'))
2019-09-29 09:52:52,371 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,372 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,377 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,389 - INFO: ('wait dubbo return ', 'Failed to invoke method deleteRevOrderByIdService, cause: java.lang.NumberFormatException: For input string: ""')
2019-09-29 09:52:52,389 - INFO: ('response_return test_case_id is : ', 'qos190040001')
2019-09-29 09:52:52,390 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,391 - INFO: ('the test case is : ', 'qos190040001')
2019-09-29 09:52:52,391 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,391 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,517 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,517 - INFO: ('python receive message :', ('qos190050001', 'invoke com.cmiot.qos.api.order.DeleteRevOrderByIdService.deleteRevOrderByIdService({})'))
2019-09-29 09:52:52,518 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,518 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,524 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,536 - INFO: ('wait dubbo return ', 'Failed to invoke method deleteRevOrderByIdService, cause: java.lang.IllegalArgumentException')
2019-09-29 09:52:52,537 - INFO: ('response_return test_case_id is : ', 'qos190050001')
2019-09-29 09:52:52,538 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,538 - INFO: ('the test case is : ', 'qos190050001')
2019-09-29 09:52:52,539 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,540 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,663 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,664 - INFO: ('python receive message :', ('qos200010001', 'invoke com.cmiot.qos.api.order.QueryOrderCouponService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":"2019090610342904358706"})'))
2019-09-29 09:52:52,664 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,665 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,671 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,687 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":2804,"orderSerialNumber":"2019090610342904358706","useCouponNumber":"022240541519071582147690","couponCode":"022240541519071582147690","couponName":"满1元打零点1折","couponType":"2","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"70016254","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":11800.0,"discountAmount":11682.0,"payAmount":118.0,"usingStatus":0,"createTime":1563175563000,"updateTime":1563175563000}]}')
2019-09-29 09:52:52,688 - INFO: ('response_return test_case_id is : ', 'qos200010001')
2019-09-29 09:52:52,688 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,689 - INFO: ('the test case is : ', 'qos200010001')
2019-09-29 09:52:52,689 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,689 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,812 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,813 - INFO: ('python receive message :', ('qos200020001', 'invoke com.cmiot.qos.api.order.QueryOrderCouponService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":"2019090610342904358706aaa"})'))
2019-09-29 09:52:52,813 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,813 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,829 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,841 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:52,842 - INFO: ('response_return test_case_id is : ', 'qos200020001')
2019-09-29 09:52:52,842 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,842 - INFO: ('the test case is : ', 'qos200020001')
2019-09-29 09:52:52,843 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,843 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:52,961 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:52,962 - INFO: ('python receive message :', ('qos200030001', 'invoke com.cmiot.qos.api.order.QueryOrderCouponService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":""})'))
2019-09-29 09:52:52,962 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:52,963 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:52,969 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:52,976 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单流水号不能为空"}')
2019-09-29 09:52:52,977 - INFO: ('response_return test_case_id is : ', 'qos200030001')
2019-09-29 09:52:52,978 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:52,978 - INFO: ('the test case is : ', 'qos200030001')
2019-09-29 09:52:52,979 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:52,979 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,092 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,093 - INFO: ('python receive message :', ('qos200040001', 'invoke com.cmiot.qos.api.order.QueryOrderCouponService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:53,094 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,094 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,100 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,110 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单流水号不能为空"}')
2019-09-29 09:52:53,111 - INFO: ('response_return test_case_id is : ', 'qos200040001')
2019-09-29 09:52:53,111 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,111 - INFO: ('the test case is : ', 'qos200040001')
2019-09-29 09:52:53,112 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,112 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,229 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,230 - INFO: ('python receive message :', ('qos210010001', 'invoke com.cmiot.qos.api.order.QueryOrderContinueService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"1360012121302537"})'))
2019-09-29 09:52:53,230 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,230 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,239 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,254 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"id":5025,"orderSerialNumber":"2019071017395139443039","phoneNumber":"13618254716","devsn":"00121755a29b","effectiveTime":1562688000000,"packagecode":"nmm_7_month_1","orderUpdateTime":1562751706000,"orderId":"1360012121302537","createTime":1562751592000,"updateTime":1562814705000,"isContinue":0}}')
2019-09-29 09:52:53,255 - INFO: ('response_return test_case_id is : ', 'qos210010001')
2019-09-29 09:52:53,255 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,256 - INFO: ('the test case is : ', 'qos210010001')
2019-09-29 09:52:53,256 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,257 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,389 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,390 - INFO: ('python receive message :', ('qos210020001', 'invoke com.cmiot.qos.api.order.QueryOrderContinueService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":"aaabbbccc"})'))
2019-09-29 09:52:53,391 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,391 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,400 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,409 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:53,410 - INFO: ('response_return test_case_id is : ', 'qos210020001')
2019-09-29 09:52:53,410 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,411 - INFO: ('the test case is : ', 'qos210020001')
2019-09-29 09:52:53,411 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,411 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,535 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,536 - INFO: ('python receive message :', ('qos210030001', 'invoke com.cmiot.qos.api.order.QueryOrderContinueService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderId":""})'))
2019-09-29 09:52:53,536 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,537 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,543 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,551 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单id不能为空"}')
2019-09-29 09:52:53,552 - INFO: ('response_return test_case_id is : ', 'qos210030001')
2019-09-29 09:52:53,552 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,553 - INFO: ('the test case is : ', 'qos210030001')
2019-09-29 09:52:53,553 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,553 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,679 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,680 - INFO: ('python receive message :', ('qos210040001', 'invoke com.cmiot.qos.api.order.QueryOrderContinueService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:53,681 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,681 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,688 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,696 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"订单id不能为空"}')
2019-09-29 09:52:53,697 - INFO: ('response_return test_case_id is : ', 'qos210040001')
2019-09-29 09:52:53,697 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,698 - INFO: ('the test case is : ', 'qos210040001')
2019-09-29 09:52:53,698 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,698 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,834 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,835 - INFO: ('python receive message :', ('qos220010001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{phoneNum:13618254716,paymentWay:1})'))
2019-09-29 09:52:53,835 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,835 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,842 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:53,856 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":165,"phoneNumber":"13618254716","signTime":1562751619000,"createTime":1562751706000,"updateTime":1562751706000,"paymentWay":"1","isSign":1,"contractcode":"00852019071017390005300014000000"}]}')
2019-09-29 09:52:53,857 - INFO: ('response_return test_case_id is : ', 'qos220010001')
2019-09-29 09:52:53,858 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:53,858 - INFO: ('the test case is : ', 'qos220010001')
2019-09-29 09:52:53,859 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:53,859 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:53,985 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:53,985 - INFO: ('python receive message :', ('qos220020001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{phoneNum:12345678910,paymentWay:1})'))
2019-09-29 09:52:53,986 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:53,986 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:53,992 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,007 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:54,008 - INFO: ('response_return test_case_id is : ', 'qos220020001')
2019-09-29 09:52:54,008 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,009 - INFO: ('the test case is : ', 'qos220020001')
2019-09-29 09:52:54,009 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,010 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,122 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,123 - INFO: ('python receive message :', ('qos220030001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"","paymentWay":"1"})'))
2019-09-29 09:52:54,124 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,124 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,129 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,143 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:54,144 - INFO: ('response_return test_case_id is : ', 'qos220030001')
2019-09-29 09:52:54,144 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,145 - INFO: ('the test case is : ', 'qos220030001')
2019-09-29 09:52:54,145 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,146 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,259 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,260 - INFO: ('python receive message :', ('qos220040001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{paymentWay:1})'))
2019-09-29 09:52:54,261 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,261 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,266 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,274 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:54,275 - INFO: ('response_return test_case_id is : ', 'qos220040001')
2019-09-29 09:52:54,276 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,276 - INFO: ('the test case is : ', 'qos220040001')
2019-09-29 09:52:54,277 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,277 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,386 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,387 - INFO: ('python receive message :', ('qos220050001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716","paymentWay":"aabbcc"})'))
2019-09-29 09:52:54,387 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,388 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,394 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,414 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:54,414 - INFO: ('response_return test_case_id is : ', 'qos220050001')
2019-09-29 09:52:54,415 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,415 - INFO: ('the test case is : ', 'qos220050001')
2019-09-29 09:52:54,416 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,416 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,514 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,515 - INFO: ('python receive message :', ('qos220060001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716","paymentWay":""})'))
2019-09-29 09:52:54,515 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,516 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,522 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,536 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":165,"phoneNumber":"13618254716","signTime":1562751619000,"createTime":1562751706000,"updateTime":1562751706000,"paymentWay":"1","isSign":1,"contractcode":"00852019071017390005300014000000"}]}')
2019-09-29 09:52:54,537 - INFO: ('response_return test_case_id is : ', 'qos220060001')
2019-09-29 09:52:54,537 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,537 - INFO: ('the test case is : ', 'qos220060001')
2019-09-29 09:52:54,538 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,538 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,656 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,656 - INFO: ('python receive message :', ('qos220070001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNum":"13618254716"})'))
2019-09-29 09:52:54,658 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,658 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,664 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,680 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":165,"phoneNumber":"13618254716","signTime":1562751619000,"createTime":1562751706000,"updateTime":1562751706000,"paymentWay":"1","isSign":1,"contractcode":"00852019071017390005300014000000"}]}')
2019-09-29 09:52:54,681 - INFO: ('response_return test_case_id is : ', 'qos220070001')
2019-09-29 09:52:54,681 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,682 - INFO: ('the test case is : ', 'qos220070001')
2019-09-29 09:52:54,682 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,682 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,798 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,800 - INFO: ('python receive message :', ('qos220080001', 'invoke com.cmiot.qos.api.order.QueryUserSignService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:52:54,801 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,802 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,807 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,818 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:52:54,819 - INFO: ('response_return test_case_id is : ', 'qos220080001')
2019-09-29 09:52:54,819 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,819 - INFO: ('the test case is : ', 'qos220080001')
2019-09-29 09:52:54,820 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,820 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:54,967 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:54,967 - INFO: ('python receive message :', ('qos230010001', 'invoke com.cmiot.qos.api.order.QueryAllRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{state:0})'))
2019-09-29 09:52:54,968 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:54,968 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:54,979 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:54,992 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:54,993 - INFO: ('response_return test_case_id is : ', 'qos230010001')
2019-09-29 09:52:54,994 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:54,994 - INFO: ('the test case is : ', 'qos230010001')
2019-09-29 09:52:54,995 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:54,995 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,012 - INFO: ('13618254716 is not in actual result ',)
2019-09-29 09:52:55,104 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,105 - INFO: ('python receive message :', ('qos230020001', 'invoke com.cmiot.qos.api.order.QueryAllRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{state:111})'))
2019-09-29 09:52:55,105 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,106 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,111 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,122 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:55,123 - INFO: ('response_return test_case_id is : ', 'qos230020001')
2019-09-29 09:52:55,123 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,124 - INFO: ('the test case is : ', 'qos230020001')
2019-09-29 09:52:55,124 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,125 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,267 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,268 - INFO: ('python receive message :', ('qos230030001', 'invoke com.cmiot.qos.api.order.QueryAllRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"此处为空的时候无法返回结果，需要走查源码"})'))
2019-09-29 09:52:55,268 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,269 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,274 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,294 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:55,294 - INFO: ('response_return test_case_id is : ', 'qos230030001')
2019-09-29 09:52:55,295 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,295 - INFO: ('the test case is : ', 'qos230030001')
2019-09-29 09:52:55,295 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,295 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,317 - INFO: ('"resultCode":"000000" is not in actual result ',)
2019-09-29 09:52:55,420 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,421 - INFO: ('python receive message :', ('qos230040001', 'invoke com.cmiot.qos.api.order.QueryAllRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"aaabbb"})'))
2019-09-29 09:52:55,421 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,422 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,430 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,438 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:55,439 - INFO: ('response_return test_case_id is : ', 'qos230040001')
2019-09-29 09:52:55,440 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,440 - INFO: ('the test case is : ', 'qos230040001')
2019-09-29 09:52:55,440 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,441 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,562 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,562 - INFO: ('python receive message :', ('qos230050001', 'invoke com.cmiot.qos.api.order.QueryAllRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"此处为空的时候无法返回结果，需要走查源码"})'))
2019-09-29 09:52:55,563 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,563 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,571 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,578 - INFO: ('wait dubbo return ', "Invalid json argument, cause: Unexcepted token expect [ VALUE or '[' or '{' ] get '}'")
2019-09-29 09:52:55,579 - INFO: ('response_return test_case_id is : ', 'qos230050001')
2019-09-29 09:52:55,579 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,579 - INFO: ('the test case is : ', 'qos230050001')
2019-09-29 09:52:55,579 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,579 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,600 - INFO: ('"resultCode":"000000" is not in actual result ',)
2019-09-29 09:52:55,690 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,691 - INFO: ('python receive message :', ('qos240010001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:55,691 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,691 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,696 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,717 - INFO: ('wait dubbo return ', '{"data":4971,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:55,718 - INFO: ('response_return test_case_id is : ', 'qos240010001')
2019-09-29 09:52:55,719 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,720 - INFO: ('the test case is : ', 'qos240010001')
2019-09-29 09:52:55,720 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,721 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,759 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:55,760 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:55,821 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,822 - INFO: ('python receive message :', ('qos240020001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:55,822 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,823 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,830 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,857 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:55,858 - INFO: ('response_return test_case_id is : ', 'qos240020001')
2019-09-29 09:52:55,859 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,859 - INFO: ('the test case is : ', 'qos240020001')
2019-09-29 09:52:55,860 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,860 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:55,898 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:55,899 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:55,953 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:55,954 - INFO: ('python receive message :', ('qos240030001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:55,954 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:55,954 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:55,961 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:55,985 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:55,986 - INFO: ('response_return test_case_id is : ', 'qos240030001')
2019-09-29 09:52:55,987 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:55,987 - INFO: ('the test case is : ', 'qos240030001')
2019-09-29 09:52:55,987 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:55,988 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,036 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,036 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:56,101 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,102 - INFO: ('python receive message :', ('qos240040001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponName":"mytest","couponType":"2","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,102 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,103 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,108 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,127 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:56,128 - INFO: ('response_return test_case_id is : ', 'qos240040001')
2019-09-29 09:52:56,129 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,130 - INFO: ('the test case is : ', 'qos240040001')
2019-09-29 09:52:56,130 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,131 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,180 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,181 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:56,254 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,254 - INFO: ('python receive message :', ('qos240050001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponType":"2","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,255 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,255 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,263 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,294 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:56,295 - INFO: ('response_return test_case_id is : ', 'qos240050001')
2019-09-29 09:52:56,295 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,296 - INFO: ('the test case is : ', 'qos240050001')
2019-09-29 09:52:56,296 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,296 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,344 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,345 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:56,399 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,400 - INFO: ('python receive message :', ('qos240060001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponMinusCash":"","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,400 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,400 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,406 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,421 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:56,422 - INFO: ('response_return test_case_id is : ', 'qos240060001')
2019-09-29 09:52:56,422 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,423 - INFO: ('the test case is : ', 'qos240060001')
2019-09-29 09:52:56,423 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,423 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,474 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,475 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:56,540 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,541 - INFO: ('python receive message :', ('qos240070001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","couponDiscount":"0.01","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,541 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,542 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,547 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,578 - INFO: ('wait dubbo return ', '{"data":4972,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:56,579 - INFO: ('response_return test_case_id is : ', 'qos240070001')
2019-09-29 09:52:56,579 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,580 - INFO: ('the test case is : ', 'qos240070001')
2019-09-29 09:52:56,580 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,581 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,620 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,621 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:56,692 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,693 - INFO: ('python receive message :', ('qos240080001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,694 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,694 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,702 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,724 - INFO: ('wait dubbo return ', '{"data":4973,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:56,725 - INFO: ('response_return test_case_id is : ', 'qos240080001')
2019-09-29 09:52:56,726 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,726 - INFO: ('the test case is : ', 'qos240080001')
2019-09-29 09:52:56,727 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,727 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,766 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,768 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:56,836 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,837 - INFO: ('python receive message :', ('qos240080001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","userId":"19926359","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,837 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,837 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:56,843 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:56,859 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:56,860 - INFO: ('response_return test_case_id is : ', 'qos240080001')
2019-09-29 09:52:56,861 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:56,862 - INFO: ('the test case is : ', 'qos240080001')
2019-09-29 09:52:56,862 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:56,863 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:56,919 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:56,920 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:56,994 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:56,995 - INFO: ('python receive message :', ('qos240100001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:56,997 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:56,999 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,006 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,028 - INFO: ('wait dubbo return ', '{"data":4974,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:57,029 - INFO: ('response_return test_case_id is : ', 'qos240100001')
2019-09-29 09:52:57,029 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,030 - INFO: ('the test case is : ', 'qos240100001')
2019-09-29 09:52:57,030 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,030 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,070 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,070 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:57,147 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,148 - INFO: ('python receive message :', ('qos240110001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:57,148 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,149 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,160 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,184 - INFO: ('wait dubbo return ', '{"data":4975,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:57,185 - INFO: ('response_return test_case_id is : ', 'qos240110001')
2019-09-29 09:52:57,186 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,186 - INFO: ('the test case is : ', 'qos240110001')
2019-09-29 09:52:57,186 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,187 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,237 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,238 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:57,314 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,314 - INFO: ('python receive message :', ('qos240120001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","packageCode":"nmm_7_year_1","discountAmount":"11682","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:57,315 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,315 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,323 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,337 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:57,338 - INFO: ('response_return test_case_id is : ', 'qos240120001')
2019-09-29 09:52:57,339 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,339 - INFO: ('the test case is : ', 'qos240120001')
2019-09-29 09:52:57,339 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,340 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,379 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,380 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:57,443 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,443 - INFO: ('python receive message :', ('qos240130001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","packageCode":"nmm_7_year_1","productPrice":"11800","payAmount":"118","usingStatus":"0"})'))
2019-09-29 09:52:57,443 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,444 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,450 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,467 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:57,468 - INFO: ('response_return test_case_id is : ', 'qos240130001')
2019-09-29 09:52:57,469 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,469 - INFO: ('the test case is : ', 'qos240130001')
2019-09-29 09:52:57,469 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,470 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,523 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,524 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:57,591 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,592 - INFO: ('python receive message :', ('qos240140001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","usingStatus":"0"})'))
2019-09-29 09:52:57,592 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,593 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,599 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,616 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:57,617 - INFO: ('response_return test_case_id is : ', 'qos240140001')
2019-09-29 09:52:57,618 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,618 - INFO: ('the test case is : ', 'qos240140001')
2019-09-29 09:52:57,619 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,619 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,676 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,677 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:57,753 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,754 - INFO: ('python receive message :', ('qos240150001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({"orderSerialNumber":"2019071515242904358999","useCouponNumber":"022240541519071582147999","couponCode":"022240541519071582147690","couponName":"mytest","couponType":"2","phoneNumber":"13618254716","packageCode":"nmm_7_year_1","productPrice":"11800","discountAmount":"11682","payAmount":"118"})'))
2019-09-29 09:52:57,754 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,755 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,762 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,779 - INFO: ('wait dubbo return ', '{"data":4976,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:57,780 - INFO: ('response_return test_case_id is : ', 'qos240150001')
2019-09-29 09:52:57,780 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,781 - INFO: ('the test case is : ', 'qos240150001')
2019-09-29 09:52:57,781 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,781 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:57,839 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:57,840 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:52:57,915 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:57,916 - INFO: ('python receive message :', ('qos240160001', 'invoke com.cmiot.qos.api.order.AddOrderCouponService.addOrderCouponService({})'))
2019-09-29 09:52:57,917 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:57,917 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:57,923 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:57,940 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000001","resultMsg":"服务器内部错误"}')
2019-09-29 09:52:57,941 - INFO: ('response_return test_case_id is : ', 'qos240160001')
2019-09-29 09:52:57,942 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:57,942 - INFO: ('the test case is : ', 'qos240160001')
2019-09-29 09:52:57,943 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:57,943 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,143 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,144 - INFO: ('python receive message :', ('qos250010001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"","outOrderNo":"",phonePay:"13618254716"})'))
2019-09-29 09:52:58,144 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,145 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,154 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,171 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,173 - INFO: ('response_return test_case_id is : ', 'qos250010001')
2019-09-29 09:52:58,173 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,174 - INFO: ('the test case is : ', 'qos250010001')
2019-09-29 09:52:58,174 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,175 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,317 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,318 - INFO: ('python receive message :', ('qos250020001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"2059a0caa3d9","outOrderNo":"",phonePay:""})'))
2019-09-29 09:52:58,318 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,319 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,327 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,341 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,343 - INFO: ('response_return test_case_id is : ', 'qos250020001')
2019-09-29 09:52:58,344 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,344 - INFO: ('the test case is : ', 'qos250020001')
2019-09-29 09:52:58,345 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,345 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,466 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,466 - INFO: ('python receive message :', ('qos250030001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"","outOrderNo":"fcha_cdm05",phonePay:""})'))
2019-09-29 09:52:58,467 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,467 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,477 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,497 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,498 - INFO: ('response_return test_case_id is : ', 'qos250030001')
2019-09-29 09:52:58,499 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,499 - INFO: ('the test case is : ', 'qos250030001')
2019-09-29 09:52:58,500 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,503 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,611 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,611 - INFO: ('python receive message :', ('qos250040001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"","outOrderNo":"fcha_cdm05",phonePay:"13618254716"})'))
2019-09-29 09:52:58,612 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,612 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,617 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,633 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,634 - INFO: ('response_return test_case_id is : ', 'qos250040001')
2019-09-29 09:52:58,634 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,635 - INFO: ('the test case is : ', 'qos250040001')
2019-09-29 09:52:58,636 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,636 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,752 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,753 - INFO: ('python receive message :', ('qos250050001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"2059a0caa3d9","outOrderNo":"",phonePay:"13618254716"})'))
2019-09-29 09:52:58,754 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,754 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,761 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,774 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,777 - INFO: ('response_return test_case_id is : ', 'qos250050001')
2019-09-29 09:52:58,777 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,778 - INFO: ('the test case is : ', 'qos250050001')
2019-09-29 09:52:58,778 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,779 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:58,891 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:58,892 - INFO: ('python receive message :', ('qos250060001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"2059a0caa3d9","outOrderNo":"fcha_cdm05",phonePay:""})'))
2019-09-29 09:52:58,892 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:58,892 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:58,901 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:58,917 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:58,918 - INFO: ('response_return test_case_id is : ', 'qos250060001')
2019-09-29 09:52:58,918 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:58,919 - INFO: ('the test case is : ', 'qos250060001')
2019-09-29 09:52:58,919 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:58,920 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,031 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,032 - INFO: ('python receive message :', ('qos250070001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"","devSn":"2059a0caa3d9","outOrderNo":"fcha_cdm05",phonePay:"13618254716"})'))
2019-09-29 09:52:59,032 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,033 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,038 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,055 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:59,056 - INFO: ('response_return test_case_id is : ', 'qos250070001')
2019-09-29 09:52:59,056 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,056 - INFO: ('the test case is : ', 'qos250070001')
2019-09-29 09:52:59,057 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,058 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,168 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,168 - INFO: ('python receive message :', ('qos250080001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"0","devSn":"2059a0caa3d9","outOrderNo":"fcha_cdm05",phonePay:"13618254716"})'))
2019-09-29 09:52:59,169 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,170 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,180 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,194 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:52:59,195 - INFO: ('response_return test_case_id is : ', 'qos250080001')
2019-09-29 09:52:59,195 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,195 - INFO: ('the test case is : ', 'qos250080001')
2019-09-29 09:52:59,196 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,196 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,328 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,329 - INFO: ('python receive message :', ('qos250090001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"99","devSn":"2059a0caa3d9","outOrderNo":"fcha_cdm05",phonePay:"13618254716"})'))
2019-09-29 09:52:59,330 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,330 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,343 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,357 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:52:59,358 - INFO: ('response_return test_case_id is : ', 'qos250090001')
2019-09-29 09:52:59,359 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,359 - INFO: ('the test case is : ', 'qos250090001')
2019-09-29 09:52:59,360 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,360 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,481 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,482 - INFO: ('python receive message :', ('qos250100001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"state":"aabbcc","devSn":"2059a0caa3d9","outOrderNo":"fcha_cdm05",phonePay:"13618254716"})'))
2019-09-29 09:52:59,483 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,483 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,491 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,497 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:52:59,498 - INFO: ('response_return test_case_id is : ', 'qos250100001')
2019-09-29 09:52:59,498 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,498 - INFO: ('the test case is : ', 'qos250100001')
2019-09-29 09:52:59,499 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,499 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,608 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,609 - INFO: ('python receive message :', ('qos250110001', 'invoke com.cmiot.qos.api.order.QueryUserRevOrderByCondition.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"此处载荷为空无法返回响应，建议走查代码"})'))
2019-09-29 09:52:59,609 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,610 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,615 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,620 - INFO: ('wait dubbo return ', "Invalid json argument, cause: Unexcepted token expect [ VALUE or '[' or '{' ] get '}'")
2019-09-29 09:52:59,620 - INFO: ('response_return test_case_id is : ', 'qos250110001')
2019-09-29 09:52:59,621 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,621 - INFO: ('the test case is : ', 'qos250110001')
2019-09-29 09:52:59,621 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,622 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,640 - INFO: ('"resultCode":"000000" is not in actual result ',)
2019-09-29 09:52:59,768 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,768 - INFO: ('python receive message :', ('qos260010001', 'invoke com.cmiot.qos.api.order.DeleteCouponByIdService.deleteCouponByIdService(2804)'))
2019-09-29 09:52:59,769 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,769 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,774 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,799 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:59,800 - INFO: ('response_return test_case_id is : ', 'qos260010001')
2019-09-29 09:52:59,800 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,801 - INFO: ('the test case is : ', 'qos260010001')
2019-09-29 09:52:59,801 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,802 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:52:59,852 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:52:59,853 - INFO: ('the query result is:', ((0,),))
2019-09-29 09:52:59,938 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:52:59,940 - INFO: ('python receive message :', ('qos260020001', 'invoke com.cmiot.qos.api.order.DeleteCouponByIdService.deleteCouponByIdService(00001)'))
2019-09-29 09:52:59,940 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:52:59,941 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:52:59,949 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:52:59,959 - INFO: ('wait dubbo return ', '{"data":null,"resultCode":"000000","resultMsg":"成功"}')
2019-09-29 09:52:59,960 - INFO: ('response_return test_case_id is : ', 'qos260020001')
2019-09-29 09:52:59,960 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:52:59,961 - INFO: ('the test case is : ', 'qos260020001')
2019-09-29 09:52:59,962 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:52:59,962 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,014 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:53:00,015 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:53:00,111 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,111 - INFO: ('python receive message :', ('qos260030001', 'invoke com.cmiot.qos.api.order.DeleteCouponByIdService.deleteCouponByIdService("")'))
2019-09-29 09:53:00,112 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,112 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:00,118 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:00,132 - INFO: ('wait dubbo return ', 'Failed to invoke method deleteCouponByIdService, cause: java.lang.NumberFormatException: For input string: ""')
2019-09-29 09:53:00,133 - INFO: ('response_return test_case_id is : ', 'qos260030001')
2019-09-29 09:53:00,133 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:00,134 - INFO: ('the test case is : ', 'qos260030001')
2019-09-29 09:53:00,134 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:00,135 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,174 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:53:00,175 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:53:00,263 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,263 - INFO: ('python receive message :', ('qos260020001', 'invoke com.cmiot.qos.api.order.DeleteCouponByIdService.deleteCouponByIdService(aabbcc)'))
2019-09-29 09:53:00,264 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,264 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:00,270 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:00,275 - INFO: ('wait dubbo return ', "Invalid json argument, cause: Unexcepted token expect [ VALUE or ',' or ']' or '[' or '{' ] get 'IDENT'")
2019-09-29 09:53:00,275 - INFO: ('response_return test_case_id is : ', 'qos260020001')
2019-09-29 09:53:00,276 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:00,276 - INFO: ('the test case is : ', 'qos260020001')
2019-09-29 09:53:00,277 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:00,277 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,318 - INFO: ('query sql is： :', "select count(1) from t_order_coupon_table where phone_number = '13618254716'")
2019-09-29 09:53:00,319 - INFO: ('the query result is:', ((1,),))
2019-09-29 09:53:00,484 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,484 - INFO: ('python receive message :', ('qos270010001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"13618254716","organizationCode":"","packageCode":""})'))
2019-09-29 09:53:00,485 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,485 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:00,491 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:00,510 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":"fcha_cdm05"}')
2019-09-29 09:53:00,511 - INFO: ('response_return test_case_id is : ', 'qos270010001')
2019-09-29 09:53:00,511 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:00,512 - INFO: ('the test case is : ', 'qos270010001')
2019-09-29 09:53:00,512 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:00,513 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,644 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,646 - INFO: ('python receive message :', ('qos270020001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"13618254716","organizationCode":"","packageCode":"199020170725000103"})'))
2019-09-29 09:53:00,646 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,647 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:00,652 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:00,680 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":"fcha_cdm05"}')
2019-09-29 09:53:00,680 - INFO: ('response_return test_case_id is : ', 'qos270020001')
2019-09-29 09:53:00,681 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:00,681 - INFO: ('the test case is : ', 'qos270020001')
2019-09-29 09:53:00,681 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:00,682 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,813 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,813 - INFO: ('python receive message :', ('qos270030001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"13618254716","organizationCode":"aaa","packageCode":"199020170725000103"})'))
2019-09-29 09:53:00,814 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,814 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:00,833 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:00,847 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"boss新接口套餐查询订单号:在order_table查询无此订单号"}')
2019-09-29 09:53:00,848 - INFO: ('response_return test_case_id is : ', 'qos270030001')
2019-09-29 09:53:00,848 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:00,848 - INFO: ('the test case is : ', 'qos270030001')
2019-09-29 09:53:00,849 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:00,849 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:00,996 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:00,996 - INFO: ('python receive message :', ('qos270040001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"","":"aaa","packageCode":"199020170725000103"})'))
2019-09-29 09:53:00,997 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:00,997 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,005 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,016 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:01,017 - INFO: ('response_return test_case_id is : ', 'qos270040001')
2019-09-29 09:53:01,017 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,017 - INFO: ('the test case is : ', 'qos270040001')
2019-09-29 09:53:01,018 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,018 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,137 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,138 - INFO: ('python receive message :', ('qos270050001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"","":"aaa","packageCode":""})'))
2019-09-29 09:53:01,139 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,139 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,149 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,161 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:01,163 - INFO: ('response_return test_case_id is : ', 'qos270050001')
2019-09-29 09:53:01,163 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,164 - INFO: ('the test case is : ', 'qos270050001')
2019-09-29 09:53:01,164 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,165 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,283 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,283 - INFO: ('python receive message :', ('qos270060001', 'invoke com.cmiot.qos.api.order.QueryOrderNumByPhone.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:53:01,284 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,284 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,291 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,301 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:01,302 - INFO: ('response_return test_case_id is : ', 'qos270060001')
2019-09-29 09:53:01,302 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,302 - INFO: ('the test case is : ', 'qos270060001')
2019-09-29 09:53:01,303 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,303 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,446 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,447 - INFO: ('python receive message :', ('qos280010001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","page":"1"})'))
2019-09-29 09:53:01,447 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,448 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,453 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,471 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01","failureTime":"2020-08-01","devSn":"","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:01,472 - INFO: ('response_return test_case_id is : ', 'qos280010001')
2019-09-29 09:53:01,472 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,472 - INFO: ('the test case is : ', 'qos280010001')
2019-09-29 09:53:01,472 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,473 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,592 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,593 - INFO: ('python receive message :', ('qos280020001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"12345678910","page":"1"})'))
2019-09-29 09:53:01,593 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,593 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,619 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,645 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:01,646 - INFO: ('response_return test_case_id is : ', 'qos280020001')
2019-09-29 09:53:01,647 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,647 - INFO: ('the test case is : ', 'qos280020001')
2019-09-29 09:53:01,647 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,648 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,759 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,759 - INFO: ('python receive message :', ('qos280030001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"","page":"1"})'))
2019-09-29 09:53:01,760 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,760 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,765 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,774 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:01,774 - INFO: ('response_return test_case_id is : ', 'qos280030001')
2019-09-29 09:53:01,775 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,775 - INFO: ('the test case is : ', 'qos280030001')
2019-09-29 09:53:01,775 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,776 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:01,884 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:01,886 - INFO: ('python receive message :', ('qos280040001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","page":""})'))
2019-09-29 09:53:01,886 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:01,887 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:01,894 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:01,909 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01","failureTime":"2020-08-01","devSn":"","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:01,910 - INFO: ('response_return test_case_id is : ', 'qos280040001')
2019-09-29 09:53:01,911 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:01,911 - INFO: ('the test case is : ', 'qos280040001')
2019-09-29 09:53:01,912 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:01,912 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,029 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,029 - INFO: ('python receive message :', ('qos280050001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","page":"aaabbb"})'))
2019-09-29 09:53:02,029 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,030 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,037 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,044 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:53:02,044 - INFO: ('response_return test_case_id is : ', 'qos280050001')
2019-09-29 09:53:02,045 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,045 - INFO: ('the test case is : ', 'qos280050001')
2019-09-29 09:53:02,046 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,046 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,179 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,180 - INFO: ('python receive message :', ('qos280050001', 'invoke com.cmiot.qos.api.order.QueryRevOrderService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:53:02,180 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,180 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,187 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,204 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:02,205 - INFO: ('response_return test_case_id is : ', 'qos280050001')
2019-09-29 09:53:02,205 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,206 - INFO: ('the test case is : ', 'qos280050001')
2019-09-29 09:53:02,206 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,206 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,372 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,373 - INFO: ('python receive message :', ('qos290010001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","devSnList":["2059a0caa3d9"],"state":"0"})'))
2019-09-29 09:53:02,374 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,374 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,380 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,397 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:02,398 - INFO: ('response_return test_case_id is : ', 'qos290010001')
2019-09-29 09:53:02,399 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,399 - INFO: ('the test case is : ', 'qos290010001')
2019-09-29 09:53:02,400 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,400 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,506 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,506 - INFO: ('python receive message :', ('qos290020001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716"})'))
2019-09-29 09:53:02,507 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,507 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,513 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,536 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:02,537 - INFO: ('response_return test_case_id is : ', 'qos290020001')
2019-09-29 09:53:02,537 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,538 - INFO: ('the test case is : ', 'qos290020001')
2019-09-29 09:53:02,538 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,539 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,650 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,651 - INFO: ('python receive message :', ('qos290030001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","devSnList":["2059a0caa3d9"]})'))
2019-09-29 09:53:02,651 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,652 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,658 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,671 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:02,671 - INFO: ('response_return test_case_id is : ', 'qos290030001')
2019-09-29 09:53:02,672 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,672 - INFO: ('the test case is : ', 'qos290030001')
2019-09-29 09:53:02,672 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,673 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,806 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,806 - INFO: ('python receive message :', ('qos290040001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","state":"0"})'))
2019-09-29 09:53:02,807 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,808 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,815 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:02,830 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":9419293,"orderNo":"2019073016474884533061","outOrderNo":"fcha_cdm05","phonePay":"13618254716","bossCode":"7000","packageCode":"199020170725000103","effectiveTime":"2019-06-01 00:00:00.0","failureTime":"2020-08-01 00:00:00.0","devSn":"2059a0caa3d9","keepDevSn":"","orderSrc":"01","payCost":900,"state":0,"changeFlag":0,"createTime":"2019-07-30 16:49:48.0","updateTime":"2019-07-30 16:50:54.0","paymentWay":"9","unsubState":0,"areaCode":"39","boundFlag":0}]}')
2019-09-29 09:53:02,831 - INFO: ('response_return test_case_id is : ', 'qos290040001')
2019-09-29 09:53:02,831 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:02,832 - INFO: ('the test case is : ', 'qos290040001')
2019-09-29 09:53:02,832 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:02,832 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:02,969 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:02,969 - INFO: ('python receive message :', ('qos290050001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","devSnList":["aaabbbccc"]})'))
2019-09-29 09:53:02,969 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:02,970 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:02,975 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,006 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:03,007 - INFO: ('response_return test_case_id is : ', 'qos290050001')
2019-09-29 09:53:03,007 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,007 - INFO: ('the test case is : ', 'qos290050001')
2019-09-29 09:53:03,008 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,008 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,134 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,134 - INFO: ('python receive message :', ('qos290060001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","state":"111"})'))
2019-09-29 09:53:03,135 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,135 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,143 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,153 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:03,154 - INFO: ('response_return test_case_id is : ', 'qos290060001')
2019-09-29 09:53:03,154 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,155 - INFO: ('the test case is : ', 'qos290060001')
2019-09-29 09:53:03,155 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,156 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,280 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,280 - INFO: ('python receive message :', ('qos290070001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"13618254716","state":"aaabbb"})'))
2019-09-29 09:53:03,280 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,281 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,286 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,298 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"验证对象不能为空"}')
2019-09-29 09:53:03,299 - INFO: ('response_return test_case_id is : ', 'qos290070001')
2019-09-29 09:53:03,300 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,300 - INFO: ('the test case is : ', 'qos290070001')
2019-09-29 09:53:03,301 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,303 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,419 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,419 - INFO: ('python receive message :', ('qos290080001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phone":"12345678910","devSnList":["2059a0caa3d9"],"state":"0"})'))
2019-09-29 09:53:03,420 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,420 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,425 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,439 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:03,440 - INFO: ('response_return test_case_id is : ', 'qos290080001')
2019-09-29 09:53:03,441 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,441 - INFO: ('the test case is : ', 'qos290080001')
2019-09-29 09:53:03,442 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,442 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,557 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,557 - INFO: ('python receive message :', ('qos290100001', 'invoke com.cmiot.qos.api.order.QueryRevOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{})'))
2019-09-29 09:53:03,558 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,558 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,567 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,579 - INFO: ('wait dubbo return ', '{"resultCode":"000003","resultMsg":"手机号不能为空"}')
2019-09-29 09:53:03,580 - INFO: ('response_return test_case_id is : ', 'qos290100001')
2019-09-29 09:53:03,580 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,581 - INFO: ('the test case is : ', 'qos290100001')
2019-09-29 09:53:03,581 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,581 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,718 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,719 - INFO: ('python receive message :', ('qos300010001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9","orderSerialNumber":"2019081909025205206222","phoneNumber":"13618254716"})'))
2019-09-29 09:53:03,719 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,719 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,725 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,737 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:03,738 - INFO: ('response_return test_case_id is : ', 'qos300010001')
2019-09-29 09:53:03,739 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,739 - INFO: ('the test case is : ', 'qos300010001')
2019-09-29 09:53:03,739 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,740 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,847 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,848 - INFO: ('python receive message :', ('qos300020001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9","phoneNumber":"13618254716"})'))
2019-09-29 09:53:03,848 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,849 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,862 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:03,885 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:03,885 - INFO: ('response_return test_case_id is : ', 'qos300020001')
2019-09-29 09:53:03,886 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:03,886 - INFO: ('the test case is : ', 'qos300020001')
2019-09-29 09:53:03,887 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:03,887 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:03,988 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:03,988 - INFO: ('python receive message :', ('qos300030001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":"2019081909025205206222","phoneNumber":"13618254716"})'))
2019-09-29 09:53:03,989 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:03,989 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:03,995 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,012 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:04,013 - INFO: ('response_return test_case_id is : ', 'qos300030001')
2019-09-29 09:53:04,014 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,014 - INFO: ('the test case is : ', 'qos300030001')
2019-09-29 09:53:04,014 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,015 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,121 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,122 - INFO: ('python receive message :', ('qos300040001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9","orderSerialNumber":"2019081909025205206222"})'))
2019-09-29 09:53:04,122 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,123 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,128 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,140 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:04,141 - INFO: ('response_return test_case_id is : ', 'qos300040001')
2019-09-29 09:53:04,141 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,142 - INFO: ('the test case is : ', 'qos300040001')
2019-09-29 09:53:04,142 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,142 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,233 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,233 - INFO: ('python receive message :', ('qos300050001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"phoneNumber":"13618254716"})'))
2019-09-29 09:53:04,234 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,234 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,240 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,257 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:04,258 - INFO: ('response_return test_case_id is : ', 'qos300050001')
2019-09-29 09:53:04,258 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,259 - INFO: ('the test case is : ', 'qos300050001')
2019-09-29 09:53:04,259 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,259 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,363 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,363 - INFO: ('python receive message :', ('qos300060001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"orderSerialNumber":"2019081909025205206222"})'))
2019-09-29 09:53:04,364 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,364 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,370 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,383 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:04,384 - INFO: ('response_return test_case_id is : ', 'qos300060001')
2019-09-29 09:53:04,384 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,384 - INFO: ('the test case is : ', 'qos300060001')
2019-09-29 09:53:04,385 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,385 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,482 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,482 - INFO: ('python receive message :', ('qos300070001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9"})'))
2019-09-29 09:53:04,483 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,483 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,490 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,509 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[{"id":100000441381,"orderSerialNumber":"2019081909025205206222","organizationCode":"451","phoneNumber":"13618254716","devSn":"2059a0caa3d9","packageCode":"39_month_7_01","effectiveTime":1566144000,"failureTime":1600444800,"systemState":0,"createTime":1566176735,"updateTime":1566176889,"isfromboss":"0","cost":1.0,"ordersource":"09","paymentWay":"1"}]}')
2019-09-29 09:53:04,510 - INFO: ('response_return test_case_id is : ', 'qos300070001')
2019-09-29 09:53:04,510 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,511 - INFO: ('the test case is : ', 'qos300070001')
2019-09-29 09:53:04,511 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,512 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,624 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,625 - INFO: ('python receive message :', ('qos300080001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"aaabbbccc","orderSerialNumber":"2019081909025205206222","phoneNumber":"13618254716"})'))
2019-09-29 09:53:04,625 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,626 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,632 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,648 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:04,649 - INFO: ('response_return test_case_id is : ', 'qos300080001')
2019-09-29 09:53:04,649 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,650 - INFO: ('the test case is : ', 'qos300080001')
2019-09-29 09:53:04,650 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,651 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,779 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,780 - INFO: ('python receive message :', ('qos300090001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9","orderSerialNumber":"201908191111111111111","phoneNumber":"13618254716"})'))
2019-09-29 09:53:04,781 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,781 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,788 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,802 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:04,803 - INFO: ('response_return test_case_id is : ', 'qos300090001')
2019-09-29 09:53:04,803 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,804 - INFO: ('the test case is : ', 'qos300090001')
2019-09-29 09:53:04,804 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,805 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:04,927 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:04,927 - INFO: ('python receive message :', ('qos300100001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"devSn":"2059a0caa3d9","orderSerialNumber":"2019081909025205206222","phoneNumber":"12345678910"})'))
2019-09-29 09:53:04,928 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:04,928 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:04,940 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:04,960 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":[]}')
2019-09-29 09:53:04,962 - INFO: ('response_return test_case_id is : ', 'qos300100001')
2019-09-29 09:53:04,962 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:04,963 - INFO: ('the test case is : ', 'qos300100001')
2019-09-29 09:53:04,964 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:04,964 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:05,071 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:05,072 - INFO: ('python receive message :', ('qos300110001', 'invoke com.cmiot.qos.api.order.QueryOrderByConditionService.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"此处应该报错，但是却查询出默认订单"})'))
2019-09-29 09:53:05,072 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:05,073 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:05,079 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:05,087 - INFO: ('wait dubbo return ', "Invalid json argument, cause: Unexcepted token expect [ VALUE or '[' or '{' ] get '}'")
2019-09-29 09:53:05,088 - INFO: ('response_return test_case_id is : ', 'qos300110001')
2019-09-29 09:53:05,088 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:05,089 - INFO: ('the test case is : ', 'qos300110001')
2019-09-29 09:53:05,089 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:05,090 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:05,103 - INFO: ('"resultCode":"000003" is not in actual result ',)
2019-09-29 09:53:28,965 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 09:53:28,966 - INFO: ('python receive message :', ('qos160010001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 09:53:28,967 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 09:53:28,968 - INFO: ('the mock_id flag is:', '0')
2019-09-29 09:53:28,975 - INFO: ('receive the dubbo request ...',)
2019-09-29 09:53:29,000 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 09:53:29,001 - INFO: ('response_return test_case_id is : ', 'qos160010001')
2019-09-29 09:53:29,002 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 09:53:29,002 - INFO: ('the test case is : ', 'qos160010001')
2019-09-29 09:53:29,003 - INFO: ('No need to use mock data,return ...',)
2019-09-29 09:53:29,003 - INFO: ('------------------ python return result ------------------',)
2019-09-29 09:53:29,018 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 10:01:30,229 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 10:01:30,229 - INFO: ('python receive message :', ('qos160010001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 10:01:30,230 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 10:01:30,230 - INFO: ('the mock_id flag is:', '0')
2019-09-29 10:01:30,238 - INFO: ('receive the dubbo request ...',)
2019-09-29 10:01:30,262 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 10:01:30,263 - INFO: ('response_return test_case_id is : ', 'qos160010001')
2019-09-29 10:01:30,264 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 10:01:30,264 - INFO: ('the test case is : ', 'qos160010001')
2019-09-29 10:01:30,264 - INFO: ('No need to use mock data,return ...',)
2019-09-29 10:01:30,265 - INFO: ('------------------ python return result ------------------',)
2019-09-29 10:01:30,278 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 10:03:16,886 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 10:03:16,887 - INFO: ('python receive message :', ('qos160020001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 10:03:16,888 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 10:03:16,888 - INFO: ('the mock_id flag is:', '0')
2019-09-29 10:03:16,898 - INFO: ('receive the dubbo request ...',)
2019-09-29 10:03:16,915 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 10:03:16,916 - INFO: ('response_return test_case_id is : ', 'qos160020001')
2019-09-29 10:03:16,917 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 10:03:16,918 - INFO: ('the test case is : ', 'qos160020001')
2019-09-29 10:03:16,918 - INFO: ('No need to use mock data,return ...',)
2019-09-29 10:03:16,918 - INFO: ('------------------ python return result ------------------',)
2019-09-29 10:03:16,931 - INFO: ('"frozenFlag":1 is not in actual result ',)
2019-09-29 10:04:56,038 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 10:04:56,038 - INFO: ('python receive message :', ('qos160020001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 10:04:56,039 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 10:04:56,040 - INFO: ('the mock_id flag is:', '0')
2019-09-29 10:04:56,045 - INFO: ('receive the dubbo request ...',)
2019-09-29 10:04:56,069 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":1}}')
2019-09-29 10:04:56,069 - INFO: ('response_return test_case_id is : ', 'qos160020001')
2019-09-29 10:04:56,070 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 10:04:56,070 - INFO: ('the test case is : ', 'qos160020001')
2019-09-29 10:04:56,070 - INFO: ('No need to use mock data,return ...',)
2019-09-29 10:04:56,071 - INFO: ('------------------ python return result ------------------',)
2019-09-29 10:08:58,178 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 10:08:58,179 - INFO: ('python receive message :', ('qos160020001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 10:08:58,180 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 10:08:58,180 - INFO: ('the mock_id flag is:', '0')
2019-09-29 10:08:58,186 - INFO: ('receive the dubbo request ...',)
2019-09-29 10:08:58,206 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":1}}')
2019-09-29 10:08:58,207 - INFO: ('response_return test_case_id is : ', 'qos160020001')
2019-09-29 10:08:58,207 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 10:08:58,207 - INFO: ('the test case is : ', 'qos160020001')
2019-09-29 10:08:58,208 - INFO: ('No need to use mock data,return ...',)
2019-09-29 10:08:58,208 - INFO: ('------------------ python return result ------------------',)
2019-09-29 10:09:39,856 - INFO: ('------------------ python received testcase ------------------',)
2019-09-29 10:09:39,857 - INFO: ('python receive message :', ('qos160010001', 'invoke com.cmiot.qos.api.order.CheckOrderFrozenByMac.invoke({"class":"com.cmiot.dhap.core.impl.PoolableBaseContext"}{"mac":"2059a0caa3d9"})'))
2019-09-29 10:09:39,858 - INFO: ('judge whether need the mock data:', '0')
2019-09-29 10:09:39,858 - INFO: ('the mock_id flag is:', '0')
2019-09-29 10:09:39,868 - INFO: ('receive the dubbo request ...',)
2019-09-29 10:09:39,880 - INFO: ('wait dubbo return ', '{"resultCode":"000000","resultMsg":"成功","data":{"frozenFlag":0}}')
2019-09-29 10:09:39,881 - INFO: ('response_return test_case_id is : ', 'qos160010001')
2019-09-29 10:09:39,882 - INFO: ('begin to return the mock data from db ... ',)
2019-09-29 10:09:39,882 - INFO: ('the test case is : ', 'qos160010001')
2019-09-29 10:09:39,883 - INFO: ('No need to use mock data,return ...',)
2019-09-29 10:09:39,883 - INFO: ('------------------ python return result ------------------',)
